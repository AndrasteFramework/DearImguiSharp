// <auto-generated/>

namespace DearImguiSharp
{
    /// <summary>
    /// Functions
    /// </summary>
    public static partial class ImGui
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImVec2* ImVec2_ImVec2Nil()</unmanaged>
        /// <unmanaged-short>ImVec2_ImVec2Nil</unmanaged-short>
        public static unsafe DearImguiSharp.ImVec2 ImVec2ImVec2Nil()
        {
            DearImguiSharp.ImVec2 __result__;
            __result__ = ImVec2_ImVec2Nil_();
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImVec2_ImVec2Nil", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern DearImguiSharp.ImVec2 ImVec2_ImVec2Nil_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImVec2_destroy([In] ImVec2* self)</unmanaged>
        /// <unmanaged-short>ImVec2_destroy</unmanaged-short>
        public static unsafe void ImVec2Destroy(DearImguiSharp.ImVec2 self)
        {
            ImVec2_destroy_(&self);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImVec2_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImVec2_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "x">No documentation.</param>
        /// <param name = "y">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImVec2* ImVec2_ImVec2Float([In] float _x,[In] float _y)</unmanaged>
        /// <unmanaged-short>ImVec2_ImVec2Float</unmanaged-short>
        public static unsafe DearImguiSharp.ImVec2 ImVec2ImVec2Float(System.Single x, System.Single y)
        {
            DearImguiSharp.ImVec2 __result__;
            __result__ = ImVec2_ImVec2Float_(x, y);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImVec2_ImVec2Float", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern DearImguiSharp.ImVec2 ImVec2_ImVec2Float_(float param0, float param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImVec4* ImVec4_ImVec4Nil()</unmanaged>
        /// <unmanaged-short>ImVec4_ImVec4Nil</unmanaged-short>
        public static unsafe DearImguiSharp.ImVec4 ImVec4ImVec4Nil()
        {
            DearImguiSharp.ImVec4 __result__;
            ImVec4_ImVec4Nil_(&__result__);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImVec4_ImVec4Nil", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImVec4_ImVec4Nil_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImVec4_destroy([In] ImVec4* self)</unmanaged>
        /// <unmanaged-short>ImVec4_destroy</unmanaged-short>
        public static unsafe void ImVec4Destroy(DearImguiSharp.ImVec4 self)
        {
            ImVec4_destroy_(&self);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImVec4_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImVec4_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "x">No documentation.</param>
        /// <param name = "y">No documentation.</param>
        /// <param name = "z">No documentation.</param>
        /// <param name = "w">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImVec4* ImVec4_ImVec4Float([In] float _x,[In] float _y,[In] float _z,[In] float _w)</unmanaged>
        /// <unmanaged-short>ImVec4_ImVec4Float</unmanaged-short>
        public static unsafe DearImguiSharp.ImVec4 ImVec4ImVec4Float(System.Single x, System.Single y, System.Single z, System.Single w)
        {
            DearImguiSharp.ImVec4 __result__;
            ImVec4_ImVec4Float_(&__result__, x, y, z, w);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImVec4_ImVec4Float", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImVec4_ImVec4Float_(void *param0, float param1, float param2, float param3, float param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "sharedFontAtlas">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiContext* igCreateContext([In] ImFontAtlas* shared_font_atlas)</unmanaged>
        /// <unmanaged-short>igCreateContext</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiContext CreateContext(ref DearImguiSharp.ImFontAtlas sharedFontAtlas)
        {
            DearImguiSharp.ImFontAtlas.__Native sharedFontAtlas_ = default (DearImguiSharp.ImFontAtlas.__Native);
            DearImguiSharp.ImGuiContext __result__;
            DearImguiSharp.ImGuiContext.__Native __result__native = default (DearImguiSharp.ImGuiContext.__Native);
            __result__ = default (DearImguiSharp.ImGuiContext);
            sharedFontAtlas.__MarshalTo(ref sharedFontAtlas_);
            igCreateContext_(&__result__native, &sharedFontAtlas_);
            __result__.__MarshalFrom(ref __result__native);
            sharedFontAtlas.__MarshalFree(ref sharedFontAtlas_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igCreateContext", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *igCreateContext_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "ctx">No documentation.</param>
        /// <unmanaged>void igDestroyContext([In] ImGuiContext* ctx)</unmanaged>
        /// <unmanaged-short>igDestroyContext</unmanaged-short>
        public static unsafe void DestroyContext(ref DearImguiSharp.ImGuiContext ctx)
        {
            DearImguiSharp.ImGuiContext.__Native ctx_ = default (DearImguiSharp.ImGuiContext.__Native);
            ctx.__MarshalTo(ref ctx_);
            igDestroyContext_(&ctx_);
            ctx.__MarshalFree(ref ctx_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igDestroyContext", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igDestroyContext_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiContext* igGetCurrentContext()</unmanaged>
        /// <unmanaged-short>igGetCurrentContext</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiContext GetCurrentContext()
        {
            DearImguiSharp.ImGuiContext __result__;
            DearImguiSharp.ImGuiContext.__Native __result__native = default (DearImguiSharp.ImGuiContext.__Native);
            __result__ = default (DearImguiSharp.ImGuiContext);
            igGetCurrentContext_(&__result__native);
            __result__.__MarshalFrom(ref __result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetCurrentContext", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *igGetCurrentContext_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "ctx">No documentation.</param>
        /// <unmanaged>void igSetCurrentContext([In] ImGuiContext* ctx)</unmanaged>
        /// <unmanaged-short>igSetCurrentContext</unmanaged-short>
        public static unsafe void SetCurrentContext(ref DearImguiSharp.ImGuiContext ctx)
        {
            DearImguiSharp.ImGuiContext.__Native ctx_ = default (DearImguiSharp.ImGuiContext.__Native);
            ctx.__MarshalTo(ref ctx_);
            igSetCurrentContext_(&ctx_);
            ctx.__MarshalFree(ref ctx_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetCurrentContext", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetCurrentContext_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "versionStr">No documentation.</param>
        /// <param name = "szIo">No documentation.</param>
        /// <param name = "szStyle">No documentation.</param>
        /// <param name = "szVec2">No documentation.</param>
        /// <param name = "szVec4">No documentation.</param>
        /// <param name = "szDrawvert">No documentation.</param>
        /// <param name = "szDrawidx">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igDebugCheckVersionAndDataLayout([In] const char* version_str,[In] size_t sz_io,[In] size_t sz_style,[In] size_t sz_vec2,[In] size_t sz_vec4,[In] size_t sz_drawvert,[In] size_t sz_drawidx)</unmanaged>
        /// <unmanaged-short>igDebugCheckVersionAndDataLayout</unmanaged-short>
        public static unsafe System.Boolean DebugCheckVersionAndDataLayout(System.String versionStr, SharpGen.Runtime.PointerSize szIo, SharpGen.Runtime.PointerSize szStyle, SharpGen.Runtime.PointerSize szVec2, SharpGen.Runtime.PointerSize szVec4, SharpGen.Runtime.PointerSize szDrawvert, SharpGen.Runtime.PointerSize szDrawidx)
        {
            System.IntPtr versionStr_;
            System.Boolean __result__;
            System.Byte __result__native;
            versionStr_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(versionStr);
            __result__native = igDebugCheckVersionAndDataLayout_((void *)versionStr_, (void *)szIo, (void *)szStyle, (void *)szVec2, (void *)szVec4, (void *)szDrawvert, (void *)szDrawidx);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(versionStr_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igDebugCheckVersionAndDataLayout", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igDebugCheckVersionAndDataLayout_(void *param0, void *param1, void *param2, void *param3, void *param4, void *param5, void *param6);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiIO* igGetIO()</unmanaged>
        /// <unmanaged-short>igGetIO</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiIO GetIO()
        {
            DearImguiSharp.ImGuiIO __result__;
            DearImguiSharp.ImGuiIO.__Native __result__native = default (DearImguiSharp.ImGuiIO.__Native);
            __result__ = default (DearImguiSharp.ImGuiIO);
            igGetIO_(&__result__native);
            __result__.__MarshalFrom(ref __result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetIO", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *igGetIO_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiStyle* igGetStyle()</unmanaged>
        /// <unmanaged-short>igGetStyle</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiStyle GetStyle()
        {
            DearImguiSharp.ImGuiStyle __result__;
            DearImguiSharp.ImGuiStyle.__Native __result__native = default (DearImguiSharp.ImGuiStyle.__Native);
            __result__ = default (DearImguiSharp.ImGuiStyle);
            igGetStyle_(&__result__native);
            __result__.__MarshalFrom(ref __result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetStyle", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *igGetStyle_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igNewFrame()</unmanaged>
        /// <unmanaged-short>igNewFrame</unmanaged-short>
        public static unsafe void NewFrame()
        {
            igNewFrame_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igNewFrame", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igNewFrame_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igEndFrame()</unmanaged>
        /// <unmanaged-short>igEndFrame</unmanaged-short>
        public static unsafe void EndFrame()
        {
            igEndFrame_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igEndFrame", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igEndFrame_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igRender()</unmanaged>
        /// <unmanaged-short>igRender</unmanaged-short>
        public static unsafe void Render()
        {
            igRender_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igRender", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igRender_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImDrawData* igGetDrawData()</unmanaged>
        /// <unmanaged-short>igGetDrawData</unmanaged-short>
        public static unsafe DearImguiSharp.ImDrawData GetDrawData()
        {
            DearImguiSharp.ImDrawData __result__;
            igGetDrawData_(&__result__);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetDrawData", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *igGetDrawData_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "openRef">No documentation.</param>
        /// <unmanaged>void igShowDemoWindow([In] bool* p_open)</unmanaged>
        /// <unmanaged-short>igShowDemoWindow</unmanaged-short>
        public static unsafe void ShowDemoWindow(System.Boolean openRef)
        {
            System.Byte openRef_;
            openRef_ = (System.Byte)(openRef ? 1 : 0);
            igShowDemoWindow_(&openRef_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igShowDemoWindow", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igShowDemoWindow_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "openRef">No documentation.</param>
        /// <unmanaged>void igShowAboutWindow([In] bool* p_open)</unmanaged>
        /// <unmanaged-short>igShowAboutWindow</unmanaged-short>
        public static unsafe void ShowAboutWindow(System.Boolean openRef)
        {
            System.Byte openRef_;
            openRef_ = (System.Byte)(openRef ? 1 : 0);
            igShowAboutWindow_(&openRef_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igShowAboutWindow", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igShowAboutWindow_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "openRef">No documentation.</param>
        /// <unmanaged>void igShowMetricsWindow([In] bool* p_open)</unmanaged>
        /// <unmanaged-short>igShowMetricsWindow</unmanaged-short>
        public static unsafe void ShowMetricsWindow(System.Boolean openRef)
        {
            System.Byte openRef_;
            openRef_ = (System.Byte)(openRef ? 1 : 0);
            igShowMetricsWindow_(&openRef_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igShowMetricsWindow", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igShowMetricsWindow_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "@ref">No documentation.</param>
        /// <unmanaged>void igShowStyleEditor([In] ImGuiStyle* ref)</unmanaged>
        /// <unmanaged-short>igShowStyleEditor</unmanaged-short>
        public static unsafe void ShowStyleEditor(ref DearImguiSharp.ImGuiStyle @ref)
        {
            DearImguiSharp.ImGuiStyle.__Native @ref_ = default (DearImguiSharp.ImGuiStyle.__Native);
            @ref.__MarshalTo(ref @ref_);
            igShowStyleEditor_(&@ref_);
            @ref.__MarshalFree(ref @ref_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igShowStyleEditor", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igShowStyleEditor_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igShowStyleSelector([In] const char* label)</unmanaged>
        /// <unmanaged-short>igShowStyleSelector</unmanaged-short>
        public static unsafe System.Boolean ShowStyleSelector(System.String label)
        {
            System.IntPtr label_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            __result__native = igShowStyleSelector_((void *)label_);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igShowStyleSelector", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igShowStyleSelector_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <unmanaged>void igShowFontSelector([In] const char* label)</unmanaged>
        /// <unmanaged-short>igShowFontSelector</unmanaged-short>
        public static unsafe void ShowFontSelector(System.String label)
        {
            System.IntPtr label_;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            igShowFontSelector_((void *)label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igShowFontSelector", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igShowFontSelector_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igShowUserGuide()</unmanaged>
        /// <unmanaged-short>igShowUserGuide</unmanaged-short>
        public static unsafe void ShowUserGuide()
        {
            igShowUserGuide_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igShowUserGuide", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igShowUserGuide_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>const char* igGetVersion()</unmanaged>
        /// <unmanaged-short>igGetVersion</unmanaged-short>
        public static unsafe System.String GetVersion()
        {
            System.String __result__;
            System.IntPtr __result__native;
            __result__native = igGetVersion_();
            __result__ = System.Runtime.InteropServices.Marshal.PtrToStringAnsi(__result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetVersion", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.IntPtr igGetVersion_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "dst">No documentation.</param>
        /// <unmanaged>void igStyleColorsDark([In] ImGuiStyle* dst)</unmanaged>
        /// <unmanaged-short>igStyleColorsDark</unmanaged-short>
        public static unsafe void StyleColorsDark(ref DearImguiSharp.ImGuiStyle dst)
        {
            DearImguiSharp.ImGuiStyle.__Native dst_ = default (DearImguiSharp.ImGuiStyle.__Native);
            dst.__MarshalTo(ref dst_);
            igStyleColorsDark_(&dst_);
            dst.__MarshalFree(ref dst_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igStyleColorsDark", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igStyleColorsDark_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "dst">No documentation.</param>
        /// <unmanaged>void igStyleColorsClassic([In] ImGuiStyle* dst)</unmanaged>
        /// <unmanaged-short>igStyleColorsClassic</unmanaged-short>
        public static unsafe void StyleColorsClassic(ref DearImguiSharp.ImGuiStyle dst)
        {
            DearImguiSharp.ImGuiStyle.__Native dst_ = default (DearImguiSharp.ImGuiStyle.__Native);
            dst.__MarshalTo(ref dst_);
            igStyleColorsClassic_(&dst_);
            dst.__MarshalFree(ref dst_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igStyleColorsClassic", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igStyleColorsClassic_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "dst">No documentation.</param>
        /// <unmanaged>void igStyleColorsLight([In] ImGuiStyle* dst)</unmanaged>
        /// <unmanaged-short>igStyleColorsLight</unmanaged-short>
        public static unsafe void StyleColorsLight(ref DearImguiSharp.ImGuiStyle dst)
        {
            DearImguiSharp.ImGuiStyle.__Native dst_ = default (DearImguiSharp.ImGuiStyle.__Native);
            dst.__MarshalTo(ref dst_);
            igStyleColorsLight_(&dst_);
            dst.__MarshalFree(ref dst_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igStyleColorsLight", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igStyleColorsLight_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "name">No documentation.</param>
        /// <param name = "openRef">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igBegin([In] const char* name,[In] bool* p_open,[In] int flags)</unmanaged>
        /// <unmanaged-short>igBegin</unmanaged-short>
        public static unsafe System.Boolean Begin(System.String name, System.Boolean openRef, System.Int32 flags)
        {
            System.IntPtr name_;
            System.Byte openRef_;
            System.Boolean __result__;
            System.Byte __result__native;
            name_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(name);
            openRef_ = (System.Byte)(openRef ? 1 : 0);
            __result__native = igBegin_((void *)name_, &openRef_, flags);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(name_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igBegin", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igBegin_(void *param0, void *param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igEnd()</unmanaged>
        /// <unmanaged-short>igEnd</unmanaged-short>
        public static unsafe void End()
        {
            igEnd_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igEnd", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igEnd_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "strId">No documentation.</param>
        /// <param name = "size">No documentation.</param>
        /// <param name = "border">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igBeginChildStr([In] const char* str_id,[In] const ImVec2 size,[In] bool border,[In] int flags)</unmanaged>
        /// <unmanaged-short>igBeginChildStr</unmanaged-short>
        public static unsafe System.Boolean BeginChildStr(System.String strId, DearImguiSharp.ImVec2 size, System.Boolean border, System.Int32 flags)
        {
            System.IntPtr strId_;
            System.Byte border_;
            System.Boolean __result__;
            System.Byte __result__native;
            strId_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(strId);
            border_ = (System.Byte)(border ? 1 : 0);
            __result__native = igBeginChildStr_((void *)strId_, size, border_, flags);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(strId_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igBeginChildStr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igBeginChildStr_(void *param0, DearImguiSharp.ImVec2 param1, System.Byte param2, int param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "id">No documentation.</param>
        /// <param name = "size">No documentation.</param>
        /// <param name = "border">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igBeginChildID([In] unsigned int id,[In] const ImVec2 size,[In] bool border,[In] int flags)</unmanaged>
        /// <unmanaged-short>igBeginChildID</unmanaged-short>
        public static unsafe System.Boolean BeginChildID(System.UInt32 id, DearImguiSharp.ImVec2 size, System.Boolean border, System.Int32 flags)
        {
            System.Byte border_;
            System.Boolean __result__;
            System.Byte __result__native;
            border_ = (System.Byte)(border ? 1 : 0);
            __result__native = igBeginChildID_(id, size, border_, flags);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igBeginChildID", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igBeginChildID_(System.UInt32 param0, DearImguiSharp.ImVec2 param1, System.Byte param2, int param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igEndChild()</unmanaged>
        /// <unmanaged-short>igEndChild</unmanaged-short>
        public static unsafe void EndChild()
        {
            igEndChild_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igEndChild", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igEndChild_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsWindowAppearing()</unmanaged>
        /// <unmanaged-short>igIsWindowAppearing</unmanaged-short>
        public static unsafe System.Boolean IsWindowAppearing()
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsWindowAppearing_();
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsWindowAppearing", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsWindowAppearing_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsWindowCollapsed()</unmanaged>
        /// <unmanaged-short>igIsWindowCollapsed</unmanaged-short>
        public static unsafe System.Boolean IsWindowCollapsed()
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsWindowCollapsed_();
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsWindowCollapsed", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsWindowCollapsed_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsWindowFocused([In] int flags)</unmanaged>
        /// <unmanaged-short>igIsWindowFocused</unmanaged-short>
        public static unsafe System.Boolean IsWindowFocused(System.Int32 flags)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsWindowFocused_(flags);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsWindowFocused", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsWindowFocused_(int param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsWindowHovered([In] int flags)</unmanaged>
        /// <unmanaged-short>igIsWindowHovered</unmanaged-short>
        public static unsafe System.Boolean IsWindowHovered(System.Int32 flags)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsWindowHovered_(flags);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsWindowHovered", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsWindowHovered_(int param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImDrawList* igGetWindowDrawList()</unmanaged>
        /// <unmanaged-short>igGetWindowDrawList</unmanaged-short>
        public static unsafe DearImguiSharp.ImDrawList GetWindowDrawList()
        {
            DearImguiSharp.ImDrawList __result__;
            DearImguiSharp.ImDrawList.__Native __result__native = default (DearImguiSharp.ImDrawList.__Native);
            __result__ = default (DearImguiSharp.ImDrawList);
            igGetWindowDrawList_(&__result__native);
            __result__.__MarshalFrom(ref __result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetWindowDrawList", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *igGetWindowDrawList_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <unmanaged>void igGetWindowPos([In] ImVec2* pOut)</unmanaged>
        /// <unmanaged-short>igGetWindowPos</unmanaged-short>
        public static unsafe void GetWindowPos(DearImguiSharp.ImVec2 outRef)
        {
            igGetWindowPos_(&outRef);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetWindowPos", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igGetWindowPos_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <unmanaged>void igGetWindowSize([In] ImVec2* pOut)</unmanaged>
        /// <unmanaged-short>igGetWindowSize</unmanaged-short>
        public static unsafe void GetWindowSize(DearImguiSharp.ImVec2 outRef)
        {
            igGetWindowSize_(&outRef);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetWindowSize", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igGetWindowSize_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float igGetWindowWidth()</unmanaged>
        /// <unmanaged-short>igGetWindowWidth</unmanaged-short>
        public static unsafe System.Single GetWindowWidth()
        {
            System.Single __result__;
            __result__ = igGetWindowWidth_();
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetWindowWidth", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float igGetWindowWidth_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float igGetWindowHeight()</unmanaged>
        /// <unmanaged-short>igGetWindowHeight</unmanaged-short>
        public static unsafe System.Single GetWindowHeight()
        {
            System.Single __result__;
            __result__ = igGetWindowHeight_();
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetWindowHeight", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float igGetWindowHeight_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "pos">No documentation.</param>
        /// <param name = "cond">No documentation.</param>
        /// <param name = "pivot">No documentation.</param>
        /// <unmanaged>void igSetNextWindowPos([In] const ImVec2 pos,[In] int cond,[In] const ImVec2 pivot)</unmanaged>
        /// <unmanaged-short>igSetNextWindowPos</unmanaged-short>
        public static unsafe void SetNextWindowPos(DearImguiSharp.ImVec2 pos, System.Int32 cond, DearImguiSharp.ImVec2 pivot)
        {
            igSetNextWindowPos_(pos, cond, pivot);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetNextWindowPos", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetNextWindowPos_(DearImguiSharp.ImVec2 param0, int param1, DearImguiSharp.ImVec2 param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "size">No documentation.</param>
        /// <param name = "cond">No documentation.</param>
        /// <unmanaged>void igSetNextWindowSize([In] const ImVec2 size,[In] int cond)</unmanaged>
        /// <unmanaged-short>igSetNextWindowSize</unmanaged-short>
        public static unsafe void SetNextWindowSize(DearImguiSharp.ImVec2 size, System.Int32 cond)
        {
            igSetNextWindowSize_(size, cond);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetNextWindowSize", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetNextWindowSize_(DearImguiSharp.ImVec2 param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "sizeMin">No documentation.</param>
        /// <param name = "sizeMax">No documentation.</param>
        /// <param name = "customCallback">No documentation.</param>
        /// <param name = "customCallbackData">No documentation.</param>
        /// <unmanaged>void igSetNextWindowSizeConstraints([In] const ImVec2 size_min,[In] const ImVec2 size_max,[In] __function__stdcall* custom_callback,[In] void* custom_callback_data)</unmanaged>
        /// <unmanaged-short>igSetNextWindowSizeConstraints</unmanaged-short>
        public static unsafe void SetNextWindowSizeConstraints(DearImguiSharp.ImVec2 sizeMin, DearImguiSharp.ImVec2 sizeMax, SharpGen.Runtime.FunctionCallback customCallback, System.IntPtr customCallbackData)
        {
            igSetNextWindowSizeConstraints_(sizeMin, sizeMax, customCallback, (void *)customCallbackData);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetNextWindowSizeConstraints", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetNextWindowSizeConstraints_(DearImguiSharp.ImVec2 param0, DearImguiSharp.ImVec2 param1, void *param2, void *param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "size">No documentation.</param>
        /// <unmanaged>void igSetNextWindowContentSize([In] const ImVec2 size)</unmanaged>
        /// <unmanaged-short>igSetNextWindowContentSize</unmanaged-short>
        public static unsafe void SetNextWindowContentSize(DearImguiSharp.ImVec2 size)
        {
            igSetNextWindowContentSize_(size);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetNextWindowContentSize", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetNextWindowContentSize_(DearImguiSharp.ImVec2 param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "collapsed">No documentation.</param>
        /// <param name = "cond">No documentation.</param>
        /// <unmanaged>void igSetNextWindowCollapsed([In] bool collapsed,[In] int cond)</unmanaged>
        /// <unmanaged-short>igSetNextWindowCollapsed</unmanaged-short>
        public static unsafe void SetNextWindowCollapsed(System.Boolean collapsed, System.Int32 cond)
        {
            System.Byte collapsed_;
            collapsed_ = (System.Byte)(collapsed ? 1 : 0);
            igSetNextWindowCollapsed_(collapsed_, cond);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetNextWindowCollapsed", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetNextWindowCollapsed_(System.Byte param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igSetNextWindowFocus()</unmanaged>
        /// <unmanaged-short>igSetNextWindowFocus</unmanaged-short>
        public static unsafe void SetNextWindowFocus()
        {
            igSetNextWindowFocus_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetNextWindowFocus", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetNextWindowFocus_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "alpha">No documentation.</param>
        /// <unmanaged>void igSetNextWindowBgAlpha([In] float alpha)</unmanaged>
        /// <unmanaged-short>igSetNextWindowBgAlpha</unmanaged-short>
        public static unsafe void SetNextWindowBgAlpha(System.Single alpha)
        {
            igSetNextWindowBgAlpha_(alpha);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetNextWindowBgAlpha", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetNextWindowBgAlpha_(float param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "pos">No documentation.</param>
        /// <param name = "cond">No documentation.</param>
        /// <unmanaged>void igSetWindowPosVec2([In] const ImVec2 pos,[In] int cond)</unmanaged>
        /// <unmanaged-short>igSetWindowPosVec2</unmanaged-short>
        public static unsafe void SetWindowPosVec2(DearImguiSharp.ImVec2 pos, System.Int32 cond)
        {
            igSetWindowPosVec2_(pos, cond);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetWindowPosVec2", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetWindowPosVec2_(DearImguiSharp.ImVec2 param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "size">No documentation.</param>
        /// <param name = "cond">No documentation.</param>
        /// <unmanaged>void igSetWindowSizeVec2([In] const ImVec2 size,[In] int cond)</unmanaged>
        /// <unmanaged-short>igSetWindowSizeVec2</unmanaged-short>
        public static unsafe void SetWindowSizeVec2(DearImguiSharp.ImVec2 size, System.Int32 cond)
        {
            igSetWindowSizeVec2_(size, cond);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetWindowSizeVec2", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetWindowSizeVec2_(DearImguiSharp.ImVec2 param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "collapsed">No documentation.</param>
        /// <param name = "cond">No documentation.</param>
        /// <unmanaged>void igSetWindowCollapsedBool([In] bool collapsed,[In] int cond)</unmanaged>
        /// <unmanaged-short>igSetWindowCollapsedBool</unmanaged-short>
        public static unsafe void SetWindowCollapsedBool(System.Boolean collapsed, System.Int32 cond)
        {
            System.Byte collapsed_;
            collapsed_ = (System.Byte)(collapsed ? 1 : 0);
            igSetWindowCollapsedBool_(collapsed_, cond);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetWindowCollapsedBool", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetWindowCollapsedBool_(System.Byte param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igSetWindowFocusNil()</unmanaged>
        /// <unmanaged-short>igSetWindowFocusNil</unmanaged-short>
        public static unsafe void SetWindowFocusNil()
        {
            igSetWindowFocusNil_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetWindowFocusNil", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetWindowFocusNil_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "scale">No documentation.</param>
        /// <unmanaged>void igSetWindowFontScale([In] float scale)</unmanaged>
        /// <unmanaged-short>igSetWindowFontScale</unmanaged-short>
        public static unsafe void SetWindowFontScale(System.Single scale)
        {
            igSetWindowFontScale_(scale);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetWindowFontScale", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetWindowFontScale_(float param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "name">No documentation.</param>
        /// <param name = "pos">No documentation.</param>
        /// <param name = "cond">No documentation.</param>
        /// <unmanaged>void igSetWindowPosStr([In] const char* name,[In] const ImVec2 pos,[In] int cond)</unmanaged>
        /// <unmanaged-short>igSetWindowPosStr</unmanaged-short>
        public static unsafe void SetWindowPosStr(System.String name, DearImguiSharp.ImVec2 pos, System.Int32 cond)
        {
            System.IntPtr name_;
            name_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(name);
            igSetWindowPosStr_((void *)name_, pos, cond);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(name_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetWindowPosStr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetWindowPosStr_(void *param0, DearImguiSharp.ImVec2 param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "name">No documentation.</param>
        /// <param name = "size">No documentation.</param>
        /// <param name = "cond">No documentation.</param>
        /// <unmanaged>void igSetWindowSizeStr([In] const char* name,[In] const ImVec2 size,[In] int cond)</unmanaged>
        /// <unmanaged-short>igSetWindowSizeStr</unmanaged-short>
        public static unsafe void SetWindowSizeStr(System.String name, DearImguiSharp.ImVec2 size, System.Int32 cond)
        {
            System.IntPtr name_;
            name_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(name);
            igSetWindowSizeStr_((void *)name_, size, cond);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(name_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetWindowSizeStr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetWindowSizeStr_(void *param0, DearImguiSharp.ImVec2 param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "name">No documentation.</param>
        /// <param name = "collapsed">No documentation.</param>
        /// <param name = "cond">No documentation.</param>
        /// <unmanaged>void igSetWindowCollapsedStr([In] const char* name,[In] bool collapsed,[In] int cond)</unmanaged>
        /// <unmanaged-short>igSetWindowCollapsedStr</unmanaged-short>
        public static unsafe void SetWindowCollapsedStr(System.String name, System.Boolean collapsed, System.Int32 cond)
        {
            System.IntPtr name_;
            System.Byte collapsed_;
            name_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(name);
            collapsed_ = (System.Byte)(collapsed ? 1 : 0);
            igSetWindowCollapsedStr_((void *)name_, collapsed_, cond);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(name_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetWindowCollapsedStr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetWindowCollapsedStr_(void *param0, System.Byte param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "name">No documentation.</param>
        /// <unmanaged>void igSetWindowFocusStr([In] const char* name)</unmanaged>
        /// <unmanaged-short>igSetWindowFocusStr</unmanaged-short>
        public static unsafe void SetWindowFocusStr(System.String name)
        {
            System.IntPtr name_;
            name_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(name);
            igSetWindowFocusStr_((void *)name_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(name_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetWindowFocusStr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetWindowFocusStr_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <unmanaged>void igGetContentRegionMax([In] ImVec2* pOut)</unmanaged>
        /// <unmanaged-short>igGetContentRegionMax</unmanaged-short>
        public static unsafe void GetContentRegionMax(DearImguiSharp.ImVec2 outRef)
        {
            igGetContentRegionMax_(&outRef);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetContentRegionMax", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igGetContentRegionMax_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <unmanaged>void igGetContentRegionAvail([In] ImVec2* pOut)</unmanaged>
        /// <unmanaged-short>igGetContentRegionAvail</unmanaged-short>
        public static unsafe void GetContentRegionAvail(DearImguiSharp.ImVec2 outRef)
        {
            igGetContentRegionAvail_(&outRef);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetContentRegionAvail", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igGetContentRegionAvail_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <unmanaged>void igGetWindowContentRegionMin([In] ImVec2* pOut)</unmanaged>
        /// <unmanaged-short>igGetWindowContentRegionMin</unmanaged-short>
        public static unsafe void GetWindowContentRegionMin(DearImguiSharp.ImVec2 outRef)
        {
            igGetWindowContentRegionMin_(&outRef);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetWindowContentRegionMin", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igGetWindowContentRegionMin_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <unmanaged>void igGetWindowContentRegionMax([In] ImVec2* pOut)</unmanaged>
        /// <unmanaged-short>igGetWindowContentRegionMax</unmanaged-short>
        public static unsafe void GetWindowContentRegionMax(DearImguiSharp.ImVec2 outRef)
        {
            igGetWindowContentRegionMax_(&outRef);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetWindowContentRegionMax", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igGetWindowContentRegionMax_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float igGetWindowContentRegionWidth()</unmanaged>
        /// <unmanaged-short>igGetWindowContentRegionWidth</unmanaged-short>
        public static unsafe System.Single GetWindowContentRegionWidth()
        {
            System.Single __result__;
            __result__ = igGetWindowContentRegionWidth_();
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetWindowContentRegionWidth", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float igGetWindowContentRegionWidth_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float igGetScrollX()</unmanaged>
        /// <unmanaged-short>igGetScrollX</unmanaged-short>
        public static unsafe System.Single GetScrollX()
        {
            System.Single __result__;
            __result__ = igGetScrollX_();
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetScrollX", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float igGetScrollX_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float igGetScrollY()</unmanaged>
        /// <unmanaged-short>igGetScrollY</unmanaged-short>
        public static unsafe System.Single GetScrollY()
        {
            System.Single __result__;
            __result__ = igGetScrollY_();
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetScrollY", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float igGetScrollY_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float igGetScrollMaxX()</unmanaged>
        /// <unmanaged-short>igGetScrollMaxX</unmanaged-short>
        public static unsafe System.Single GetScrollMaxX()
        {
            System.Single __result__;
            __result__ = igGetScrollMaxX_();
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetScrollMaxX", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float igGetScrollMaxX_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float igGetScrollMaxY()</unmanaged>
        /// <unmanaged-short>igGetScrollMaxY</unmanaged-short>
        public static unsafe System.Single GetScrollMaxY()
        {
            System.Single __result__;
            __result__ = igGetScrollMaxY_();
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetScrollMaxY", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float igGetScrollMaxY_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "scrollX">No documentation.</param>
        /// <unmanaged>void igSetScrollXFloat([In] float scroll_x)</unmanaged>
        /// <unmanaged-short>igSetScrollXFloat</unmanaged-short>
        public static unsafe void SetScrollXFloat(System.Single scrollX)
        {
            igSetScrollXFloat_(scrollX);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetScrollXFloat", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetScrollXFloat_(float param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "scrollY">No documentation.</param>
        /// <unmanaged>void igSetScrollYFloat([In] float scroll_y)</unmanaged>
        /// <unmanaged-short>igSetScrollYFloat</unmanaged-short>
        public static unsafe void SetScrollYFloat(System.Single scrollY)
        {
            igSetScrollYFloat_(scrollY);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetScrollYFloat", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetScrollYFloat_(float param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "centerXRatio">No documentation.</param>
        /// <unmanaged>void igSetScrollHereX([In] float center_x_ratio)</unmanaged>
        /// <unmanaged-short>igSetScrollHereX</unmanaged-short>
        public static unsafe void SetScrollHereX(System.Single centerXRatio)
        {
            igSetScrollHereX_(centerXRatio);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetScrollHereX", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetScrollHereX_(float param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "centerYRatio">No documentation.</param>
        /// <unmanaged>void igSetScrollHereY([In] float center_y_ratio)</unmanaged>
        /// <unmanaged-short>igSetScrollHereY</unmanaged-short>
        public static unsafe void SetScrollHereY(System.Single centerYRatio)
        {
            igSetScrollHereY_(centerYRatio);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetScrollHereY", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetScrollHereY_(float param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "localX">No documentation.</param>
        /// <param name = "centerXRatio">No documentation.</param>
        /// <unmanaged>void igSetScrollFromPosXFloat([In] float local_x,[In] float center_x_ratio)</unmanaged>
        /// <unmanaged-short>igSetScrollFromPosXFloat</unmanaged-short>
        public static unsafe void SetScrollFromPosXFloat(System.Single localX, System.Single centerXRatio)
        {
            igSetScrollFromPosXFloat_(localX, centerXRatio);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetScrollFromPosXFloat", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetScrollFromPosXFloat_(float param0, float param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "localY">No documentation.</param>
        /// <param name = "centerYRatio">No documentation.</param>
        /// <unmanaged>void igSetScrollFromPosYFloat([In] float local_y,[In] float center_y_ratio)</unmanaged>
        /// <unmanaged-short>igSetScrollFromPosYFloat</unmanaged-short>
        public static unsafe void SetScrollFromPosYFloat(System.Single localY, System.Single centerYRatio)
        {
            igSetScrollFromPosYFloat_(localY, centerYRatio);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetScrollFromPosYFloat", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetScrollFromPosYFloat_(float param0, float param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "font">No documentation.</param>
        /// <unmanaged>void igPushFont([In] ImFont* font)</unmanaged>
        /// <unmanaged-short>igPushFont</unmanaged-short>
        public static unsafe void PushFont(ref DearImguiSharp.ImFont font)
        {
            fixed (void *font_ = &font)
                igPushFont_(font_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPushFont", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPushFont_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igPopFont()</unmanaged>
        /// <unmanaged-short>igPopFont</unmanaged-short>
        public static unsafe void PopFont()
        {
            igPopFont_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPopFont", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPopFont_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "idx">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <unmanaged>void igPushStyleColorU32([In] int idx,[In] unsigned int col)</unmanaged>
        /// <unmanaged-short>igPushStyleColorU32</unmanaged-short>
        public static unsafe void PushStyleColorU32(System.Int32 idx, System.UInt32 col)
        {
            igPushStyleColorU32_(idx, col);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPushStyleColorU32", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPushStyleColorU32_(int param0, System.UInt32 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "idx">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <unmanaged>void igPushStyleColorVec4([In] int idx,[In] const ImVec4 col)</unmanaged>
        /// <unmanaged-short>igPushStyleColorVec4</unmanaged-short>
        public static unsafe void PushStyleColorVec4(System.Int32 idx, DearImguiSharp.ImVec4 col)
        {
            igPushStyleColorVec4_(idx, col);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPushStyleColorVec4", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPushStyleColorVec4_(int param0, DearImguiSharp.ImVec4 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "count">No documentation.</param>
        /// <unmanaged>void igPopStyleColor([In] int count)</unmanaged>
        /// <unmanaged-short>igPopStyleColor</unmanaged-short>
        public static unsafe void PopStyleColor(System.Int32 count)
        {
            igPopStyleColor_(count);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPopStyleColor", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPopStyleColor_(int param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "idx">No documentation.</param>
        /// <param name = "val">No documentation.</param>
        /// <unmanaged>void igPushStyleVarFloat([In] int idx,[In] float val)</unmanaged>
        /// <unmanaged-short>igPushStyleVarFloat</unmanaged-short>
        public static unsafe void PushStyleVarFloat(System.Int32 idx, System.Single val)
        {
            igPushStyleVarFloat_(idx, val);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPushStyleVarFloat", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPushStyleVarFloat_(int param0, float param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "idx">No documentation.</param>
        /// <param name = "val">No documentation.</param>
        /// <unmanaged>void igPushStyleVarVec2([In] int idx,[In] const ImVec2 val)</unmanaged>
        /// <unmanaged-short>igPushStyleVarVec2</unmanaged-short>
        public static unsafe void PushStyleVarVec2(System.Int32 idx, DearImguiSharp.ImVec2 val)
        {
            igPushStyleVarVec2_(idx, val);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPushStyleVarVec2", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPushStyleVarVec2_(int param0, DearImguiSharp.ImVec2 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "count">No documentation.</param>
        /// <unmanaged>void igPopStyleVar([In] int count)</unmanaged>
        /// <unmanaged-short>igPopStyleVar</unmanaged-short>
        public static unsafe void PopStyleVar(System.Int32 count)
        {
            igPopStyleVar_(count);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPopStyleVar", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPopStyleVar_(int param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "idx">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>const ImVec4* igGetStyleColorVec4([In] int idx)</unmanaged>
        /// <unmanaged-short>igGetStyleColorVec4</unmanaged-short>
        public static unsafe DearImguiSharp.ImVec4 GetStyleColorVec4(System.Int32 idx)
        {
            DearImguiSharp.ImVec4 __result__;
            igGetStyleColorVec4_(&__result__, idx);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetStyleColorVec4", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *igGetStyleColorVec4_(void *param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImFont* igGetFont()</unmanaged>
        /// <unmanaged-short>igGetFont</unmanaged-short>
        public static unsafe DearImguiSharp.ImFont GetFont()
        {
            DearImguiSharp.ImFont __result__;
            igGetFont_(&__result__);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetFont", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *igGetFont_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float igGetFontSize()</unmanaged>
        /// <unmanaged-short>igGetFontSize</unmanaged-short>
        public static unsafe System.Single GetFontSize()
        {
            System.Single __result__;
            __result__ = igGetFontSize_();
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetFontSize", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float igGetFontSize_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <unmanaged>void igGetFontTexUvWhitePixel([In] ImVec2* pOut)</unmanaged>
        /// <unmanaged-short>igGetFontTexUvWhitePixel</unmanaged-short>
        public static unsafe void GetFontTexUvWhitePixel(DearImguiSharp.ImVec2 outRef)
        {
            igGetFontTexUvWhitePixel_(&outRef);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetFontTexUvWhitePixel", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igGetFontTexUvWhitePixel_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "idx">No documentation.</param>
        /// <param name = "alphaMul">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>unsigned int igGetColorU32Col([In] int idx,[In] float alpha_mul)</unmanaged>
        /// <unmanaged-short>igGetColorU32Col</unmanaged-short>
        public static unsafe System.UInt32 GetColorU32Col(System.Int32 idx, System.Single alphaMul)
        {
            System.UInt32 __result__;
            __result__ = igGetColorU32Col_(idx, alphaMul);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetColorU32Col", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt32 igGetColorU32Col_(int param0, float param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "col">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>unsigned int igGetColorU32Vec4([In] const ImVec4 col)</unmanaged>
        /// <unmanaged-short>igGetColorU32Vec4</unmanaged-short>
        public static unsafe System.UInt32 GetColorU32Vec4(DearImguiSharp.ImVec4 col)
        {
            System.UInt32 __result__;
            __result__ = igGetColorU32Vec4_(col);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetColorU32Vec4", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt32 igGetColorU32Vec4_(DearImguiSharp.ImVec4 param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "col">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>unsigned int igGetColorU32U32([In] unsigned int col)</unmanaged>
        /// <unmanaged-short>igGetColorU32U32</unmanaged-short>
        public static unsafe System.UInt32 GetColorU32U32(System.UInt32 col)
        {
            System.UInt32 __result__;
            __result__ = igGetColorU32U32_(col);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetColorU32U32", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt32 igGetColorU32U32_(System.UInt32 param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "itemWidth">No documentation.</param>
        /// <unmanaged>void igPushItemWidth([In] float item_width)</unmanaged>
        /// <unmanaged-short>igPushItemWidth</unmanaged-short>
        public static unsafe void PushItemWidth(System.Single itemWidth)
        {
            igPushItemWidth_(itemWidth);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPushItemWidth", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPushItemWidth_(float param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igPopItemWidth()</unmanaged>
        /// <unmanaged-short>igPopItemWidth</unmanaged-short>
        public static unsafe void PopItemWidth()
        {
            igPopItemWidth_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPopItemWidth", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPopItemWidth_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "itemWidth">No documentation.</param>
        /// <unmanaged>void igSetNextItemWidth([In] float item_width)</unmanaged>
        /// <unmanaged-short>igSetNextItemWidth</unmanaged-short>
        public static unsafe void SetNextItemWidth(System.Single itemWidth)
        {
            igSetNextItemWidth_(itemWidth);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetNextItemWidth", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetNextItemWidth_(float param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float igCalcItemWidth()</unmanaged>
        /// <unmanaged-short>igCalcItemWidth</unmanaged-short>
        public static unsafe System.Single CalcItemWidth()
        {
            System.Single __result__;
            __result__ = igCalcItemWidth_();
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igCalcItemWidth", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float igCalcItemWidth_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "wrapLocalPosX">No documentation.</param>
        /// <unmanaged>void igPushTextWrapPos([In] float wrap_local_pos_x)</unmanaged>
        /// <unmanaged-short>igPushTextWrapPos</unmanaged-short>
        public static unsafe void PushTextWrapPos(System.Single wrapLocalPosX)
        {
            igPushTextWrapPos_(wrapLocalPosX);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPushTextWrapPos", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPushTextWrapPos_(float param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igPopTextWrapPos()</unmanaged>
        /// <unmanaged-short>igPopTextWrapPos</unmanaged-short>
        public static unsafe void PopTextWrapPos()
        {
            igPopTextWrapPos_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPopTextWrapPos", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPopTextWrapPos_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "allowKeyboardFocus">No documentation.</param>
        /// <unmanaged>void igPushAllowKeyboardFocus([In] bool allow_keyboard_focus)</unmanaged>
        /// <unmanaged-short>igPushAllowKeyboardFocus</unmanaged-short>
        public static unsafe void PushAllowKeyboardFocus(System.Boolean allowKeyboardFocus)
        {
            System.Byte allowKeyboardFocus_;
            allowKeyboardFocus_ = (System.Byte)(allowKeyboardFocus ? 1 : 0);
            igPushAllowKeyboardFocus_(allowKeyboardFocus_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPushAllowKeyboardFocus", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPushAllowKeyboardFocus_(System.Byte param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igPopAllowKeyboardFocus()</unmanaged>
        /// <unmanaged-short>igPopAllowKeyboardFocus</unmanaged-short>
        public static unsafe void PopAllowKeyboardFocus()
        {
            igPopAllowKeyboardFocus_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPopAllowKeyboardFocus", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPopAllowKeyboardFocus_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "repeat">No documentation.</param>
        /// <unmanaged>void igPushButtonRepeat([In] bool repeat)</unmanaged>
        /// <unmanaged-short>igPushButtonRepeat</unmanaged-short>
        public static unsafe void PushButtonRepeat(System.Boolean repeat)
        {
            System.Byte repeat_;
            repeat_ = (System.Byte)(repeat ? 1 : 0);
            igPushButtonRepeat_(repeat_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPushButtonRepeat", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPushButtonRepeat_(System.Byte param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igPopButtonRepeat()</unmanaged>
        /// <unmanaged-short>igPopButtonRepeat</unmanaged-short>
        public static unsafe void PopButtonRepeat()
        {
            igPopButtonRepeat_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPopButtonRepeat", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPopButtonRepeat_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igSeparator()</unmanaged>
        /// <unmanaged-short>igSeparator</unmanaged-short>
        public static unsafe void Separator()
        {
            igSeparator_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSeparator", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSeparator_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "offsetFromStartX">No documentation.</param>
        /// <param name = "spacing">No documentation.</param>
        /// <unmanaged>void igSameLine([In] float offset_from_start_x,[In] float spacing)</unmanaged>
        /// <unmanaged-short>igSameLine</unmanaged-short>
        public static unsafe void SameLine(System.Single offsetFromStartX, System.Single spacing)
        {
            igSameLine_(offsetFromStartX, spacing);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSameLine", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSameLine_(float param0, float param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igNewLine()</unmanaged>
        /// <unmanaged-short>igNewLine</unmanaged-short>
        public static unsafe void NewLine()
        {
            igNewLine_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igNewLine", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igNewLine_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igSpacing()</unmanaged>
        /// <unmanaged-short>igSpacing</unmanaged-short>
        public static unsafe void Spacing()
        {
            igSpacing_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSpacing", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSpacing_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "size">No documentation.</param>
        /// <unmanaged>void igDummy([In] const ImVec2 size)</unmanaged>
        /// <unmanaged-short>igDummy</unmanaged-short>
        public static unsafe void Dummy(DearImguiSharp.ImVec2 size)
        {
            igDummy_(size);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igDummy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igDummy_(DearImguiSharp.ImVec2 param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "indentW">No documentation.</param>
        /// <unmanaged>void igIndent([In] float indent_w)</unmanaged>
        /// <unmanaged-short>igIndent</unmanaged-short>
        public static unsafe void Indent(System.Single indentW)
        {
            igIndent_(indentW);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIndent", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igIndent_(float param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "indentW">No documentation.</param>
        /// <unmanaged>void igUnindent([In] float indent_w)</unmanaged>
        /// <unmanaged-short>igUnindent</unmanaged-short>
        public static unsafe void Unindent(System.Single indentW)
        {
            igUnindent_(indentW);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igUnindent", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igUnindent_(float param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igBeginGroup()</unmanaged>
        /// <unmanaged-short>igBeginGroup</unmanaged-short>
        public static unsafe void BeginGroup()
        {
            igBeginGroup_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igBeginGroup", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igBeginGroup_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igEndGroup()</unmanaged>
        /// <unmanaged-short>igEndGroup</unmanaged-short>
        public static unsafe void EndGroup()
        {
            igEndGroup_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igEndGroup", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igEndGroup_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <unmanaged>void igGetCursorPos([In] ImVec2* pOut)</unmanaged>
        /// <unmanaged-short>igGetCursorPos</unmanaged-short>
        public static unsafe void GetCursorPos(DearImguiSharp.ImVec2 outRef)
        {
            igGetCursorPos_(&outRef);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetCursorPos", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igGetCursorPos_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float igGetCursorPosX()</unmanaged>
        /// <unmanaged-short>igGetCursorPosX</unmanaged-short>
        public static unsafe System.Single GetCursorPosX()
        {
            System.Single __result__;
            __result__ = igGetCursorPosX_();
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetCursorPosX", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float igGetCursorPosX_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float igGetCursorPosY()</unmanaged>
        /// <unmanaged-short>igGetCursorPosY</unmanaged-short>
        public static unsafe System.Single GetCursorPosY()
        {
            System.Single __result__;
            __result__ = igGetCursorPosY_();
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetCursorPosY", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float igGetCursorPosY_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "localPos">No documentation.</param>
        /// <unmanaged>void igSetCursorPos([In] const ImVec2 local_pos)</unmanaged>
        /// <unmanaged-short>igSetCursorPos</unmanaged-short>
        public static unsafe void SetCursorPos(DearImguiSharp.ImVec2 localPos)
        {
            igSetCursorPos_(localPos);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetCursorPos", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetCursorPos_(DearImguiSharp.ImVec2 param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "localX">No documentation.</param>
        /// <unmanaged>void igSetCursorPosX([In] float local_x)</unmanaged>
        /// <unmanaged-short>igSetCursorPosX</unmanaged-short>
        public static unsafe void SetCursorPosX(System.Single localX)
        {
            igSetCursorPosX_(localX);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetCursorPosX", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetCursorPosX_(float param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "localY">No documentation.</param>
        /// <unmanaged>void igSetCursorPosY([In] float local_y)</unmanaged>
        /// <unmanaged-short>igSetCursorPosY</unmanaged-short>
        public static unsafe void SetCursorPosY(System.Single localY)
        {
            igSetCursorPosY_(localY);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetCursorPosY", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetCursorPosY_(float param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <unmanaged>void igGetCursorStartPos([In] ImVec2* pOut)</unmanaged>
        /// <unmanaged-short>igGetCursorStartPos</unmanaged-short>
        public static unsafe void GetCursorStartPos(DearImguiSharp.ImVec2 outRef)
        {
            igGetCursorStartPos_(&outRef);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetCursorStartPos", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igGetCursorStartPos_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <unmanaged>void igGetCursorScreenPos([In] ImVec2* pOut)</unmanaged>
        /// <unmanaged-short>igGetCursorScreenPos</unmanaged-short>
        public static unsafe void GetCursorScreenPos(DearImguiSharp.ImVec2 outRef)
        {
            igGetCursorScreenPos_(&outRef);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetCursorScreenPos", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igGetCursorScreenPos_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "pos">No documentation.</param>
        /// <unmanaged>void igSetCursorScreenPos([In] const ImVec2 pos)</unmanaged>
        /// <unmanaged-short>igSetCursorScreenPos</unmanaged-short>
        public static unsafe void SetCursorScreenPos(DearImguiSharp.ImVec2 pos)
        {
            igSetCursorScreenPos_(pos);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetCursorScreenPos", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetCursorScreenPos_(DearImguiSharp.ImVec2 param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igAlignTextToFramePadding()</unmanaged>
        /// <unmanaged-short>igAlignTextToFramePadding</unmanaged-short>
        public static unsafe void AlignTextToFramePadding()
        {
            igAlignTextToFramePadding_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igAlignTextToFramePadding", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igAlignTextToFramePadding_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float igGetTextLineHeight()</unmanaged>
        /// <unmanaged-short>igGetTextLineHeight</unmanaged-short>
        public static unsafe System.Single GetTextLineHeight()
        {
            System.Single __result__;
            __result__ = igGetTextLineHeight_();
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetTextLineHeight", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float igGetTextLineHeight_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float igGetTextLineHeightWithSpacing()</unmanaged>
        /// <unmanaged-short>igGetTextLineHeightWithSpacing</unmanaged-short>
        public static unsafe System.Single GetTextLineHeightWithSpacing()
        {
            System.Single __result__;
            __result__ = igGetTextLineHeightWithSpacing_();
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetTextLineHeightWithSpacing", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float igGetTextLineHeightWithSpacing_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float igGetFrameHeight()</unmanaged>
        /// <unmanaged-short>igGetFrameHeight</unmanaged-short>
        public static unsafe System.Single GetFrameHeight()
        {
            System.Single __result__;
            __result__ = igGetFrameHeight_();
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetFrameHeight", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float igGetFrameHeight_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float igGetFrameHeightWithSpacing()</unmanaged>
        /// <unmanaged-short>igGetFrameHeightWithSpacing</unmanaged-short>
        public static unsafe System.Single GetFrameHeightWithSpacing()
        {
            System.Single __result__;
            __result__ = igGetFrameHeightWithSpacing_();
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetFrameHeightWithSpacing", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float igGetFrameHeightWithSpacing_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "strId">No documentation.</param>
        /// <unmanaged>void igPushIDStr([In] const char* str_id)</unmanaged>
        /// <unmanaged-short>igPushIDStr</unmanaged-short>
        public static unsafe void PushIDStr(System.String strId)
        {
            System.IntPtr strId_;
            strId_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(strId);
            igPushIDStr_((void *)strId_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(strId_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPushIDStr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPushIDStr_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "strIdBegin">No documentation.</param>
        /// <param name = "strIdEnd">No documentation.</param>
        /// <unmanaged>void igPushIDStrStr([In] const char* str_id_begin,[In] const char* str_id_end)</unmanaged>
        /// <unmanaged-short>igPushIDStrStr</unmanaged-short>
        public static unsafe void PushIDStrStr(System.String strIdBegin, System.String strIdEnd)
        {
            System.IntPtr strIdBegin_;
            System.IntPtr strIdEnd_;
            strIdBegin_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(strIdBegin);
            strIdEnd_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(strIdEnd);
            igPushIDStrStr_((void *)strIdBegin_, (void *)strIdEnd_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(strIdBegin_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(strIdEnd_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPushIDStrStr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPushIDStrStr_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "trIdRef">No documentation.</param>
        /// <unmanaged>void igPushIDPtr([In] const void* ptr_id)</unmanaged>
        /// <unmanaged-short>igPushIDPtr</unmanaged-short>
        public static unsafe void PushIDPtr(System.IntPtr trIdRef)
        {
            igPushIDPtr_((void *)trIdRef);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPushIDPtr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPushIDPtr_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "intId">No documentation.</param>
        /// <unmanaged>void igPushIDInt([In] int int_id)</unmanaged>
        /// <unmanaged-short>igPushIDInt</unmanaged-short>
        public static unsafe void PushIDInt(System.Int32 intId)
        {
            igPushIDInt_(intId);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPushIDInt", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPushIDInt_(int param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igPopID()</unmanaged>
        /// <unmanaged-short>igPopID</unmanaged-short>
        public static unsafe void PopID()
        {
            igPopID_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPopID", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPopID_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "strId">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>unsigned int igGetIDStr([In] const char* str_id)</unmanaged>
        /// <unmanaged-short>igGetIDStr</unmanaged-short>
        public static unsafe System.UInt32 GetIDStr(System.String strId)
        {
            System.IntPtr strId_;
            System.UInt32 __result__;
            strId_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(strId);
            __result__ = igGetIDStr_((void *)strId_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(strId_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetIDStr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt32 igGetIDStr_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "strIdBegin">No documentation.</param>
        /// <param name = "strIdEnd">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>unsigned int igGetIDStrStr([In] const char* str_id_begin,[In] const char* str_id_end)</unmanaged>
        /// <unmanaged-short>igGetIDStrStr</unmanaged-short>
        public static unsafe System.UInt32 GetIDStrStr(System.String strIdBegin, System.String strIdEnd)
        {
            System.IntPtr strIdBegin_;
            System.IntPtr strIdEnd_;
            System.UInt32 __result__;
            strIdBegin_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(strIdBegin);
            strIdEnd_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(strIdEnd);
            __result__ = igGetIDStrStr_((void *)strIdBegin_, (void *)strIdEnd_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(strIdBegin_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(strIdEnd_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetIDStrStr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt32 igGetIDStrStr_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "trIdRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>unsigned int igGetIDPtr([In] const void* ptr_id)</unmanaged>
        /// <unmanaged-short>igGetIDPtr</unmanaged-short>
        public static unsafe System.UInt32 GetIDPtr(System.IntPtr trIdRef)
        {
            System.UInt32 __result__;
            __result__ = igGetIDPtr_((void *)trIdRef);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetIDPtr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt32 igGetIDPtr_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "text">No documentation.</param>
        /// <param name = "textEnd">No documentation.</param>
        /// <unmanaged>void igTextUnformatted([In] const char* text,[In] const char* text_end)</unmanaged>
        /// <unmanaged-short>igTextUnformatted</unmanaged-short>
        public static unsafe void TextUnformatted(System.String text, System.String textEnd)
        {
            System.IntPtr text_;
            System.IntPtr textEnd_;
            text_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(text);
            textEnd_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(textEnd);
            igTextUnformatted_((void *)text_, (void *)textEnd_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(text_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(textEnd_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTextUnformatted", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igTextUnformatted_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "fmt">No documentation.</param>
        /// <unmanaged>void igText([In] const char* fmt)</unmanaged>
        /// <unmanaged-short>igText</unmanaged-short>
        public static unsafe void Text(System.String fmt)
        {
            System.IntPtr fmt_;
            fmt_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(fmt);
            igText_((void *)fmt_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(fmt_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igText", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igText_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "fmt">No documentation.</param>
        /// <param name = "args">No documentation.</param>
        /// <unmanaged>void igTextV([In] const char* fmt,[In] char* args)</unmanaged>
        /// <unmanaged-short>igTextV</unmanaged-short>
        public static unsafe void TextV(System.String fmt, System.String args)
        {
            System.IntPtr fmt_;
            System.IntPtr args_;
            fmt_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(fmt);
            args_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(args);
            igTextV_((void *)fmt_, (void *)args_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(fmt_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(args_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTextV", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igTextV_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "col">No documentation.</param>
        /// <param name = "fmt">No documentation.</param>
        /// <unmanaged>void igTextColored([In] const ImVec4 col,[In] const char* fmt)</unmanaged>
        /// <unmanaged-short>igTextColored</unmanaged-short>
        public static unsafe void TextColored(DearImguiSharp.ImVec4 col, System.String fmt)
        {
            System.IntPtr fmt_;
            fmt_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(fmt);
            igTextColored_(col, (void *)fmt_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(fmt_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTextColored", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igTextColored_(DearImguiSharp.ImVec4 param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "col">No documentation.</param>
        /// <param name = "fmt">No documentation.</param>
        /// <param name = "args">No documentation.</param>
        /// <unmanaged>void igTextColoredV([In] const ImVec4 col,[In] const char* fmt,[In] char* args)</unmanaged>
        /// <unmanaged-short>igTextColoredV</unmanaged-short>
        public static unsafe void TextColoredV(DearImguiSharp.ImVec4 col, System.String fmt, System.String args)
        {
            System.IntPtr fmt_;
            System.IntPtr args_;
            fmt_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(fmt);
            args_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(args);
            igTextColoredV_(col, (void *)fmt_, (void *)args_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(fmt_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(args_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTextColoredV", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igTextColoredV_(DearImguiSharp.ImVec4 param0, void *param1, void *param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "fmt">No documentation.</param>
        /// <unmanaged>void igTextDisabled([In] const char* fmt)</unmanaged>
        /// <unmanaged-short>igTextDisabled</unmanaged-short>
        public static unsafe void TextDisabled(System.String fmt)
        {
            System.IntPtr fmt_;
            fmt_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(fmt);
            igTextDisabled_((void *)fmt_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(fmt_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTextDisabled", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igTextDisabled_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "fmt">No documentation.</param>
        /// <param name = "args">No documentation.</param>
        /// <unmanaged>void igTextDisabledV([In] const char* fmt,[In] char* args)</unmanaged>
        /// <unmanaged-short>igTextDisabledV</unmanaged-short>
        public static unsafe void TextDisabledV(System.String fmt, System.String args)
        {
            System.IntPtr fmt_;
            System.IntPtr args_;
            fmt_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(fmt);
            args_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(args);
            igTextDisabledV_((void *)fmt_, (void *)args_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(fmt_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(args_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTextDisabledV", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igTextDisabledV_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "fmt">No documentation.</param>
        /// <unmanaged>void igTextWrapped([In] const char* fmt)</unmanaged>
        /// <unmanaged-short>igTextWrapped</unmanaged-short>
        public static unsafe void TextWrapped(System.String fmt)
        {
            System.IntPtr fmt_;
            fmt_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(fmt);
            igTextWrapped_((void *)fmt_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(fmt_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTextWrapped", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igTextWrapped_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "fmt">No documentation.</param>
        /// <param name = "args">No documentation.</param>
        /// <unmanaged>void igTextWrappedV([In] const char* fmt,[In] char* args)</unmanaged>
        /// <unmanaged-short>igTextWrappedV</unmanaged-short>
        public static unsafe void TextWrappedV(System.String fmt, System.String args)
        {
            System.IntPtr fmt_;
            System.IntPtr args_;
            fmt_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(fmt);
            args_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(args);
            igTextWrappedV_((void *)fmt_, (void *)args_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(fmt_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(args_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTextWrappedV", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igTextWrappedV_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "fmt">No documentation.</param>
        /// <unmanaged>void igLabelText([In] const char* label,[In] const char* fmt)</unmanaged>
        /// <unmanaged-short>igLabelText</unmanaged-short>
        public static unsafe void LabelText(System.String label, System.String fmt)
        {
            System.IntPtr label_;
            System.IntPtr fmt_;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            fmt_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(fmt);
            igLabelText_((void *)label_, (void *)fmt_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(fmt_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igLabelText", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igLabelText_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "fmt">No documentation.</param>
        /// <param name = "args">No documentation.</param>
        /// <unmanaged>void igLabelTextV([In] const char* label,[In] const char* fmt,[In] char* args)</unmanaged>
        /// <unmanaged-short>igLabelTextV</unmanaged-short>
        public static unsafe void LabelTextV(System.String label, System.String fmt, System.String args)
        {
            System.IntPtr label_;
            System.IntPtr fmt_;
            System.IntPtr args_;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            fmt_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(fmt);
            args_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(args);
            igLabelTextV_((void *)label_, (void *)fmt_, (void *)args_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(fmt_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(args_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igLabelTextV", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igLabelTextV_(void *param0, void *param1, void *param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "fmt">No documentation.</param>
        /// <unmanaged>void igBulletText([In] const char* fmt)</unmanaged>
        /// <unmanaged-short>igBulletText</unmanaged-short>
        public static unsafe void BulletText(System.String fmt)
        {
            System.IntPtr fmt_;
            fmt_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(fmt);
            igBulletText_((void *)fmt_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(fmt_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igBulletText", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igBulletText_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "fmt">No documentation.</param>
        /// <param name = "args">No documentation.</param>
        /// <unmanaged>void igBulletTextV([In] const char* fmt,[In] char* args)</unmanaged>
        /// <unmanaged-short>igBulletTextV</unmanaged-short>
        public static unsafe void BulletTextV(System.String fmt, System.String args)
        {
            System.IntPtr fmt_;
            System.IntPtr args_;
            fmt_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(fmt);
            args_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(args);
            igBulletTextV_((void *)fmt_, (void *)args_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(fmt_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(args_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igBulletTextV", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igBulletTextV_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "size">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igButton([In] const char* label,[In] const ImVec2 size)</unmanaged>
        /// <unmanaged-short>igButton</unmanaged-short>
        public static unsafe System.Boolean Button(System.String label, DearImguiSharp.ImVec2 size)
        {
            System.IntPtr label_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            __result__native = igButton_((void *)label_, size);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igButton", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igButton_(void *param0, DearImguiSharp.ImVec2 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igSmallButton([In] const char* label)</unmanaged>
        /// <unmanaged-short>igSmallButton</unmanaged-short>
        public static unsafe System.Boolean SmallButton(System.String label)
        {
            System.IntPtr label_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            __result__native = igSmallButton_((void *)label_);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSmallButton", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igSmallButton_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "strId">No documentation.</param>
        /// <param name = "size">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igInvisibleButton([In] const char* str_id,[In] const ImVec2 size)</unmanaged>
        /// <unmanaged-short>igInvisibleButton</unmanaged-short>
        public static unsafe System.Boolean InvisibleButton(System.String strId, DearImguiSharp.ImVec2 size)
        {
            System.IntPtr strId_;
            System.Boolean __result__;
            System.Byte __result__native;
            strId_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(strId);
            __result__native = igInvisibleButton_((void *)strId_, size);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(strId_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igInvisibleButton", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igInvisibleButton_(void *param0, DearImguiSharp.ImVec2 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "strId">No documentation.</param>
        /// <param name = "dir">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igArrowButton([In] const char* str_id,[In] int dir)</unmanaged>
        /// <unmanaged-short>igArrowButton</unmanaged-short>
        public static unsafe System.Boolean ArrowButton(System.String strId, System.Int32 dir)
        {
            System.IntPtr strId_;
            System.Boolean __result__;
            System.Byte __result__native;
            strId_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(strId);
            __result__native = igArrowButton_((void *)strId_, dir);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(strId_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igArrowButton", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igArrowButton_(void *param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "userTextureId">No documentation.</param>
        /// <param name = "size">No documentation.</param>
        /// <param name = "uv0">No documentation.</param>
        /// <param name = "uv1">No documentation.</param>
        /// <param name = "tintCol">No documentation.</param>
        /// <param name = "borderCol">No documentation.</param>
        /// <unmanaged>void igImage([In] void* user_texture_id,[In] const ImVec2 size,[In] const ImVec2 uv0,[In] const ImVec2 uv1,[In] const ImVec4 tint_col,[In] const ImVec4 border_col)</unmanaged>
        /// <unmanaged-short>igImage</unmanaged-short>
        public static unsafe void Image(System.IntPtr userTextureId, DearImguiSharp.ImVec2 size, DearImguiSharp.ImVec2 uv0, DearImguiSharp.ImVec2 uv1, DearImguiSharp.ImVec4 tintCol, DearImguiSharp.ImVec4 borderCol)
        {
            igImage_((void *)userTextureId, size, uv0, uv1, tintCol, borderCol);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImage", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igImage_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2, DearImguiSharp.ImVec2 param3, DearImguiSharp.ImVec4 param4, DearImguiSharp.ImVec4 param5);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "userTextureId">No documentation.</param>
        /// <param name = "size">No documentation.</param>
        /// <param name = "uv0">No documentation.</param>
        /// <param name = "uv1">No documentation.</param>
        /// <param name = "framePadding">No documentation.</param>
        /// <param name = "bgCol">No documentation.</param>
        /// <param name = "tintCol">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igImageButton([In] void* user_texture_id,[In] const ImVec2 size,[In] const ImVec2 uv0,[In] const ImVec2 uv1,[In] int frame_padding,[In] const ImVec4 bg_col,[In] const ImVec4 tint_col)</unmanaged>
        /// <unmanaged-short>igImageButton</unmanaged-short>
        public static unsafe System.Boolean ImageButton(System.IntPtr userTextureId, DearImguiSharp.ImVec2 size, DearImguiSharp.ImVec2 uv0, DearImguiSharp.ImVec2 uv1, System.Int32 framePadding, DearImguiSharp.ImVec4 bgCol, DearImguiSharp.ImVec4 tintCol)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igImageButton_((void *)userTextureId, size, uv0, uv1, framePadding, bgCol, tintCol);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImageButton", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igImageButton_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2, DearImguiSharp.ImVec2 param3, int param4, DearImguiSharp.ImVec4 param5, DearImguiSharp.ImVec4 param6);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igCheckbox([In] const char* label,[In] bool* v)</unmanaged>
        /// <unmanaged-short>igCheckbox</unmanaged-short>
        public static unsafe System.Boolean Checkbox(System.String label, System.Boolean v)
        {
            System.IntPtr label_;
            System.Byte v_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            v_ = (System.Byte)(v ? 1 : 0);
            __result__native = igCheckbox_((void *)label_, &v_);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igCheckbox", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igCheckbox_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <param name = "flagsValue">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igCheckboxFlags([In] const char* label,[In] unsigned int* flags,[In] unsigned int flags_value)</unmanaged>
        /// <unmanaged-short>igCheckboxFlags</unmanaged-short>
        public static unsafe System.Boolean CheckboxFlags(System.String label, System.UInt32 flags, System.UInt32 flagsValue)
        {
            System.IntPtr label_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            __result__native = igCheckboxFlags_((void *)label_, &flags, flagsValue);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igCheckboxFlags", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igCheckboxFlags_(void *param0, void *param1, System.UInt32 param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "active">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igRadioButtonBool([In] const char* label,[In] bool active)</unmanaged>
        /// <unmanaged-short>igRadioButtonBool</unmanaged-short>
        public static unsafe System.Boolean RadioButtonBool(System.String label, System.Boolean active)
        {
            System.IntPtr label_;
            System.Byte active_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            active_ = (System.Byte)(active ? 1 : 0);
            __result__native = igRadioButtonBool_((void *)label_, active_);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igRadioButtonBool", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igRadioButtonBool_(void *param0, System.Byte param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <param name = "vButton">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igRadioButtonIntPtr([In] const char* label,[In] int* v,[In] int v_button)</unmanaged>
        /// <unmanaged-short>igRadioButtonIntPtr</unmanaged-short>
        public static unsafe System.Boolean RadioButtonIntPtr(System.String label, System.Int32 v, System.Int32 vButton)
        {
            System.IntPtr label_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            __result__native = igRadioButtonIntPtr_((void *)label_, &v, vButton);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igRadioButtonIntPtr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igRadioButtonIntPtr_(void *param0, void *param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "fraction">No documentation.</param>
        /// <param name = "sizeArg">No documentation.</param>
        /// <param name = "overlay">No documentation.</param>
        /// <unmanaged>void igProgressBar([In] float fraction,[In] const ImVec2 size_arg,[In] const char* overlay)</unmanaged>
        /// <unmanaged-short>igProgressBar</unmanaged-short>
        public static unsafe void ProgressBar(System.Single fraction, DearImguiSharp.ImVec2 sizeArg, System.String overlay)
        {
            System.IntPtr overlay_;
            overlay_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(overlay);
            igProgressBar_(fraction, sizeArg, (void *)overlay_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(overlay_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igProgressBar", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igProgressBar_(float param0, DearImguiSharp.ImVec2 param1, void *param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igBullet()</unmanaged>
        /// <unmanaged-short>igBullet</unmanaged-short>
        public static unsafe void Bullet()
        {
            igBullet_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igBullet", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igBullet_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "reviewValueRef">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igBeginCombo([In] const char* label,[In] const char* preview_value,[In] int flags)</unmanaged>
        /// <unmanaged-short>igBeginCombo</unmanaged-short>
        public static unsafe System.Boolean BeginCombo(System.String label, System.String reviewValueRef, System.Int32 flags)
        {
            System.IntPtr label_;
            System.IntPtr reviewValueRef_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            reviewValueRef_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(reviewValueRef);
            __result__native = igBeginCombo_((void *)label_, (void *)reviewValueRef_, flags);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(reviewValueRef_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igBeginCombo", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igBeginCombo_(void *param0, void *param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igEndCombo()</unmanaged>
        /// <unmanaged-short>igEndCombo</unmanaged-short>
        public static unsafe void EndCombo()
        {
            igEndCombo_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igEndCombo", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igEndCombo_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "currentItem">No documentation.</param>
        /// <param name = "items">No documentation.</param>
        /// <param name = "itemsCount">No documentation.</param>
        /// <param name = "popupMaxHeightInItems">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igComboStr_arr([In] const char* label,[In] int* current_item,[In] const char** items,[In] int items_count,[In] int popup_max_height_in_items)</unmanaged>
        /// <unmanaged-short>igComboStr_arr</unmanaged-short>
        public static unsafe System.Boolean ComboStrArr(System.String label, System.Int32 currentItem, System.String items, System.Int32 itemsCount, System.Int32 popupMaxHeightInItems)
        {
            System.IntPtr label_;
            System.IntPtr items_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            items_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(items);
            __result__native = igComboStr_arr_((void *)label_, &currentItem, (void *)items_, itemsCount, popupMaxHeightInItems);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(items_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igComboStr_arr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igComboStr_arr_(void *param0, void *param1, void *param2, int param3, int param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "currentItem">No documentation.</param>
        /// <param name = "itemsSeparatedByZeros">No documentation.</param>
        /// <param name = "popupMaxHeightInItems">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igComboStr([In] const char* label,[In] int* current_item,[In] const char* items_separated_by_zeros,[In] int popup_max_height_in_items)</unmanaged>
        /// <unmanaged-short>igComboStr</unmanaged-short>
        public static unsafe System.Boolean ComboStr(System.String label, System.Int32 currentItem, System.String itemsSeparatedByZeros, System.Int32 popupMaxHeightInItems)
        {
            System.IntPtr label_;
            System.IntPtr itemsSeparatedByZeros_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            itemsSeparatedByZeros_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(itemsSeparatedByZeros);
            __result__native = igComboStr_((void *)label_, &currentItem, (void *)itemsSeparatedByZeros_, popupMaxHeightInItems);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(itemsSeparatedByZeros_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igComboStr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igComboStr_(void *param0, void *param1, void *param2, int param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "currentItem">No documentation.</param>
        /// <param name = "itemsGetter">No documentation.</param>
        /// <param name = "data">No documentation.</param>
        /// <param name = "itemsCount">No documentation.</param>
        /// <param name = "popupMaxHeightInItems">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igComboFnPtr([In] const char* label,[In] int* current_item,[In] __function__stdcall* items_getter,[In] void* data,[In] int items_count,[In] int popup_max_height_in_items)</unmanaged>
        /// <unmanaged-short>igComboFnPtr</unmanaged-short>
        public static unsafe System.Boolean ComboFnPtr(System.String label, System.Int32 currentItem, SharpGen.Runtime.FunctionCallback itemsGetter, System.IntPtr data, System.Int32 itemsCount, System.Int32 popupMaxHeightInItems)
        {
            System.IntPtr label_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            __result__native = igComboFnPtr_((void *)label_, &currentItem, itemsGetter, (void *)data, itemsCount, popupMaxHeightInItems);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igComboFnPtr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igComboFnPtr_(void *param0, void *param1, void *param2, void *param3, int param4, int param5);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <param name = "vSpeed">No documentation.</param>
        /// <param name = "vMin">No documentation.</param>
        /// <param name = "vMax">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <param name = "power">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igDragFloat([In] const char* label,[In] float* v,[In] float v_speed,[In] float v_min,[In] float v_max,[In] const char* format,[In] float power)</unmanaged>
        /// <unmanaged-short>igDragFloat</unmanaged-short>
        public static unsafe System.Boolean DragFloat(System.String label, System.Single v, System.Single vSpeed, System.Single vMin, System.Single vMax, System.String format, System.Single power)
        {
            System.IntPtr label_;
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igDragFloat_((void *)label_, &v, vSpeed, vMin, vMax, (void *)format_, power);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igDragFloat", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igDragFloat_(void *param0, void *param1, float param2, float param3, float param4, void *param5, float param6);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <param name = "vSpeed">No documentation.</param>
        /// <param name = "vMin">No documentation.</param>
        /// <param name = "vMax">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <param name = "power">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igDragFloat2([In] const char* label,[In] float* v,[In] float v_speed,[In] float v_min,[In] float v_max,[In] const char* format,[In] float power)</unmanaged>
        /// <unmanaged-short>igDragFloat2</unmanaged-short>
        public static unsafe System.Boolean DragFloat2(System.String label, System.Single v, System.Single vSpeed, System.Single vMin, System.Single vMax, System.String format, System.Single power)
        {
            System.IntPtr label_;
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igDragFloat2_((void *)label_, &v, vSpeed, vMin, vMax, (void *)format_, power);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igDragFloat2", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igDragFloat2_(void *param0, void *param1, float param2, float param3, float param4, void *param5, float param6);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <param name = "vSpeed">No documentation.</param>
        /// <param name = "vMin">No documentation.</param>
        /// <param name = "vMax">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <param name = "power">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igDragFloat3([In] const char* label,[In] float* v,[In] float v_speed,[In] float v_min,[In] float v_max,[In] const char* format,[In] float power)</unmanaged>
        /// <unmanaged-short>igDragFloat3</unmanaged-short>
        public static unsafe System.Boolean DragFloat3(System.String label, System.Single v, System.Single vSpeed, System.Single vMin, System.Single vMax, System.String format, System.Single power)
        {
            System.IntPtr label_;
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igDragFloat3_((void *)label_, &v, vSpeed, vMin, vMax, (void *)format_, power);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igDragFloat3", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igDragFloat3_(void *param0, void *param1, float param2, float param3, float param4, void *param5, float param6);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <param name = "vSpeed">No documentation.</param>
        /// <param name = "vMin">No documentation.</param>
        /// <param name = "vMax">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <param name = "power">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igDragFloat4([In] const char* label,[In] float* v,[In] float v_speed,[In] float v_min,[In] float v_max,[In] const char* format,[In] float power)</unmanaged>
        /// <unmanaged-short>igDragFloat4</unmanaged-short>
        public static unsafe System.Boolean DragFloat4(System.String label, System.Single v, System.Single vSpeed, System.Single vMin, System.Single vMax, System.String format, System.Single power)
        {
            System.IntPtr label_;
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igDragFloat4_((void *)label_, &v, vSpeed, vMin, vMax, (void *)format_, power);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igDragFloat4", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igDragFloat4_(void *param0, void *param1, float param2, float param3, float param4, void *param5, float param6);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "vCurrentMin">No documentation.</param>
        /// <param name = "vCurrentMax">No documentation.</param>
        /// <param name = "vSpeed">No documentation.</param>
        /// <param name = "vMin">No documentation.</param>
        /// <param name = "vMax">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <param name = "formatMax">No documentation.</param>
        /// <param name = "power">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igDragFloatRange2([In] const char* label,[In] float* v_current_min,[In] float* v_current_max,[In] float v_speed,[In] float v_min,[In] float v_max,[In] const char* format,[In] const char* format_max,[In] float power)</unmanaged>
        /// <unmanaged-short>igDragFloatRange2</unmanaged-short>
        public static unsafe System.Boolean DragFloatRange2(System.String label, System.Single vCurrentMin, System.Single vCurrentMax, System.Single vSpeed, System.Single vMin, System.Single vMax, System.String format, System.String formatMax, System.Single power)
        {
            System.IntPtr label_;
            System.IntPtr format_;
            System.IntPtr formatMax_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            formatMax_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(formatMax);
            __result__native = igDragFloatRange2_((void *)label_, &vCurrentMin, &vCurrentMax, vSpeed, vMin, vMax, (void *)format_, (void *)formatMax_, power);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(formatMax_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igDragFloatRange2", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igDragFloatRange2_(void *param0, void *param1, void *param2, float param3, float param4, float param5, void *param6, void *param7, float param8);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <param name = "vSpeed">No documentation.</param>
        /// <param name = "vMin">No documentation.</param>
        /// <param name = "vMax">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igDragInt([In] const char* label,[In] int* v,[In] float v_speed,[In] int v_min,[In] int v_max,[In] const char* format)</unmanaged>
        /// <unmanaged-short>igDragInt</unmanaged-short>
        public static unsafe System.Boolean DragInt(System.String label, System.Int32 v, System.Single vSpeed, System.Int32 vMin, System.Int32 vMax, System.String format)
        {
            System.IntPtr label_;
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igDragInt_((void *)label_, &v, vSpeed, vMin, vMax, (void *)format_);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igDragInt", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igDragInt_(void *param0, void *param1, float param2, int param3, int param4, void *param5);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <param name = "vSpeed">No documentation.</param>
        /// <param name = "vMin">No documentation.</param>
        /// <param name = "vMax">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igDragInt2([In] const char* label,[In] int* v,[In] float v_speed,[In] int v_min,[In] int v_max,[In] const char* format)</unmanaged>
        /// <unmanaged-short>igDragInt2</unmanaged-short>
        public static unsafe System.Boolean DragInt2(System.String label, System.Int32 v, System.Single vSpeed, System.Int32 vMin, System.Int32 vMax, System.String format)
        {
            System.IntPtr label_;
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igDragInt2_((void *)label_, &v, vSpeed, vMin, vMax, (void *)format_);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igDragInt2", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igDragInt2_(void *param0, void *param1, float param2, int param3, int param4, void *param5);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <param name = "vSpeed">No documentation.</param>
        /// <param name = "vMin">No documentation.</param>
        /// <param name = "vMax">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igDragInt3([In] const char* label,[In] int* v,[In] float v_speed,[In] int v_min,[In] int v_max,[In] const char* format)</unmanaged>
        /// <unmanaged-short>igDragInt3</unmanaged-short>
        public static unsafe System.Boolean DragInt3(System.String label, System.Int32 v, System.Single vSpeed, System.Int32 vMin, System.Int32 vMax, System.String format)
        {
            System.IntPtr label_;
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igDragInt3_((void *)label_, &v, vSpeed, vMin, vMax, (void *)format_);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igDragInt3", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igDragInt3_(void *param0, void *param1, float param2, int param3, int param4, void *param5);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <param name = "vSpeed">No documentation.</param>
        /// <param name = "vMin">No documentation.</param>
        /// <param name = "vMax">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igDragInt4([In] const char* label,[In] int* v,[In] float v_speed,[In] int v_min,[In] int v_max,[In] const char* format)</unmanaged>
        /// <unmanaged-short>igDragInt4</unmanaged-short>
        public static unsafe System.Boolean DragInt4(System.String label, System.Int32 v, System.Single vSpeed, System.Int32 vMin, System.Int32 vMax, System.String format)
        {
            System.IntPtr label_;
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igDragInt4_((void *)label_, &v, vSpeed, vMin, vMax, (void *)format_);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igDragInt4", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igDragInt4_(void *param0, void *param1, float param2, int param3, int param4, void *param5);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "vCurrentMin">No documentation.</param>
        /// <param name = "vCurrentMax">No documentation.</param>
        /// <param name = "vSpeed">No documentation.</param>
        /// <param name = "vMin">No documentation.</param>
        /// <param name = "vMax">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <param name = "formatMax">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igDragIntRange2([In] const char* label,[In] int* v_current_min,[In] int* v_current_max,[In] float v_speed,[In] int v_min,[In] int v_max,[In] const char* format,[In] const char* format_max)</unmanaged>
        /// <unmanaged-short>igDragIntRange2</unmanaged-short>
        public static unsafe System.Boolean DragIntRange2(System.String label, System.Int32 vCurrentMin, System.Int32 vCurrentMax, System.Single vSpeed, System.Int32 vMin, System.Int32 vMax, System.String format, System.String formatMax)
        {
            System.IntPtr label_;
            System.IntPtr format_;
            System.IntPtr formatMax_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            formatMax_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(formatMax);
            __result__native = igDragIntRange2_((void *)label_, &vCurrentMin, &vCurrentMax, vSpeed, vMin, vMax, (void *)format_, (void *)formatMax_);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(formatMax_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igDragIntRange2", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igDragIntRange2_(void *param0, void *param1, void *param2, float param3, int param4, int param5, void *param6, void *param7);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "dataType">No documentation.</param>
        /// <param name = "dataRef">No documentation.</param>
        /// <param name = "vSpeed">No documentation.</param>
        /// <param name = "minRef">No documentation.</param>
        /// <param name = "maxRef">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <param name = "power">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igDragScalar([In] const char* label,[In] int data_type,[In] void* p_data,[In] float v_speed,[In] const void* p_min,[In] const void* p_max,[In] const char* format,[In] float power)</unmanaged>
        /// <unmanaged-short>igDragScalar</unmanaged-short>
        public static unsafe System.Boolean DragScalar(System.String label, System.Int32 dataType, System.IntPtr dataRef, System.Single vSpeed, System.IntPtr minRef, System.IntPtr maxRef, System.String format, System.Single power)
        {
            System.IntPtr label_;
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igDragScalar_((void *)label_, dataType, (void *)dataRef, vSpeed, (void *)minRef, (void *)maxRef, (void *)format_, power);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igDragScalar", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igDragScalar_(void *param0, int param1, void *param2, float param3, void *param4, void *param5, void *param6, float param7);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "dataType">No documentation.</param>
        /// <param name = "dataRef">No documentation.</param>
        /// <param name = "components">No documentation.</param>
        /// <param name = "vSpeed">No documentation.</param>
        /// <param name = "minRef">No documentation.</param>
        /// <param name = "maxRef">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <param name = "power">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igDragScalarN([In] const char* label,[In] int data_type,[In] void* p_data,[In] int components,[In] float v_speed,[In] const void* p_min,[In] const void* p_max,[In] const char* format,[In] float power)</unmanaged>
        /// <unmanaged-short>igDragScalarN</unmanaged-short>
        public static unsafe System.Boolean DragScalarN(System.String label, System.Int32 dataType, System.IntPtr dataRef, System.Int32 components, System.Single vSpeed, System.IntPtr minRef, System.IntPtr maxRef, System.String format, System.Single power)
        {
            System.IntPtr label_;
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igDragScalarN_((void *)label_, dataType, (void *)dataRef, components, vSpeed, (void *)minRef, (void *)maxRef, (void *)format_, power);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igDragScalarN", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igDragScalarN_(void *param0, int param1, void *param2, int param3, float param4, void *param5, void *param6, void *param7, float param8);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <param name = "vMin">No documentation.</param>
        /// <param name = "vMax">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <param name = "power">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igSliderFloat([In] const char* label,[In] float* v,[In] float v_min,[In] float v_max,[In] const char* format,[In] float power)</unmanaged>
        /// <unmanaged-short>igSliderFloat</unmanaged-short>
        public static unsafe System.Boolean SliderFloat(System.String label, System.Single v, System.Single vMin, System.Single vMax, System.String format, System.Single power)
        {
            System.IntPtr label_;
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igSliderFloat_((void *)label_, &v, vMin, vMax, (void *)format_, power);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSliderFloat", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igSliderFloat_(void *param0, void *param1, float param2, float param3, void *param4, float param5);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <param name = "vMin">No documentation.</param>
        /// <param name = "vMax">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <param name = "power">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igSliderFloat2([In] const char* label,[In] float* v,[In] float v_min,[In] float v_max,[In] const char* format,[In] float power)</unmanaged>
        /// <unmanaged-short>igSliderFloat2</unmanaged-short>
        public static unsafe System.Boolean SliderFloat2(System.String label, System.Single v, System.Single vMin, System.Single vMax, System.String format, System.Single power)
        {
            System.IntPtr label_;
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igSliderFloat2_((void *)label_, &v, vMin, vMax, (void *)format_, power);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSliderFloat2", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igSliderFloat2_(void *param0, void *param1, float param2, float param3, void *param4, float param5);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <param name = "vMin">No documentation.</param>
        /// <param name = "vMax">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <param name = "power">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igSliderFloat3([In] const char* label,[In] float* v,[In] float v_min,[In] float v_max,[In] const char* format,[In] float power)</unmanaged>
        /// <unmanaged-short>igSliderFloat3</unmanaged-short>
        public static unsafe System.Boolean SliderFloat3(System.String label, System.Single v, System.Single vMin, System.Single vMax, System.String format, System.Single power)
        {
            System.IntPtr label_;
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igSliderFloat3_((void *)label_, &v, vMin, vMax, (void *)format_, power);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSliderFloat3", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igSliderFloat3_(void *param0, void *param1, float param2, float param3, void *param4, float param5);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <param name = "vMin">No documentation.</param>
        /// <param name = "vMax">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <param name = "power">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igSliderFloat4([In] const char* label,[In] float* v,[In] float v_min,[In] float v_max,[In] const char* format,[In] float power)</unmanaged>
        /// <unmanaged-short>igSliderFloat4</unmanaged-short>
        public static unsafe System.Boolean SliderFloat4(System.String label, System.Single v, System.Single vMin, System.Single vMax, System.String format, System.Single power)
        {
            System.IntPtr label_;
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igSliderFloat4_((void *)label_, &v, vMin, vMax, (void *)format_, power);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSliderFloat4", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igSliderFloat4_(void *param0, void *param1, float param2, float param3, void *param4, float param5);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "vRad">No documentation.</param>
        /// <param name = "vDegreesMin">No documentation.</param>
        /// <param name = "vDegreesMax">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igSliderAngle([In] const char* label,[In] float* v_rad,[In] float v_degrees_min,[In] float v_degrees_max,[In] const char* format)</unmanaged>
        /// <unmanaged-short>igSliderAngle</unmanaged-short>
        public static unsafe System.Boolean SliderAngle(System.String label, System.Single vRad, System.Single vDegreesMin, System.Single vDegreesMax, System.String format)
        {
            System.IntPtr label_;
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igSliderAngle_((void *)label_, &vRad, vDegreesMin, vDegreesMax, (void *)format_);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSliderAngle", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igSliderAngle_(void *param0, void *param1, float param2, float param3, void *param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <param name = "vMin">No documentation.</param>
        /// <param name = "vMax">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igSliderInt([In] const char* label,[In] int* v,[In] int v_min,[In] int v_max,[In] const char* format)</unmanaged>
        /// <unmanaged-short>igSliderInt</unmanaged-short>
        public static unsafe System.Boolean SliderInt(System.String label, System.Int32 v, System.Int32 vMin, System.Int32 vMax, System.String format)
        {
            System.IntPtr label_;
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igSliderInt_((void *)label_, &v, vMin, vMax, (void *)format_);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSliderInt", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igSliderInt_(void *param0, void *param1, int param2, int param3, void *param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <param name = "vMin">No documentation.</param>
        /// <param name = "vMax">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igSliderInt2([In] const char* label,[In] int* v,[In] int v_min,[In] int v_max,[In] const char* format)</unmanaged>
        /// <unmanaged-short>igSliderInt2</unmanaged-short>
        public static unsafe System.Boolean SliderInt2(System.String label, System.Int32 v, System.Int32 vMin, System.Int32 vMax, System.String format)
        {
            System.IntPtr label_;
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igSliderInt2_((void *)label_, &v, vMin, vMax, (void *)format_);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSliderInt2", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igSliderInt2_(void *param0, void *param1, int param2, int param3, void *param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <param name = "vMin">No documentation.</param>
        /// <param name = "vMax">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igSliderInt3([In] const char* label,[In] int* v,[In] int v_min,[In] int v_max,[In] const char* format)</unmanaged>
        /// <unmanaged-short>igSliderInt3</unmanaged-short>
        public static unsafe System.Boolean SliderInt3(System.String label, System.Int32 v, System.Int32 vMin, System.Int32 vMax, System.String format)
        {
            System.IntPtr label_;
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igSliderInt3_((void *)label_, &v, vMin, vMax, (void *)format_);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSliderInt3", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igSliderInt3_(void *param0, void *param1, int param2, int param3, void *param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <param name = "vMin">No documentation.</param>
        /// <param name = "vMax">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igSliderInt4([In] const char* label,[In] int* v,[In] int v_min,[In] int v_max,[In] const char* format)</unmanaged>
        /// <unmanaged-short>igSliderInt4</unmanaged-short>
        public static unsafe System.Boolean SliderInt4(System.String label, System.Int32 v, System.Int32 vMin, System.Int32 vMax, System.String format)
        {
            System.IntPtr label_;
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igSliderInt4_((void *)label_, &v, vMin, vMax, (void *)format_);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSliderInt4", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igSliderInt4_(void *param0, void *param1, int param2, int param3, void *param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "dataType">No documentation.</param>
        /// <param name = "dataRef">No documentation.</param>
        /// <param name = "minRef">No documentation.</param>
        /// <param name = "maxRef">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <param name = "power">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igSliderScalar([In] const char* label,[In] int data_type,[In] void* p_data,[In] const void* p_min,[In] const void* p_max,[In] const char* format,[In] float power)</unmanaged>
        /// <unmanaged-short>igSliderScalar</unmanaged-short>
        public static unsafe System.Boolean SliderScalar(System.String label, System.Int32 dataType, System.IntPtr dataRef, System.IntPtr minRef, System.IntPtr maxRef, System.String format, System.Single power)
        {
            System.IntPtr label_;
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igSliderScalar_((void *)label_, dataType, (void *)dataRef, (void *)minRef, (void *)maxRef, (void *)format_, power);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSliderScalar", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igSliderScalar_(void *param0, int param1, void *param2, void *param3, void *param4, void *param5, float param6);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "dataType">No documentation.</param>
        /// <param name = "dataRef">No documentation.</param>
        /// <param name = "components">No documentation.</param>
        /// <param name = "minRef">No documentation.</param>
        /// <param name = "maxRef">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <param name = "power">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igSliderScalarN([In] const char* label,[In] int data_type,[In] void* p_data,[In] int components,[In] const void* p_min,[In] const void* p_max,[In] const char* format,[In] float power)</unmanaged>
        /// <unmanaged-short>igSliderScalarN</unmanaged-short>
        public static unsafe System.Boolean SliderScalarN(System.String label, System.Int32 dataType, System.IntPtr dataRef, System.Int32 components, System.IntPtr minRef, System.IntPtr maxRef, System.String format, System.Single power)
        {
            System.IntPtr label_;
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igSliderScalarN_((void *)label_, dataType, (void *)dataRef, components, (void *)minRef, (void *)maxRef, (void *)format_, power);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSliderScalarN", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igSliderScalarN_(void *param0, int param1, void *param2, int param3, void *param4, void *param5, void *param6, float param7);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "size">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <param name = "vMin">No documentation.</param>
        /// <param name = "vMax">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <param name = "power">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igVSliderFloat([In] const char* label,[In] const ImVec2 size,[In] float* v,[In] float v_min,[In] float v_max,[In] const char* format,[In] float power)</unmanaged>
        /// <unmanaged-short>igVSliderFloat</unmanaged-short>
        public static unsafe System.Boolean VSliderFloat(System.String label, DearImguiSharp.ImVec2 size, System.Single v, System.Single vMin, System.Single vMax, System.String format, System.Single power)
        {
            System.IntPtr label_;
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igVSliderFloat_((void *)label_, size, &v, vMin, vMax, (void *)format_, power);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igVSliderFloat", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igVSliderFloat_(void *param0, DearImguiSharp.ImVec2 param1, void *param2, float param3, float param4, void *param5, float param6);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "size">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <param name = "vMin">No documentation.</param>
        /// <param name = "vMax">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igVSliderInt([In] const char* label,[In] const ImVec2 size,[In] int* v,[In] int v_min,[In] int v_max,[In] const char* format)</unmanaged>
        /// <unmanaged-short>igVSliderInt</unmanaged-short>
        public static unsafe System.Boolean VSliderInt(System.String label, DearImguiSharp.ImVec2 size, System.Int32 v, System.Int32 vMin, System.Int32 vMax, System.String format)
        {
            System.IntPtr label_;
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igVSliderInt_((void *)label_, size, &v, vMin, vMax, (void *)format_);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igVSliderInt", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igVSliderInt_(void *param0, DearImguiSharp.ImVec2 param1, void *param2, int param3, int param4, void *param5);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "size">No documentation.</param>
        /// <param name = "dataType">No documentation.</param>
        /// <param name = "dataRef">No documentation.</param>
        /// <param name = "minRef">No documentation.</param>
        /// <param name = "maxRef">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <param name = "power">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igVSliderScalar([In] const char* label,[In] const ImVec2 size,[In] int data_type,[In] void* p_data,[In] const void* p_min,[In] const void* p_max,[In] const char* format,[In] float power)</unmanaged>
        /// <unmanaged-short>igVSliderScalar</unmanaged-short>
        public static unsafe System.Boolean VSliderScalar(System.String label, DearImguiSharp.ImVec2 size, System.Int32 dataType, System.IntPtr dataRef, System.IntPtr minRef, System.IntPtr maxRef, System.String format, System.Single power)
        {
            System.IntPtr label_;
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igVSliderScalar_((void *)label_, size, dataType, (void *)dataRef, (void *)minRef, (void *)maxRef, (void *)format_, power);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igVSliderScalar", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igVSliderScalar_(void *param0, DearImguiSharp.ImVec2 param1, int param2, void *param3, void *param4, void *param5, void *param6, float param7);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "buf">No documentation.</param>
        /// <param name = "bufSize">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <param name = "callback">No documentation.</param>
        /// <param name = "userData">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igInputText([In] const char* label,[In] char* buf,[In] size_t buf_size,[In] int flags,[In] __function__stdcall* callback,[In] void* user_data)</unmanaged>
        /// <unmanaged-short>igInputText</unmanaged-short>
        public static unsafe System.Boolean InputText(System.String label, System.String buf, SharpGen.Runtime.PointerSize bufSize, System.Int32 flags, SharpGen.Runtime.FunctionCallback callback, System.IntPtr userData)
        {
            System.IntPtr label_;
            System.IntPtr buf_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            buf_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(buf);
            __result__native = igInputText_((void *)label_, (void *)buf_, (void *)bufSize, flags, callback, (void *)userData);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(buf_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igInputText", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igInputText_(void *param0, void *param1, void *param2, int param3, void *param4, void *param5);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "buf">No documentation.</param>
        /// <param name = "bufSize">No documentation.</param>
        /// <param name = "size">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <param name = "callback">No documentation.</param>
        /// <param name = "userData">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igInputTextMultiline([In] const char* label,[In] char* buf,[In] size_t buf_size,[In] const ImVec2 size,[In] int flags,[In] __function__stdcall* callback,[In] void* user_data)</unmanaged>
        /// <unmanaged-short>igInputTextMultiline</unmanaged-short>
        public static unsafe System.Boolean InputTextMultiline(System.String label, System.String buf, SharpGen.Runtime.PointerSize bufSize, DearImguiSharp.ImVec2 size, System.Int32 flags, SharpGen.Runtime.FunctionCallback callback, System.IntPtr userData)
        {
            System.IntPtr label_;
            System.IntPtr buf_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            buf_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(buf);
            __result__native = igInputTextMultiline_((void *)label_, (void *)buf_, (void *)bufSize, size, flags, callback, (void *)userData);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(buf_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igInputTextMultiline", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igInputTextMultiline_(void *param0, void *param1, void *param2, DearImguiSharp.ImVec2 param3, int param4, void *param5, void *param6);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "hint">No documentation.</param>
        /// <param name = "buf">No documentation.</param>
        /// <param name = "bufSize">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <param name = "callback">No documentation.</param>
        /// <param name = "userData">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igInputTextWithHint([In] const char* label,[In] const char* hint,[In] char* buf,[In] size_t buf_size,[In] int flags,[In] __function__stdcall* callback,[In] void* user_data)</unmanaged>
        /// <unmanaged-short>igInputTextWithHint</unmanaged-short>
        public static unsafe System.Boolean InputTextWithHint(System.String label, System.String hint, System.String buf, SharpGen.Runtime.PointerSize bufSize, System.Int32 flags, SharpGen.Runtime.FunctionCallback callback, System.IntPtr userData)
        {
            System.IntPtr label_;
            System.IntPtr hint_;
            System.IntPtr buf_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            hint_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(hint);
            buf_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(buf);
            __result__native = igInputTextWithHint_((void *)label_, (void *)hint_, (void *)buf_, (void *)bufSize, flags, callback, (void *)userData);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(hint_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(buf_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igInputTextWithHint", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igInputTextWithHint_(void *param0, void *param1, void *param2, void *param3, int param4, void *param5, void *param6);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <param name = "step">No documentation.</param>
        /// <param name = "stepFast">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igInputFloat([In] const char* label,[In] float* v,[In] float step,[In] float step_fast,[In] const char* format,[In] int flags)</unmanaged>
        /// <unmanaged-short>igInputFloat</unmanaged-short>
        public static unsafe System.Boolean InputFloat(System.String label, System.Single v, System.Single step, System.Single stepFast, System.String format, System.Int32 flags)
        {
            System.IntPtr label_;
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igInputFloat_((void *)label_, &v, step, stepFast, (void *)format_, flags);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igInputFloat", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igInputFloat_(void *param0, void *param1, float param2, float param3, void *param4, int param5);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igInputFloat2([In] const char* label,[In] float* v,[In] const char* format,[In] int flags)</unmanaged>
        /// <unmanaged-short>igInputFloat2</unmanaged-short>
        public static unsafe System.Boolean InputFloat2(System.String label, System.Single v, System.String format, System.Int32 flags)
        {
            System.IntPtr label_;
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igInputFloat2_((void *)label_, &v, (void *)format_, flags);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igInputFloat2", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igInputFloat2_(void *param0, void *param1, void *param2, int param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igInputFloat3([In] const char* label,[In] float* v,[In] const char* format,[In] int flags)</unmanaged>
        /// <unmanaged-short>igInputFloat3</unmanaged-short>
        public static unsafe System.Boolean InputFloat3(System.String label, System.Single v, System.String format, System.Int32 flags)
        {
            System.IntPtr label_;
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igInputFloat3_((void *)label_, &v, (void *)format_, flags);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igInputFloat3", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igInputFloat3_(void *param0, void *param1, void *param2, int param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igInputFloat4([In] const char* label,[In] float* v,[In] const char* format,[In] int flags)</unmanaged>
        /// <unmanaged-short>igInputFloat4</unmanaged-short>
        public static unsafe System.Boolean InputFloat4(System.String label, System.Single v, System.String format, System.Int32 flags)
        {
            System.IntPtr label_;
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igInputFloat4_((void *)label_, &v, (void *)format_, flags);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igInputFloat4", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igInputFloat4_(void *param0, void *param1, void *param2, int param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <param name = "step">No documentation.</param>
        /// <param name = "stepFast">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igInputInt([In] const char* label,[In] int* v,[In] int step,[In] int step_fast,[In] int flags)</unmanaged>
        /// <unmanaged-short>igInputInt</unmanaged-short>
        public static unsafe System.Boolean InputInt(System.String label, System.Int32 v, System.Int32 step, System.Int32 stepFast, System.Int32 flags)
        {
            System.IntPtr label_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            __result__native = igInputInt_((void *)label_, &v, step, stepFast, flags);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igInputInt", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igInputInt_(void *param0, void *param1, int param2, int param3, int param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igInputInt2([In] const char* label,[In] int* v,[In] int flags)</unmanaged>
        /// <unmanaged-short>igInputInt2</unmanaged-short>
        public static unsafe System.Boolean InputInt2(System.String label, System.Int32 v, System.Int32 flags)
        {
            System.IntPtr label_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            __result__native = igInputInt2_((void *)label_, &v, flags);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igInputInt2", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igInputInt2_(void *param0, void *param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igInputInt3([In] const char* label,[In] int* v,[In] int flags)</unmanaged>
        /// <unmanaged-short>igInputInt3</unmanaged-short>
        public static unsafe System.Boolean InputInt3(System.String label, System.Int32 v, System.Int32 flags)
        {
            System.IntPtr label_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            __result__native = igInputInt3_((void *)label_, &v, flags);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igInputInt3", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igInputInt3_(void *param0, void *param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igInputInt4([In] const char* label,[In] int* v,[In] int flags)</unmanaged>
        /// <unmanaged-short>igInputInt4</unmanaged-short>
        public static unsafe System.Boolean InputInt4(System.String label, System.Int32 v, System.Int32 flags)
        {
            System.IntPtr label_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            __result__native = igInputInt4_((void *)label_, &v, flags);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igInputInt4", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igInputInt4_(void *param0, void *param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <param name = "step">No documentation.</param>
        /// <param name = "stepFast">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igInputDouble([In] const char* label,[In] double* v,[In] double step,[In] double step_fast,[In] const char* format,[In] int flags)</unmanaged>
        /// <unmanaged-short>igInputDouble</unmanaged-short>
        public static unsafe System.Boolean InputDouble(System.String label, System.Double v, System.Double step, System.Double stepFast, System.String format, System.Int32 flags)
        {
            System.IntPtr label_;
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igInputDouble_((void *)label_, &v, step, stepFast, (void *)format_, flags);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igInputDouble", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igInputDouble_(void *param0, void *param1, double param2, double param3, void *param4, int param5);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "dataType">No documentation.</param>
        /// <param name = "dataRef">No documentation.</param>
        /// <param name = "stepRef">No documentation.</param>
        /// <param name = "stepFastRef">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igInputScalar([In] const char* label,[In] int data_type,[In] void* p_data,[In] const void* p_step,[In] const void* p_step_fast,[In] const char* format,[In] int flags)</unmanaged>
        /// <unmanaged-short>igInputScalar</unmanaged-short>
        public static unsafe System.Boolean InputScalar(System.String label, System.Int32 dataType, System.IntPtr dataRef, System.IntPtr stepRef, System.IntPtr stepFastRef, System.String format, System.Int32 flags)
        {
            System.IntPtr label_;
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igInputScalar_((void *)label_, dataType, (void *)dataRef, (void *)stepRef, (void *)stepFastRef, (void *)format_, flags);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igInputScalar", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igInputScalar_(void *param0, int param1, void *param2, void *param3, void *param4, void *param5, int param6);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "dataType">No documentation.</param>
        /// <param name = "dataRef">No documentation.</param>
        /// <param name = "components">No documentation.</param>
        /// <param name = "stepRef">No documentation.</param>
        /// <param name = "stepFastRef">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igInputScalarN([In] const char* label,[In] int data_type,[In] void* p_data,[In] int components,[In] const void* p_step,[In] const void* p_step_fast,[In] const char* format,[In] int flags)</unmanaged>
        /// <unmanaged-short>igInputScalarN</unmanaged-short>
        public static unsafe System.Boolean InputScalarN(System.String label, System.Int32 dataType, System.IntPtr dataRef, System.Int32 components, System.IntPtr stepRef, System.IntPtr stepFastRef, System.String format, System.Int32 flags)
        {
            System.IntPtr label_;
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igInputScalarN_((void *)label_, dataType, (void *)dataRef, components, (void *)stepRef, (void *)stepFastRef, (void *)format_, flags);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igInputScalarN", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igInputScalarN_(void *param0, int param1, void *param2, int param3, void *param4, void *param5, void *param6, int param7);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igColorEdit3([In] const char* label,[In] float* col,[In] int flags)</unmanaged>
        /// <unmanaged-short>igColorEdit3</unmanaged-short>
        public static unsafe System.Boolean ColorEdit3(System.String label, System.Single col, System.Int32 flags)
        {
            System.IntPtr label_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            __result__native = igColorEdit3_((void *)label_, &col, flags);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igColorEdit3", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igColorEdit3_(void *param0, void *param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igColorEdit4([In] const char* label,[In] float* col,[In] int flags)</unmanaged>
        /// <unmanaged-short>igColorEdit4</unmanaged-short>
        public static unsafe System.Boolean ColorEdit4(System.String label, System.Single col, System.Int32 flags)
        {
            System.IntPtr label_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            __result__native = igColorEdit4_((void *)label_, &col, flags);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igColorEdit4", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igColorEdit4_(void *param0, void *param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igColorPicker3([In] const char* label,[In] float* col,[In] int flags)</unmanaged>
        /// <unmanaged-short>igColorPicker3</unmanaged-short>
        public static unsafe System.Boolean ColorPicker3(System.String label, System.Single col, System.Int32 flags)
        {
            System.IntPtr label_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            __result__native = igColorPicker3_((void *)label_, &col, flags);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igColorPicker3", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igColorPicker3_(void *param0, void *param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <param name = "refCol">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igColorPicker4([In] const char* label,[In] float* col,[In] int flags,[In] const float* ref_col)</unmanaged>
        /// <unmanaged-short>igColorPicker4</unmanaged-short>
        public static unsafe System.Boolean ColorPicker4(System.String label, System.Single col, System.Int32 flags, System.Single refCol)
        {
            System.IntPtr label_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            __result__native = igColorPicker4_((void *)label_, &col, flags, &refCol);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igColorPicker4", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igColorPicker4_(void *param0, void *param1, int param2, void *param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "descId">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <param name = "size">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igColorButton([In] const char* desc_id,[In] const ImVec4 col,[In] int flags,[In] ImVec2 size)</unmanaged>
        /// <unmanaged-short>igColorButton</unmanaged-short>
        public static unsafe System.Boolean ColorButton(System.String descId, DearImguiSharp.ImVec4 col, System.Int32 flags, DearImguiSharp.ImVec2 size)
        {
            System.IntPtr descId_;
            System.Boolean __result__;
            System.Byte __result__native;
            descId_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(descId);
            __result__native = igColorButton_((void *)descId_, col, flags, size);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(descId_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igColorButton", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igColorButton_(void *param0, DearImguiSharp.ImVec4 param1, int param2, DearImguiSharp.ImVec2 param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "flags">No documentation.</param>
        /// <unmanaged>void igSetColorEditOptions([In] int flags)</unmanaged>
        /// <unmanaged-short>igSetColorEditOptions</unmanaged-short>
        public static unsafe void SetColorEditOptions(System.Int32 flags)
        {
            igSetColorEditOptions_(flags);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetColorEditOptions", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetColorEditOptions_(int param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igTreeNodeStr([In] const char* label)</unmanaged>
        /// <unmanaged-short>igTreeNodeStr</unmanaged-short>
        public static unsafe System.Boolean TreeNodeStr(System.String label)
        {
            System.IntPtr label_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            __result__native = igTreeNodeStr_((void *)label_);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTreeNodeStr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igTreeNodeStr_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "strId">No documentation.</param>
        /// <param name = "fmt">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igTreeNodeStrStr([In] const char* str_id,[In] const char* fmt)</unmanaged>
        /// <unmanaged-short>igTreeNodeStrStr</unmanaged-short>
        public static unsafe System.Boolean TreeNodeStrStr(System.String strId, System.String fmt)
        {
            System.IntPtr strId_;
            System.IntPtr fmt_;
            System.Boolean __result__;
            System.Byte __result__native;
            strId_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(strId);
            fmt_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(fmt);
            __result__native = igTreeNodeStrStr_((void *)strId_, (void *)fmt_);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(strId_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(fmt_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTreeNodeStrStr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igTreeNodeStrStr_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "trIdRef">No documentation.</param>
        /// <param name = "fmt">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igTreeNodePtr([In] const void* ptr_id,[In] const char* fmt)</unmanaged>
        /// <unmanaged-short>igTreeNodePtr</unmanaged-short>
        public static unsafe System.Boolean TreeNodePtr(System.IntPtr trIdRef, System.String fmt)
        {
            System.IntPtr fmt_;
            System.Boolean __result__;
            System.Byte __result__native;
            fmt_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(fmt);
            __result__native = igTreeNodePtr_((void *)trIdRef, (void *)fmt_);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(fmt_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTreeNodePtr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igTreeNodePtr_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "strId">No documentation.</param>
        /// <param name = "fmt">No documentation.</param>
        /// <param name = "args">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igTreeNodeVStr([In] const char* str_id,[In] const char* fmt,[In] char* args)</unmanaged>
        /// <unmanaged-short>igTreeNodeVStr</unmanaged-short>
        public static unsafe System.Boolean TreeNodeVStr(System.String strId, System.String fmt, System.String args)
        {
            System.IntPtr strId_;
            System.IntPtr fmt_;
            System.IntPtr args_;
            System.Boolean __result__;
            System.Byte __result__native;
            strId_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(strId);
            fmt_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(fmt);
            args_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(args);
            __result__native = igTreeNodeVStr_((void *)strId_, (void *)fmt_, (void *)args_);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(strId_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(fmt_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(args_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTreeNodeVStr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igTreeNodeVStr_(void *param0, void *param1, void *param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "trIdRef">No documentation.</param>
        /// <param name = "fmt">No documentation.</param>
        /// <param name = "args">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igTreeNodeVPtr([In] const void* ptr_id,[In] const char* fmt,[In] char* args)</unmanaged>
        /// <unmanaged-short>igTreeNodeVPtr</unmanaged-short>
        public static unsafe System.Boolean TreeNodeVPtr(System.IntPtr trIdRef, System.String fmt, System.String args)
        {
            System.IntPtr fmt_;
            System.IntPtr args_;
            System.Boolean __result__;
            System.Byte __result__native;
            fmt_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(fmt);
            args_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(args);
            __result__native = igTreeNodeVPtr_((void *)trIdRef, (void *)fmt_, (void *)args_);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(fmt_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(args_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTreeNodeVPtr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igTreeNodeVPtr_(void *param0, void *param1, void *param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igTreeNodeExStr([In] const char* label,[In] int flags)</unmanaged>
        /// <unmanaged-short>igTreeNodeExStr</unmanaged-short>
        public static unsafe System.Boolean TreeNodeExStr(System.String label, System.Int32 flags)
        {
            System.IntPtr label_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            __result__native = igTreeNodeExStr_((void *)label_, flags);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTreeNodeExStr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igTreeNodeExStr_(void *param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "strId">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <param name = "fmt">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igTreeNodeExStrStr([In] const char* str_id,[In] int flags,[In] const char* fmt)</unmanaged>
        /// <unmanaged-short>igTreeNodeExStrStr</unmanaged-short>
        public static unsafe System.Boolean TreeNodeExStrStr(System.String strId, System.Int32 flags, System.String fmt)
        {
            System.IntPtr strId_;
            System.IntPtr fmt_;
            System.Boolean __result__;
            System.Byte __result__native;
            strId_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(strId);
            fmt_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(fmt);
            __result__native = igTreeNodeExStrStr_((void *)strId_, flags, (void *)fmt_);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(strId_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(fmt_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTreeNodeExStrStr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igTreeNodeExStrStr_(void *param0, int param1, void *param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "trIdRef">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <param name = "fmt">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igTreeNodeExPtr([In] const void* ptr_id,[In] int flags,[In] const char* fmt)</unmanaged>
        /// <unmanaged-short>igTreeNodeExPtr</unmanaged-short>
        public static unsafe System.Boolean TreeNodeExPtr(System.IntPtr trIdRef, System.Int32 flags, System.String fmt)
        {
            System.IntPtr fmt_;
            System.Boolean __result__;
            System.Byte __result__native;
            fmt_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(fmt);
            __result__native = igTreeNodeExPtr_((void *)trIdRef, flags, (void *)fmt_);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(fmt_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTreeNodeExPtr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igTreeNodeExPtr_(void *param0, int param1, void *param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "strId">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <param name = "fmt">No documentation.</param>
        /// <param name = "args">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igTreeNodeExVStr([In] const char* str_id,[In] int flags,[In] const char* fmt,[In] char* args)</unmanaged>
        /// <unmanaged-short>igTreeNodeExVStr</unmanaged-short>
        public static unsafe System.Boolean TreeNodeExVStr(System.String strId, System.Int32 flags, System.String fmt, System.String args)
        {
            System.IntPtr strId_;
            System.IntPtr fmt_;
            System.IntPtr args_;
            System.Boolean __result__;
            System.Byte __result__native;
            strId_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(strId);
            fmt_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(fmt);
            args_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(args);
            __result__native = igTreeNodeExVStr_((void *)strId_, flags, (void *)fmt_, (void *)args_);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(strId_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(fmt_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(args_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTreeNodeExVStr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igTreeNodeExVStr_(void *param0, int param1, void *param2, void *param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "trIdRef">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <param name = "fmt">No documentation.</param>
        /// <param name = "args">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igTreeNodeExVPtr([In] const void* ptr_id,[In] int flags,[In] const char* fmt,[In] char* args)</unmanaged>
        /// <unmanaged-short>igTreeNodeExVPtr</unmanaged-short>
        public static unsafe System.Boolean TreeNodeExVPtr(System.IntPtr trIdRef, System.Int32 flags, System.String fmt, System.String args)
        {
            System.IntPtr fmt_;
            System.IntPtr args_;
            System.Boolean __result__;
            System.Byte __result__native;
            fmt_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(fmt);
            args_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(args);
            __result__native = igTreeNodeExVPtr_((void *)trIdRef, flags, (void *)fmt_, (void *)args_);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(fmt_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(args_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTreeNodeExVPtr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igTreeNodeExVPtr_(void *param0, int param1, void *param2, void *param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "strId">No documentation.</param>
        /// <unmanaged>void igTreePushStr([In] const char* str_id)</unmanaged>
        /// <unmanaged-short>igTreePushStr</unmanaged-short>
        public static unsafe void TreePushStr(System.String strId)
        {
            System.IntPtr strId_;
            strId_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(strId);
            igTreePushStr_((void *)strId_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(strId_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTreePushStr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igTreePushStr_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "trIdRef">No documentation.</param>
        /// <unmanaged>void igTreePushPtr([In] const void* ptr_id)</unmanaged>
        /// <unmanaged-short>igTreePushPtr</unmanaged-short>
        public static unsafe void TreePushPtr(System.IntPtr trIdRef)
        {
            igTreePushPtr_((void *)trIdRef);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTreePushPtr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igTreePushPtr_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igTreePop()</unmanaged>
        /// <unmanaged-short>igTreePop</unmanaged-short>
        public static unsafe void TreePop()
        {
            igTreePop_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTreePop", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igTreePop_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float igGetTreeNodeToLabelSpacing()</unmanaged>
        /// <unmanaged-short>igGetTreeNodeToLabelSpacing</unmanaged-short>
        public static unsafe System.Single GetTreeNodeToLabelSpacing()
        {
            System.Single __result__;
            __result__ = igGetTreeNodeToLabelSpacing_();
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetTreeNodeToLabelSpacing", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float igGetTreeNodeToLabelSpacing_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igCollapsingHeaderTreeNodeFlags([In] const char* label,[In] int flags)</unmanaged>
        /// <unmanaged-short>igCollapsingHeaderTreeNodeFlags</unmanaged-short>
        public static unsafe System.Boolean CollapsingHeaderTreeNodeFlags(System.String label, System.Int32 flags)
        {
            System.IntPtr label_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            __result__native = igCollapsingHeaderTreeNodeFlags_((void *)label_, flags);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igCollapsingHeaderTreeNodeFlags", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igCollapsingHeaderTreeNodeFlags_(void *param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "openRef">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igCollapsingHeaderBoolPtr([In] const char* label,[In] bool* p_open,[In] int flags)</unmanaged>
        /// <unmanaged-short>igCollapsingHeaderBoolPtr</unmanaged-short>
        public static unsafe System.Boolean CollapsingHeaderBoolPtr(System.String label, System.Boolean openRef, System.Int32 flags)
        {
            System.IntPtr label_;
            System.Byte openRef_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            openRef_ = (System.Byte)(openRef ? 1 : 0);
            __result__native = igCollapsingHeaderBoolPtr_((void *)label_, &openRef_, flags);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igCollapsingHeaderBoolPtr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igCollapsingHeaderBoolPtr_(void *param0, void *param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "isOpen">No documentation.</param>
        /// <param name = "cond">No documentation.</param>
        /// <unmanaged>void igSetNextItemOpen([In] bool is_open,[In] int cond)</unmanaged>
        /// <unmanaged-short>igSetNextItemOpen</unmanaged-short>
        public static unsafe void SetNextItemOpen(System.Boolean isOpen, System.Int32 cond)
        {
            System.Byte isOpen_;
            isOpen_ = (System.Byte)(isOpen ? 1 : 0);
            igSetNextItemOpen_(isOpen_, cond);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetNextItemOpen", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetNextItemOpen_(System.Byte param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "selected">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <param name = "size">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igSelectableBool([In] const char* label,[In] bool selected,[In] int flags,[In] const ImVec2 size)</unmanaged>
        /// <unmanaged-short>igSelectableBool</unmanaged-short>
        public static unsafe System.Boolean SelectableBool(System.String label, System.Boolean selected, System.Int32 flags, DearImguiSharp.ImVec2 size)
        {
            System.IntPtr label_;
            System.Byte selected_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            selected_ = (System.Byte)(selected ? 1 : 0);
            __result__native = igSelectableBool_((void *)label_, selected_, flags, size);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSelectableBool", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igSelectableBool_(void *param0, System.Byte param1, int param2, DearImguiSharp.ImVec2 param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "selectedRef">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <param name = "size">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igSelectableBoolPtr([In] const char* label,[In] bool* p_selected,[In] int flags,[In] const ImVec2 size)</unmanaged>
        /// <unmanaged-short>igSelectableBoolPtr</unmanaged-short>
        public static unsafe System.Boolean SelectableBoolPtr(System.String label, System.Boolean selectedRef, System.Int32 flags, DearImguiSharp.ImVec2 size)
        {
            System.IntPtr label_;
            System.Byte selectedRef_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            selectedRef_ = (System.Byte)(selectedRef ? 1 : 0);
            __result__native = igSelectableBoolPtr_((void *)label_, &selectedRef_, flags, size);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSelectableBoolPtr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igSelectableBoolPtr_(void *param0, void *param1, int param2, DearImguiSharp.ImVec2 param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "currentItem">No documentation.</param>
        /// <param name = "items">No documentation.</param>
        /// <param name = "itemsCount">No documentation.</param>
        /// <param name = "heightInItems">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igListBoxStr_arr([In] const char* label,[In] int* current_item,[In] const char** items,[In] int items_count,[In] int height_in_items)</unmanaged>
        /// <unmanaged-short>igListBoxStr_arr</unmanaged-short>
        public static unsafe System.Boolean ListBoxStrArr(System.String label, System.Int32 currentItem, System.String items, System.Int32 itemsCount, System.Int32 heightInItems)
        {
            System.IntPtr label_;
            System.IntPtr items_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            items_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(items);
            __result__native = igListBoxStr_arr_((void *)label_, &currentItem, (void *)items_, itemsCount, heightInItems);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(items_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igListBoxStr_arr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igListBoxStr_arr_(void *param0, void *param1, void *param2, int param3, int param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "currentItem">No documentation.</param>
        /// <param name = "itemsGetter">No documentation.</param>
        /// <param name = "data">No documentation.</param>
        /// <param name = "itemsCount">No documentation.</param>
        /// <param name = "heightInItems">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igListBoxFnPtr([In] const char* label,[In] int* current_item,[In] __function__stdcall* items_getter,[In] void* data,[In] int items_count,[In] int height_in_items)</unmanaged>
        /// <unmanaged-short>igListBoxFnPtr</unmanaged-short>
        public static unsafe System.Boolean ListBoxFnPtr(System.String label, System.Int32 currentItem, SharpGen.Runtime.FunctionCallback itemsGetter, System.IntPtr data, System.Int32 itemsCount, System.Int32 heightInItems)
        {
            System.IntPtr label_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            __result__native = igListBoxFnPtr_((void *)label_, &currentItem, itemsGetter, (void *)data, itemsCount, heightInItems);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igListBoxFnPtr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igListBoxFnPtr_(void *param0, void *param1, void *param2, void *param3, int param4, int param5);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "size">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igListBoxHeaderVec2([In] const char* label,[In] const ImVec2 size)</unmanaged>
        /// <unmanaged-short>igListBoxHeaderVec2</unmanaged-short>
        public static unsafe System.Boolean ListBoxHeaderVec2(System.String label, DearImguiSharp.ImVec2 size)
        {
            System.IntPtr label_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            __result__native = igListBoxHeaderVec2_((void *)label_, size);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igListBoxHeaderVec2", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igListBoxHeaderVec2_(void *param0, DearImguiSharp.ImVec2 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "itemsCount">No documentation.</param>
        /// <param name = "heightInItems">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igListBoxHeaderInt([In] const char* label,[In] int items_count,[In] int height_in_items)</unmanaged>
        /// <unmanaged-short>igListBoxHeaderInt</unmanaged-short>
        public static unsafe System.Boolean ListBoxHeaderInt(System.String label, System.Int32 itemsCount, System.Int32 heightInItems)
        {
            System.IntPtr label_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            __result__native = igListBoxHeaderInt_((void *)label_, itemsCount, heightInItems);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igListBoxHeaderInt", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igListBoxHeaderInt_(void *param0, int param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igListBoxFooter()</unmanaged>
        /// <unmanaged-short>igListBoxFooter</unmanaged-short>
        public static unsafe void ListBoxFooter()
        {
            igListBoxFooter_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igListBoxFooter", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igListBoxFooter_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "values">No documentation.</param>
        /// <param name = "valuesCount">No documentation.</param>
        /// <param name = "valuesOffset">No documentation.</param>
        /// <param name = "overlayText">No documentation.</param>
        /// <param name = "scaleMin">No documentation.</param>
        /// <param name = "scaleMax">No documentation.</param>
        /// <param name = "graphSize">No documentation.</param>
        /// <param name = "stride">No documentation.</param>
        /// <unmanaged>void igPlotLinesFloatPtr([In] const char* label,[In] const float* values,[In] int values_count,[In] int values_offset,[In] const char* overlay_text,[In] float scale_min,[In] float scale_max,[In] ImVec2 graph_size,[In] int stride)</unmanaged>
        /// <unmanaged-short>igPlotLinesFloatPtr</unmanaged-short>
        public static unsafe void PlotLinesFloatPtr(System.String label, System.Single values, System.Int32 valuesCount, System.Int32 valuesOffset, System.String overlayText, System.Single scaleMin, System.Single scaleMax, DearImguiSharp.ImVec2 graphSize, System.Int32 stride)
        {
            System.IntPtr label_;
            System.IntPtr overlayText_;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            overlayText_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(overlayText);
            igPlotLinesFloatPtr_((void *)label_, &values, valuesCount, valuesOffset, (void *)overlayText_, scaleMin, scaleMax, graphSize, stride);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(overlayText_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPlotLinesFloatPtr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPlotLinesFloatPtr_(void *param0, void *param1, int param2, int param3, void *param4, float param5, float param6, DearImguiSharp.ImVec2 param7, int param8);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "valuesGetter">No documentation.</param>
        /// <param name = "data">No documentation.</param>
        /// <param name = "valuesCount">No documentation.</param>
        /// <param name = "valuesOffset">No documentation.</param>
        /// <param name = "overlayText">No documentation.</param>
        /// <param name = "scaleMin">No documentation.</param>
        /// <param name = "scaleMax">No documentation.</param>
        /// <param name = "graphSize">No documentation.</param>
        /// <unmanaged>void igPlotLinesFnPtr([In] const char* label,[In] __function__stdcall* values_getter,[In] void* data,[In] int values_count,[In] int values_offset,[In] const char* overlay_text,[In] float scale_min,[In] float scale_max,[In] ImVec2 graph_size)</unmanaged>
        /// <unmanaged-short>igPlotLinesFnPtr</unmanaged-short>
        public static unsafe void PlotLinesFnPtr(System.String label, SharpGen.Runtime.FunctionCallback valuesGetter, System.IntPtr data, System.Int32 valuesCount, System.Int32 valuesOffset, System.String overlayText, System.Single scaleMin, System.Single scaleMax, DearImguiSharp.ImVec2 graphSize)
        {
            System.IntPtr label_;
            System.IntPtr overlayText_;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            overlayText_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(overlayText);
            igPlotLinesFnPtr_((void *)label_, valuesGetter, (void *)data, valuesCount, valuesOffset, (void *)overlayText_, scaleMin, scaleMax, graphSize);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(overlayText_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPlotLinesFnPtr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPlotLinesFnPtr_(void *param0, void *param1, void *param2, int param3, int param4, void *param5, float param6, float param7, DearImguiSharp.ImVec2 param8);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "values">No documentation.</param>
        /// <param name = "valuesCount">No documentation.</param>
        /// <param name = "valuesOffset">No documentation.</param>
        /// <param name = "overlayText">No documentation.</param>
        /// <param name = "scaleMin">No documentation.</param>
        /// <param name = "scaleMax">No documentation.</param>
        /// <param name = "graphSize">No documentation.</param>
        /// <param name = "stride">No documentation.</param>
        /// <unmanaged>void igPlotHistogramFloatPtr([In] const char* label,[In] const float* values,[In] int values_count,[In] int values_offset,[In] const char* overlay_text,[In] float scale_min,[In] float scale_max,[In] ImVec2 graph_size,[In] int stride)</unmanaged>
        /// <unmanaged-short>igPlotHistogramFloatPtr</unmanaged-short>
        public static unsafe void PlotHistogramFloatPtr(System.String label, System.Single values, System.Int32 valuesCount, System.Int32 valuesOffset, System.String overlayText, System.Single scaleMin, System.Single scaleMax, DearImguiSharp.ImVec2 graphSize, System.Int32 stride)
        {
            System.IntPtr label_;
            System.IntPtr overlayText_;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            overlayText_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(overlayText);
            igPlotHistogramFloatPtr_((void *)label_, &values, valuesCount, valuesOffset, (void *)overlayText_, scaleMin, scaleMax, graphSize, stride);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(overlayText_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPlotHistogramFloatPtr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPlotHistogramFloatPtr_(void *param0, void *param1, int param2, int param3, void *param4, float param5, float param6, DearImguiSharp.ImVec2 param7, int param8);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "valuesGetter">No documentation.</param>
        /// <param name = "data">No documentation.</param>
        /// <param name = "valuesCount">No documentation.</param>
        /// <param name = "valuesOffset">No documentation.</param>
        /// <param name = "overlayText">No documentation.</param>
        /// <param name = "scaleMin">No documentation.</param>
        /// <param name = "scaleMax">No documentation.</param>
        /// <param name = "graphSize">No documentation.</param>
        /// <unmanaged>void igPlotHistogramFnPtr([In] const char* label,[In] __function__stdcall* values_getter,[In] void* data,[In] int values_count,[In] int values_offset,[In] const char* overlay_text,[In] float scale_min,[In] float scale_max,[In] ImVec2 graph_size)</unmanaged>
        /// <unmanaged-short>igPlotHistogramFnPtr</unmanaged-short>
        public static unsafe void PlotHistogramFnPtr(System.String label, SharpGen.Runtime.FunctionCallback valuesGetter, System.IntPtr data, System.Int32 valuesCount, System.Int32 valuesOffset, System.String overlayText, System.Single scaleMin, System.Single scaleMax, DearImguiSharp.ImVec2 graphSize)
        {
            System.IntPtr label_;
            System.IntPtr overlayText_;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            overlayText_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(overlayText);
            igPlotHistogramFnPtr_((void *)label_, valuesGetter, (void *)data, valuesCount, valuesOffset, (void *)overlayText_, scaleMin, scaleMax, graphSize);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(overlayText_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPlotHistogramFnPtr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPlotHistogramFnPtr_(void *param0, void *param1, void *param2, int param3, int param4, void *param5, float param6, float param7, DearImguiSharp.ImVec2 param8);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "refixRef">No documentation.</param>
        /// <param name = "b">No documentation.</param>
        /// <unmanaged>void igValueBool([In] const char* prefix,[In] bool b)</unmanaged>
        /// <unmanaged-short>igValueBool</unmanaged-short>
        public static unsafe void ValueBool(System.String refixRef, System.Boolean b)
        {
            System.IntPtr refixRef_;
            System.Byte b_;
            refixRef_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(refixRef);
            b_ = (System.Byte)(b ? 1 : 0);
            igValueBool_((void *)refixRef_, b_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(refixRef_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igValueBool", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igValueBool_(void *param0, System.Byte param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "refixRef">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <unmanaged>void igValueInt([In] const char* prefix,[In] int v)</unmanaged>
        /// <unmanaged-short>igValueInt</unmanaged-short>
        public static unsafe void ValueInt(System.String refixRef, System.Int32 v)
        {
            System.IntPtr refixRef_;
            refixRef_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(refixRef);
            igValueInt_((void *)refixRef_, v);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(refixRef_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igValueInt", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igValueInt_(void *param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "refixRef">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <unmanaged>void igValueUint([In] const char* prefix,[In] unsigned int v)</unmanaged>
        /// <unmanaged-short>igValueUint</unmanaged-short>
        public static unsafe void ValueUint(System.String refixRef, System.UInt32 v)
        {
            System.IntPtr refixRef_;
            refixRef_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(refixRef);
            igValueUint_((void *)refixRef_, v);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(refixRef_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igValueUint", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igValueUint_(void *param0, System.UInt32 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "refixRef">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <param name = "floatFormat">No documentation.</param>
        /// <unmanaged>void igValueFloat([In] const char* prefix,[In] float v,[In] const char* float_format)</unmanaged>
        /// <unmanaged-short>igValueFloat</unmanaged-short>
        public static unsafe void ValueFloat(System.String refixRef, System.Single v, System.String floatFormat)
        {
            System.IntPtr refixRef_;
            System.IntPtr floatFormat_;
            refixRef_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(refixRef);
            floatFormat_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(floatFormat);
            igValueFloat_((void *)refixRef_, v, (void *)floatFormat_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(refixRef_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(floatFormat_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igValueFloat", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igValueFloat_(void *param0, float param1, void *param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igBeginMenuBar()</unmanaged>
        /// <unmanaged-short>igBeginMenuBar</unmanaged-short>
        public static unsafe System.Boolean BeginMenuBar()
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igBeginMenuBar_();
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igBeginMenuBar", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igBeginMenuBar_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igEndMenuBar()</unmanaged>
        /// <unmanaged-short>igEndMenuBar</unmanaged-short>
        public static unsafe void EndMenuBar()
        {
            igEndMenuBar_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igEndMenuBar", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igEndMenuBar_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igBeginMainMenuBar()</unmanaged>
        /// <unmanaged-short>igBeginMainMenuBar</unmanaged-short>
        public static unsafe System.Boolean BeginMainMenuBar()
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igBeginMainMenuBar_();
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igBeginMainMenuBar", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igBeginMainMenuBar_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igEndMainMenuBar()</unmanaged>
        /// <unmanaged-short>igEndMainMenuBar</unmanaged-short>
        public static unsafe void EndMainMenuBar()
        {
            igEndMainMenuBar_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igEndMainMenuBar", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igEndMainMenuBar_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "enabled">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igBeginMenu([In] const char* label,[In] bool enabled)</unmanaged>
        /// <unmanaged-short>igBeginMenu</unmanaged-short>
        public static unsafe System.Boolean BeginMenu(System.String label, System.Boolean enabled)
        {
            System.IntPtr label_;
            System.Byte enabled_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            enabled_ = (System.Byte)(enabled ? 1 : 0);
            __result__native = igBeginMenu_((void *)label_, enabled_);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igBeginMenu", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igBeginMenu_(void *param0, System.Byte param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igEndMenu()</unmanaged>
        /// <unmanaged-short>igEndMenu</unmanaged-short>
        public static unsafe void EndMenu()
        {
            igEndMenu_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igEndMenu", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igEndMenu_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "shortcut">No documentation.</param>
        /// <param name = "selected">No documentation.</param>
        /// <param name = "enabled">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igMenuItemBool([In] const char* label,[In] const char* shortcut,[In] bool selected,[In] bool enabled)</unmanaged>
        /// <unmanaged-short>igMenuItemBool</unmanaged-short>
        public static unsafe System.Boolean MenuItemBool(System.String label, System.String shortcut, System.Boolean selected, System.Boolean enabled)
        {
            System.IntPtr label_;
            System.IntPtr shortcut_;
            System.Byte selected_;
            System.Byte enabled_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            shortcut_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(shortcut);
            selected_ = (System.Byte)(selected ? 1 : 0);
            enabled_ = (System.Byte)(enabled ? 1 : 0);
            __result__native = igMenuItemBool_((void *)label_, (void *)shortcut_, selected_, enabled_);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(shortcut_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igMenuItemBool", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igMenuItemBool_(void *param0, void *param1, System.Byte param2, System.Byte param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "shortcut">No documentation.</param>
        /// <param name = "selectedRef">No documentation.</param>
        /// <param name = "enabled">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igMenuItemBoolPtr([In] const char* label,[In] const char* shortcut,[In] bool* p_selected,[In] bool enabled)</unmanaged>
        /// <unmanaged-short>igMenuItemBoolPtr</unmanaged-short>
        public static unsafe System.Boolean MenuItemBoolPtr(System.String label, System.String shortcut, System.Boolean selectedRef, System.Boolean enabled)
        {
            System.IntPtr label_;
            System.IntPtr shortcut_;
            System.Byte selectedRef_;
            System.Byte enabled_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            shortcut_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(shortcut);
            selectedRef_ = (System.Byte)(selectedRef ? 1 : 0);
            enabled_ = (System.Byte)(enabled ? 1 : 0);
            __result__native = igMenuItemBoolPtr_((void *)label_, (void *)shortcut_, &selectedRef_, enabled_);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(shortcut_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igMenuItemBoolPtr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igMenuItemBoolPtr_(void *param0, void *param1, void *param2, System.Byte param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igBeginTooltip()</unmanaged>
        /// <unmanaged-short>igBeginTooltip</unmanaged-short>
        public static unsafe void BeginTooltip()
        {
            igBeginTooltip_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igBeginTooltip", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igBeginTooltip_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igEndTooltip()</unmanaged>
        /// <unmanaged-short>igEndTooltip</unmanaged-short>
        public static unsafe void EndTooltip()
        {
            igEndTooltip_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igEndTooltip", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igEndTooltip_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "fmt">No documentation.</param>
        /// <unmanaged>void igSetTooltip([In] const char* fmt)</unmanaged>
        /// <unmanaged-short>igSetTooltip</unmanaged-short>
        public static unsafe void SetTooltip(System.String fmt)
        {
            System.IntPtr fmt_;
            fmt_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(fmt);
            igSetTooltip_((void *)fmt_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(fmt_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetTooltip", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetTooltip_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "fmt">No documentation.</param>
        /// <param name = "args">No documentation.</param>
        /// <unmanaged>void igSetTooltipV([In] const char* fmt,[In] char* args)</unmanaged>
        /// <unmanaged-short>igSetTooltipV</unmanaged-short>
        public static unsafe void SetTooltipV(System.String fmt, System.String args)
        {
            System.IntPtr fmt_;
            System.IntPtr args_;
            fmt_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(fmt);
            args_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(args);
            igSetTooltipV_((void *)fmt_, (void *)args_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(fmt_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(args_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetTooltipV", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetTooltipV_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "strId">No documentation.</param>
        /// <unmanaged>void igOpenPopup([In] const char* str_id)</unmanaged>
        /// <unmanaged-short>igOpenPopup</unmanaged-short>
        public static unsafe void OpenPopup(System.String strId)
        {
            System.IntPtr strId_;
            strId_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(strId);
            igOpenPopup_((void *)strId_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(strId_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igOpenPopup", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igOpenPopup_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "strId">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igBeginPopup([In] const char* str_id,[In] int flags)</unmanaged>
        /// <unmanaged-short>igBeginPopup</unmanaged-short>
        public static unsafe System.Boolean BeginPopup(System.String strId, System.Int32 flags)
        {
            System.IntPtr strId_;
            System.Boolean __result__;
            System.Byte __result__native;
            strId_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(strId);
            __result__native = igBeginPopup_((void *)strId_, flags);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(strId_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igBeginPopup", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igBeginPopup_(void *param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "strId">No documentation.</param>
        /// <param name = "mouseButton">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igBeginPopupContextItem([In] const char* str_id,[In] int mouse_button)</unmanaged>
        /// <unmanaged-short>igBeginPopupContextItem</unmanaged-short>
        public static unsafe System.Boolean BeginPopupContextItem(System.String strId, System.Int32 mouseButton)
        {
            System.IntPtr strId_;
            System.Boolean __result__;
            System.Byte __result__native;
            strId_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(strId);
            __result__native = igBeginPopupContextItem_((void *)strId_, mouseButton);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(strId_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igBeginPopupContextItem", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igBeginPopupContextItem_(void *param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "strId">No documentation.</param>
        /// <param name = "mouseButton">No documentation.</param>
        /// <param name = "alsoOverItems">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igBeginPopupContextWindow([In] const char* str_id,[In] int mouse_button,[In] bool also_over_items)</unmanaged>
        /// <unmanaged-short>igBeginPopupContextWindow</unmanaged-short>
        public static unsafe System.Boolean BeginPopupContextWindow(System.String strId, System.Int32 mouseButton, System.Boolean alsoOverItems)
        {
            System.IntPtr strId_;
            System.Byte alsoOverItems_;
            System.Boolean __result__;
            System.Byte __result__native;
            strId_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(strId);
            alsoOverItems_ = (System.Byte)(alsoOverItems ? 1 : 0);
            __result__native = igBeginPopupContextWindow_((void *)strId_, mouseButton, alsoOverItems_);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(strId_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igBeginPopupContextWindow", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igBeginPopupContextWindow_(void *param0, int param1, System.Byte param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "strId">No documentation.</param>
        /// <param name = "mouseButton">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igBeginPopupContextVoid([In] const char* str_id,[In] int mouse_button)</unmanaged>
        /// <unmanaged-short>igBeginPopupContextVoid</unmanaged-short>
        public static unsafe System.Boolean BeginPopupContextVoid(System.String strId, System.Int32 mouseButton)
        {
            System.IntPtr strId_;
            System.Boolean __result__;
            System.Byte __result__native;
            strId_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(strId);
            __result__native = igBeginPopupContextVoid_((void *)strId_, mouseButton);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(strId_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igBeginPopupContextVoid", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igBeginPopupContextVoid_(void *param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "name">No documentation.</param>
        /// <param name = "openRef">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igBeginPopupModal([In] const char* name,[In] bool* p_open,[In] int flags)</unmanaged>
        /// <unmanaged-short>igBeginPopupModal</unmanaged-short>
        public static unsafe System.Boolean BeginPopupModal(System.String name, System.Boolean openRef, System.Int32 flags)
        {
            System.IntPtr name_;
            System.Byte openRef_;
            System.Boolean __result__;
            System.Byte __result__native;
            name_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(name);
            openRef_ = (System.Byte)(openRef ? 1 : 0);
            __result__native = igBeginPopupModal_((void *)name_, &openRef_, flags);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(name_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igBeginPopupModal", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igBeginPopupModal_(void *param0, void *param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igEndPopup()</unmanaged>
        /// <unmanaged-short>igEndPopup</unmanaged-short>
        public static unsafe void EndPopup()
        {
            igEndPopup_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igEndPopup", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igEndPopup_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "strId">No documentation.</param>
        /// <param name = "mouseButton">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igOpenPopupOnItemClick([In] const char* str_id,[In] int mouse_button)</unmanaged>
        /// <unmanaged-short>igOpenPopupOnItemClick</unmanaged-short>
        public static unsafe System.Boolean OpenPopupOnItemClick(System.String strId, System.Int32 mouseButton)
        {
            System.IntPtr strId_;
            System.Boolean __result__;
            System.Byte __result__native;
            strId_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(strId);
            __result__native = igOpenPopupOnItemClick_((void *)strId_, mouseButton);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(strId_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igOpenPopupOnItemClick", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igOpenPopupOnItemClick_(void *param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "strId">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsPopupOpenStr([In] const char* str_id)</unmanaged>
        /// <unmanaged-short>igIsPopupOpenStr</unmanaged-short>
        public static unsafe System.Boolean IsPopupOpenStr(System.String strId)
        {
            System.IntPtr strId_;
            System.Boolean __result__;
            System.Byte __result__native;
            strId_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(strId);
            __result__native = igIsPopupOpenStr_((void *)strId_);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(strId_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsPopupOpenStr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsPopupOpenStr_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igCloseCurrentPopup()</unmanaged>
        /// <unmanaged-short>igCloseCurrentPopup</unmanaged-short>
        public static unsafe void CloseCurrentPopup()
        {
            igCloseCurrentPopup_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igCloseCurrentPopup", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igCloseCurrentPopup_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "count">No documentation.</param>
        /// <param name = "id">No documentation.</param>
        /// <param name = "border">No documentation.</param>
        /// <unmanaged>void igColumns([In] int count,[In] const char* id,[In] bool border)</unmanaged>
        /// <unmanaged-short>igColumns</unmanaged-short>
        public static unsafe void Columns(System.Int32 count, System.String id, System.Boolean border)
        {
            System.IntPtr id_;
            System.Byte border_;
            id_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(id);
            border_ = (System.Byte)(border ? 1 : 0);
            igColumns_(count, (void *)id_, border_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(id_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igColumns", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igColumns_(int param0, void *param1, System.Byte param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igNextColumn()</unmanaged>
        /// <unmanaged-short>igNextColumn</unmanaged-short>
        public static unsafe void NextColumn()
        {
            igNextColumn_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igNextColumn", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igNextColumn_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>int igGetColumnIndex()</unmanaged>
        /// <unmanaged-short>igGetColumnIndex</unmanaged-short>
        public static unsafe System.Int32 GetColumnIndex()
        {
            System.Int32 __result__;
            __result__ = igGetColumnIndex_();
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetColumnIndex", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern int igGetColumnIndex_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "columnIndex">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float igGetColumnWidth([In] int column_index)</unmanaged>
        /// <unmanaged-short>igGetColumnWidth</unmanaged-short>
        public static unsafe System.Single GetColumnWidth(System.Int32 columnIndex)
        {
            System.Single __result__;
            __result__ = igGetColumnWidth_(columnIndex);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetColumnWidth", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float igGetColumnWidth_(int param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "columnIndex">No documentation.</param>
        /// <param name = "width">No documentation.</param>
        /// <unmanaged>void igSetColumnWidth([In] int column_index,[In] float width)</unmanaged>
        /// <unmanaged-short>igSetColumnWidth</unmanaged-short>
        public static unsafe void SetColumnWidth(System.Int32 columnIndex, System.Single width)
        {
            igSetColumnWidth_(columnIndex, width);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetColumnWidth", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetColumnWidth_(int param0, float param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "columnIndex">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float igGetColumnOffset([In] int column_index)</unmanaged>
        /// <unmanaged-short>igGetColumnOffset</unmanaged-short>
        public static unsafe System.Single GetColumnOffset(System.Int32 columnIndex)
        {
            System.Single __result__;
            __result__ = igGetColumnOffset_(columnIndex);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetColumnOffset", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float igGetColumnOffset_(int param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "columnIndex">No documentation.</param>
        /// <param name = "offsetX">No documentation.</param>
        /// <unmanaged>void igSetColumnOffset([In] int column_index,[In] float offset_x)</unmanaged>
        /// <unmanaged-short>igSetColumnOffset</unmanaged-short>
        public static unsafe void SetColumnOffset(System.Int32 columnIndex, System.Single offsetX)
        {
            igSetColumnOffset_(columnIndex, offsetX);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetColumnOffset", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetColumnOffset_(int param0, float param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>int igGetColumnsCount()</unmanaged>
        /// <unmanaged-short>igGetColumnsCount</unmanaged-short>
        public static unsafe System.Int32 GetColumnsCount()
        {
            System.Int32 __result__;
            __result__ = igGetColumnsCount_();
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetColumnsCount", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern int igGetColumnsCount_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "strId">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igBeginTabBar([In] const char* str_id,[In] int flags)</unmanaged>
        /// <unmanaged-short>igBeginTabBar</unmanaged-short>
        public static unsafe System.Boolean BeginTabBar(System.String strId, System.Int32 flags)
        {
            System.IntPtr strId_;
            System.Boolean __result__;
            System.Byte __result__native;
            strId_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(strId);
            __result__native = igBeginTabBar_((void *)strId_, flags);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(strId_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igBeginTabBar", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igBeginTabBar_(void *param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igEndTabBar()</unmanaged>
        /// <unmanaged-short>igEndTabBar</unmanaged-short>
        public static unsafe void EndTabBar()
        {
            igEndTabBar_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igEndTabBar", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igEndTabBar_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "openRef">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igBeginTabItem([In] const char* label,[In] bool* p_open,[In] int flags)</unmanaged>
        /// <unmanaged-short>igBeginTabItem</unmanaged-short>
        public static unsafe System.Boolean BeginTabItem(System.String label, System.Boolean openRef, System.Int32 flags)
        {
            System.IntPtr label_;
            System.Byte openRef_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            openRef_ = (System.Byte)(openRef ? 1 : 0);
            __result__native = igBeginTabItem_((void *)label_, &openRef_, flags);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igBeginTabItem", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igBeginTabItem_(void *param0, void *param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igEndTabItem()</unmanaged>
        /// <unmanaged-short>igEndTabItem</unmanaged-short>
        public static unsafe void EndTabItem()
        {
            igEndTabItem_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igEndTabItem", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igEndTabItem_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "tabOrDockedWindowLabel">No documentation.</param>
        /// <unmanaged>void igSetTabItemClosed([In] const char* tab_or_docked_window_label)</unmanaged>
        /// <unmanaged-short>igSetTabItemClosed</unmanaged-short>
        public static unsafe void SetTabItemClosed(System.String tabOrDockedWindowLabel)
        {
            System.IntPtr tabOrDockedWindowLabel_;
            tabOrDockedWindowLabel_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(tabOrDockedWindowLabel);
            igSetTabItemClosed_((void *)tabOrDockedWindowLabel_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(tabOrDockedWindowLabel_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetTabItemClosed", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetTabItemClosed_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "autoOpenDepth">No documentation.</param>
        /// <unmanaged>void igLogToTTY([In] int auto_open_depth)</unmanaged>
        /// <unmanaged-short>igLogToTTY</unmanaged-short>
        public static unsafe void LogToTTY(System.Int32 autoOpenDepth)
        {
            igLogToTTY_(autoOpenDepth);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igLogToTTY", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igLogToTTY_(int param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "autoOpenDepth">No documentation.</param>
        /// <param name = "filename">No documentation.</param>
        /// <unmanaged>void igLogToFile([In] int auto_open_depth,[In] const char* filename)</unmanaged>
        /// <unmanaged-short>igLogToFile</unmanaged-short>
        public static unsafe void LogToFile(System.Int32 autoOpenDepth, System.String filename)
        {
            System.IntPtr filename_;
            filename_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(filename);
            igLogToFile_(autoOpenDepth, (void *)filename_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(filename_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igLogToFile", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igLogToFile_(int param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "autoOpenDepth">No documentation.</param>
        /// <unmanaged>void igLogToClipboard([In] int auto_open_depth)</unmanaged>
        /// <unmanaged-short>igLogToClipboard</unmanaged-short>
        public static unsafe void LogToClipboard(System.Int32 autoOpenDepth)
        {
            igLogToClipboard_(autoOpenDepth);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igLogToClipboard", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igLogToClipboard_(int param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igLogFinish()</unmanaged>
        /// <unmanaged-short>igLogFinish</unmanaged-short>
        public static unsafe void LogFinish()
        {
            igLogFinish_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igLogFinish", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igLogFinish_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igLogButtons()</unmanaged>
        /// <unmanaged-short>igLogButtons</unmanaged-short>
        public static unsafe void LogButtons()
        {
            igLogButtons_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igLogButtons", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igLogButtons_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igBeginDragDropSource([In] int flags)</unmanaged>
        /// <unmanaged-short>igBeginDragDropSource</unmanaged-short>
        public static unsafe System.Boolean BeginDragDropSource(System.Int32 flags)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igBeginDragDropSource_(flags);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igBeginDragDropSource", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igBeginDragDropSource_(int param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "type">No documentation.</param>
        /// <param name = "data">No documentation.</param>
        /// <param name = "sz">No documentation.</param>
        /// <param name = "cond">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igSetDragDropPayload([In] const char* type,[In] const void* data,[In] size_t sz,[In] int cond)</unmanaged>
        /// <unmanaged-short>igSetDragDropPayload</unmanaged-short>
        public static unsafe System.Boolean SetDragDropPayload(System.String type, System.IntPtr data, SharpGen.Runtime.PointerSize sz, System.Int32 cond)
        {
            System.IntPtr type_;
            System.Boolean __result__;
            System.Byte __result__native;
            type_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(type);
            __result__native = igSetDragDropPayload_((void *)type_, (void *)data, (void *)sz, cond);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(type_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetDragDropPayload", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igSetDragDropPayload_(void *param0, void *param1, void *param2, int param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igEndDragDropSource()</unmanaged>
        /// <unmanaged-short>igEndDragDropSource</unmanaged-short>
        public static unsafe void EndDragDropSource()
        {
            igEndDragDropSource_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igEndDragDropSource", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igEndDragDropSource_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igBeginDragDropTarget()</unmanaged>
        /// <unmanaged-short>igBeginDragDropTarget</unmanaged-short>
        public static unsafe System.Boolean BeginDragDropTarget()
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igBeginDragDropTarget_();
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igBeginDragDropTarget", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igBeginDragDropTarget_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "type">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>const ImGuiPayload* igAcceptDragDropPayload([In] const char* type,[In] int flags)</unmanaged>
        /// <unmanaged-short>igAcceptDragDropPayload</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiPayload AcceptDragDropPayload(System.String type, System.Int32 flags)
        {
            System.IntPtr type_;
            DearImguiSharp.ImGuiPayload __result__;
            DearImguiSharp.ImGuiPayload.__Native __result__native = default (DearImguiSharp.ImGuiPayload.__Native);
            __result__ = default (DearImguiSharp.ImGuiPayload);
            type_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(type);
            igAcceptDragDropPayload_(&__result__native, (void *)type_, flags);
            __result__.__MarshalFrom(ref __result__native);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(type_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igAcceptDragDropPayload", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *igAcceptDragDropPayload_(void *param0, void *param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igEndDragDropTarget()</unmanaged>
        /// <unmanaged-short>igEndDragDropTarget</unmanaged-short>
        public static unsafe void EndDragDropTarget()
        {
            igEndDragDropTarget_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igEndDragDropTarget", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igEndDragDropTarget_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>const ImGuiPayload* igGetDragDropPayload()</unmanaged>
        /// <unmanaged-short>igGetDragDropPayload</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiPayload GetDragDropPayload()
        {
            DearImguiSharp.ImGuiPayload __result__;
            DearImguiSharp.ImGuiPayload.__Native __result__native = default (DearImguiSharp.ImGuiPayload.__Native);
            __result__ = default (DearImguiSharp.ImGuiPayload);
            igGetDragDropPayload_(&__result__native);
            __result__.__MarshalFrom(ref __result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetDragDropPayload", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *igGetDragDropPayload_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "clipRectMin">No documentation.</param>
        /// <param name = "clipRectMax">No documentation.</param>
        /// <param name = "intersectWithCurrentClipRect">No documentation.</param>
        /// <unmanaged>void igPushClipRect([In] const ImVec2 clip_rect_min,[In] const ImVec2 clip_rect_max,[In] bool intersect_with_current_clip_rect)</unmanaged>
        /// <unmanaged-short>igPushClipRect</unmanaged-short>
        public static unsafe void PushClipRect(DearImguiSharp.ImVec2 clipRectMin, DearImguiSharp.ImVec2 clipRectMax, System.Boolean intersectWithCurrentClipRect)
        {
            System.Byte intersectWithCurrentClipRect_;
            intersectWithCurrentClipRect_ = (System.Byte)(intersectWithCurrentClipRect ? 1 : 0);
            igPushClipRect_(clipRectMin, clipRectMax, intersectWithCurrentClipRect_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPushClipRect", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPushClipRect_(DearImguiSharp.ImVec2 param0, DearImguiSharp.ImVec2 param1, System.Byte param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igPopClipRect()</unmanaged>
        /// <unmanaged-short>igPopClipRect</unmanaged-short>
        public static unsafe void PopClipRect()
        {
            igPopClipRect_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPopClipRect", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPopClipRect_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igSetItemDefaultFocus()</unmanaged>
        /// <unmanaged-short>igSetItemDefaultFocus</unmanaged-short>
        public static unsafe void SetItemDefaultFocus()
        {
            igSetItemDefaultFocus_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetItemDefaultFocus", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetItemDefaultFocus_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "offset">No documentation.</param>
        /// <unmanaged>void igSetKeyboardFocusHere([In] int offset)</unmanaged>
        /// <unmanaged-short>igSetKeyboardFocusHere</unmanaged-short>
        public static unsafe void SetKeyboardFocusHere(System.Int32 offset)
        {
            igSetKeyboardFocusHere_(offset);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetKeyboardFocusHere", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetKeyboardFocusHere_(int param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsItemHovered([In] int flags)</unmanaged>
        /// <unmanaged-short>igIsItemHovered</unmanaged-short>
        public static unsafe System.Boolean IsItemHovered(System.Int32 flags)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsItemHovered_(flags);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsItemHovered", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsItemHovered_(int param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsItemActive()</unmanaged>
        /// <unmanaged-short>igIsItemActive</unmanaged-short>
        public static unsafe System.Boolean IsItemActive()
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsItemActive_();
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsItemActive", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsItemActive_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsItemFocused()</unmanaged>
        /// <unmanaged-short>igIsItemFocused</unmanaged-short>
        public static unsafe System.Boolean IsItemFocused()
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsItemFocused_();
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsItemFocused", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsItemFocused_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "mouseButton">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsItemClicked([In] int mouse_button)</unmanaged>
        /// <unmanaged-short>igIsItemClicked</unmanaged-short>
        public static unsafe System.Boolean IsItemClicked(System.Int32 mouseButton)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsItemClicked_(mouseButton);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsItemClicked", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsItemClicked_(int param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsItemVisible()</unmanaged>
        /// <unmanaged-short>igIsItemVisible</unmanaged-short>
        public static unsafe System.Boolean IsItemVisible()
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsItemVisible_();
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsItemVisible", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsItemVisible_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsItemEdited()</unmanaged>
        /// <unmanaged-short>igIsItemEdited</unmanaged-short>
        public static unsafe System.Boolean IsItemEdited()
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsItemEdited_();
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsItemEdited", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsItemEdited_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsItemActivated()</unmanaged>
        /// <unmanaged-short>igIsItemActivated</unmanaged-short>
        public static unsafe System.Boolean IsItemActivated()
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsItemActivated_();
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsItemActivated", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsItemActivated_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsItemDeactivated()</unmanaged>
        /// <unmanaged-short>igIsItemDeactivated</unmanaged-short>
        public static unsafe System.Boolean IsItemDeactivated()
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsItemDeactivated_();
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsItemDeactivated", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsItemDeactivated_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsItemDeactivatedAfterEdit()</unmanaged>
        /// <unmanaged-short>igIsItemDeactivatedAfterEdit</unmanaged-short>
        public static unsafe System.Boolean IsItemDeactivatedAfterEdit()
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsItemDeactivatedAfterEdit_();
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsItemDeactivatedAfterEdit", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsItemDeactivatedAfterEdit_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsItemToggledOpen()</unmanaged>
        /// <unmanaged-short>igIsItemToggledOpen</unmanaged-short>
        public static unsafe System.Boolean IsItemToggledOpen()
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsItemToggledOpen_();
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsItemToggledOpen", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsItemToggledOpen_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsAnyItemHovered()</unmanaged>
        /// <unmanaged-short>igIsAnyItemHovered</unmanaged-short>
        public static unsafe System.Boolean IsAnyItemHovered()
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsAnyItemHovered_();
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsAnyItemHovered", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsAnyItemHovered_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsAnyItemActive()</unmanaged>
        /// <unmanaged-short>igIsAnyItemActive</unmanaged-short>
        public static unsafe System.Boolean IsAnyItemActive()
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsAnyItemActive_();
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsAnyItemActive", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsAnyItemActive_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsAnyItemFocused()</unmanaged>
        /// <unmanaged-short>igIsAnyItemFocused</unmanaged-short>
        public static unsafe System.Boolean IsAnyItemFocused()
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsAnyItemFocused_();
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsAnyItemFocused", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsAnyItemFocused_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <unmanaged>void igGetItemRectMin([In] ImVec2* pOut)</unmanaged>
        /// <unmanaged-short>igGetItemRectMin</unmanaged-short>
        public static unsafe void GetItemRectMin(DearImguiSharp.ImVec2 outRef)
        {
            igGetItemRectMin_(&outRef);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetItemRectMin", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igGetItemRectMin_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <unmanaged>void igGetItemRectMax([In] ImVec2* pOut)</unmanaged>
        /// <unmanaged-short>igGetItemRectMax</unmanaged-short>
        public static unsafe void GetItemRectMax(DearImguiSharp.ImVec2 outRef)
        {
            igGetItemRectMax_(&outRef);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetItemRectMax", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igGetItemRectMax_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <unmanaged>void igGetItemRectSize([In] ImVec2* pOut)</unmanaged>
        /// <unmanaged-short>igGetItemRectSize</unmanaged-short>
        public static unsafe void GetItemRectSize(DearImguiSharp.ImVec2 outRef)
        {
            igGetItemRectSize_(&outRef);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetItemRectSize", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igGetItemRectSize_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igSetItemAllowOverlap()</unmanaged>
        /// <unmanaged-short>igSetItemAllowOverlap</unmanaged-short>
        public static unsafe void SetItemAllowOverlap()
        {
            igSetItemAllowOverlap_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetItemAllowOverlap", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetItemAllowOverlap_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "size">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsRectVisibleNil([In] const ImVec2 size)</unmanaged>
        /// <unmanaged-short>igIsRectVisibleNil</unmanaged-short>
        public static unsafe System.Boolean IsRectVisibleNil(DearImguiSharp.ImVec2 size)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsRectVisibleNil_(size);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsRectVisibleNil", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsRectVisibleNil_(DearImguiSharp.ImVec2 param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "rectMin">No documentation.</param>
        /// <param name = "rectMax">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsRectVisibleVec2([In] const ImVec2 rect_min,[In] const ImVec2 rect_max)</unmanaged>
        /// <unmanaged-short>igIsRectVisibleVec2</unmanaged-short>
        public static unsafe System.Boolean IsRectVisibleVec2(DearImguiSharp.ImVec2 rectMin, DearImguiSharp.ImVec2 rectMax)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsRectVisibleVec2_(rectMin, rectMax);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsRectVisibleVec2", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsRectVisibleVec2_(DearImguiSharp.ImVec2 param0, DearImguiSharp.ImVec2 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>double igGetTime()</unmanaged>
        /// <unmanaged-short>igGetTime</unmanaged-short>
        public static unsafe System.Double GetTime()
        {
            System.Double __result__;
            __result__ = igGetTime_();
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetTime", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern double igGetTime_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>int igGetFrameCount()</unmanaged>
        /// <unmanaged-short>igGetFrameCount</unmanaged-short>
        public static unsafe System.Int32 GetFrameCount()
        {
            System.Int32 __result__;
            __result__ = igGetFrameCount_();
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetFrameCount", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern int igGetFrameCount_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImDrawList* igGetBackgroundDrawList()</unmanaged>
        /// <unmanaged-short>igGetBackgroundDrawList</unmanaged-short>
        public static unsafe DearImguiSharp.ImDrawList GetBackgroundDrawList()
        {
            DearImguiSharp.ImDrawList __result__;
            DearImguiSharp.ImDrawList.__Native __result__native = default (DearImguiSharp.ImDrawList.__Native);
            __result__ = default (DearImguiSharp.ImDrawList);
            igGetBackgroundDrawList_(&__result__native);
            __result__.__MarshalFrom(ref __result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetBackgroundDrawList", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *igGetBackgroundDrawList_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImDrawList* igGetForegroundDrawListNil()</unmanaged>
        /// <unmanaged-short>igGetForegroundDrawListNil</unmanaged-short>
        public static unsafe DearImguiSharp.ImDrawList GetForegroundDrawListNil()
        {
            DearImguiSharp.ImDrawList __result__;
            DearImguiSharp.ImDrawList.__Native __result__native = default (DearImguiSharp.ImDrawList.__Native);
            __result__ = default (DearImguiSharp.ImDrawList);
            igGetForegroundDrawListNil_(&__result__native);
            __result__.__MarshalFrom(ref __result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetForegroundDrawListNil", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *igGetForegroundDrawListNil_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImDrawListSharedData* igGetDrawListSharedData()</unmanaged>
        /// <unmanaged-short>igGetDrawListSharedData</unmanaged-short>
        public static unsafe DearImguiSharp.ImDrawListSharedData GetDrawListSharedData()
        {
            DearImguiSharp.ImDrawListSharedData __result__;
            DearImguiSharp.ImDrawListSharedData.__Native __result__native = default (DearImguiSharp.ImDrawListSharedData.__Native);
            __result__ = default (DearImguiSharp.ImDrawListSharedData);
            igGetDrawListSharedData_(&__result__native);
            __result__.__MarshalFrom(ref __result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetDrawListSharedData", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *igGetDrawListSharedData_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "idx">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>const char* igGetStyleColorName([In] int idx)</unmanaged>
        /// <unmanaged-short>igGetStyleColorName</unmanaged-short>
        public static unsafe System.String GetStyleColorName(System.Int32 idx)
        {
            System.String __result__;
            System.IntPtr __result__native;
            __result__native = igGetStyleColorName_(idx);
            __result__ = System.Runtime.InteropServices.Marshal.PtrToStringAnsi(__result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetStyleColorName", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.IntPtr igGetStyleColorName_(int param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "storage">No documentation.</param>
        /// <unmanaged>void igSetStateStorage([In] ImGuiStorage* storage)</unmanaged>
        /// <unmanaged-short>igSetStateStorage</unmanaged-short>
        public static unsafe void SetStateStorage(DearImguiSharp.ImGuiStorage storage)
        {
            igSetStateStorage_(&storage);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetStateStorage", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetStateStorage_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiStorage* igGetStateStorage()</unmanaged>
        /// <unmanaged-short>igGetStateStorage</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiStorage GetStateStorage()
        {
            DearImguiSharp.ImGuiStorage __result__;
            igGetStateStorage_(&__result__);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetStateStorage", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *igGetStateStorage_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "text">No documentation.</param>
        /// <param name = "textEnd">No documentation.</param>
        /// <param name = "hideTextAfterDoubleHash">No documentation.</param>
        /// <param name = "wrapWidth">No documentation.</param>
        /// <unmanaged>void igCalcTextSize([In] ImVec2* pOut,[In] const char* text,[In] const char* text_end,[In] bool hide_text_after_double_hash,[In] float wrap_width)</unmanaged>
        /// <unmanaged-short>igCalcTextSize</unmanaged-short>
        public static unsafe void CalcTextSize(DearImguiSharp.ImVec2 outRef, System.String text, System.String textEnd, System.Boolean hideTextAfterDoubleHash, System.Single wrapWidth)
        {
            System.IntPtr text_;
            System.IntPtr textEnd_;
            System.Byte hideTextAfterDoubleHash_;
            text_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(text);
            textEnd_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(textEnd);
            hideTextAfterDoubleHash_ = (System.Byte)(hideTextAfterDoubleHash ? 1 : 0);
            igCalcTextSize_(&outRef, (void *)text_, (void *)textEnd_, hideTextAfterDoubleHash_, wrapWidth);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(text_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(textEnd_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igCalcTextSize", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igCalcTextSize_(void *param0, void *param1, void *param2, System.Byte param3, float param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "itemsCount">No documentation.</param>
        /// <param name = "itemsHeight">No documentation.</param>
        /// <param name = "outItemsDisplayStart">No documentation.</param>
        /// <param name = "outItemsDisplayEnd">No documentation.</param>
        /// <unmanaged>void igCalcListClipping([In] int items_count,[In] float items_height,[In] int* out_items_display_start,[In] int* out_items_display_end)</unmanaged>
        /// <unmanaged-short>igCalcListClipping</unmanaged-short>
        public static unsafe void CalcListClipping(System.Int32 itemsCount, System.Single itemsHeight, System.Int32 outItemsDisplayStart, System.Int32 outItemsDisplayEnd)
        {
            igCalcListClipping_(itemsCount, itemsHeight, &outItemsDisplayStart, &outItemsDisplayEnd);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igCalcListClipping", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igCalcListClipping_(int param0, float param1, void *param2, void *param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "id">No documentation.</param>
        /// <param name = "size">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igBeginChildFrame([In] unsigned int id,[In] const ImVec2 size,[In] int flags)</unmanaged>
        /// <unmanaged-short>igBeginChildFrame</unmanaged-short>
        public static unsafe System.Boolean BeginChildFrame(System.UInt32 id, DearImguiSharp.ImVec2 size, System.Int32 flags)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igBeginChildFrame_(id, size, flags);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igBeginChildFrame", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igBeginChildFrame_(System.UInt32 param0, DearImguiSharp.ImVec2 param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igEndChildFrame()</unmanaged>
        /// <unmanaged-short>igEndChildFrame</unmanaged-short>
        public static unsafe void EndChildFrame()
        {
            igEndChildFrame_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igEndChildFrame", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igEndChildFrame_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "@in">No documentation.</param>
        /// <unmanaged>void igColorConvertU32ToFloat4([In] ImVec4* pOut,[In] unsigned int in)</unmanaged>
        /// <unmanaged-short>igColorConvertU32ToFloat4</unmanaged-short>
        public static unsafe void ColorConvertU32ToFloat4(DearImguiSharp.ImVec4 outRef, System.UInt32 @in)
        {
            igColorConvertU32ToFloat4_(&outRef, @in);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igColorConvertU32ToFloat4", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igColorConvertU32ToFloat4_(void *param0, System.UInt32 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "@in">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>unsigned int igColorConvertFloat4ToU32([In] const ImVec4 in)</unmanaged>
        /// <unmanaged-short>igColorConvertFloat4ToU32</unmanaged-short>
        public static unsafe System.UInt32 ColorConvertFloat4ToU32(DearImguiSharp.ImVec4 @in)
        {
            System.UInt32 __result__;
            __result__ = igColorConvertFloat4ToU32_(@in);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igColorConvertFloat4ToU32", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt32 igColorConvertFloat4ToU32_(DearImguiSharp.ImVec4 param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "imguiKey">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>int igGetKeyIndex([In] int imgui_key)</unmanaged>
        /// <unmanaged-short>igGetKeyIndex</unmanaged-short>
        public static unsafe System.Int32 GetKeyIndex(System.Int32 imguiKey)
        {
            System.Int32 __result__;
            __result__ = igGetKeyIndex_(imguiKey);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetKeyIndex", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern int igGetKeyIndex_(int param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "userKeyIndex">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsKeyDown([In] int user_key_index)</unmanaged>
        /// <unmanaged-short>igIsKeyDown</unmanaged-short>
        public static unsafe System.Boolean IsKeyDown(System.Int32 userKeyIndex)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsKeyDown_(userKeyIndex);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsKeyDown", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsKeyDown_(int param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "userKeyIndex">No documentation.</param>
        /// <param name = "repeat">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsKeyPressed([In] int user_key_index,[In] bool repeat)</unmanaged>
        /// <unmanaged-short>igIsKeyPressed</unmanaged-short>
        public static unsafe System.Boolean IsKeyPressed(System.Int32 userKeyIndex, System.Boolean repeat)
        {
            System.Byte repeat_;
            System.Boolean __result__;
            System.Byte __result__native;
            repeat_ = (System.Byte)(repeat ? 1 : 0);
            __result__native = igIsKeyPressed_(userKeyIndex, repeat_);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsKeyPressed", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsKeyPressed_(int param0, System.Byte param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "userKeyIndex">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsKeyReleased([In] int user_key_index)</unmanaged>
        /// <unmanaged-short>igIsKeyReleased</unmanaged-short>
        public static unsafe System.Boolean IsKeyReleased(System.Int32 userKeyIndex)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsKeyReleased_(userKeyIndex);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsKeyReleased", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsKeyReleased_(int param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "keyIndex">No documentation.</param>
        /// <param name = "repeatDelay">No documentation.</param>
        /// <param name = "rate">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>int igGetKeyPressedAmount([In] int key_index,[In] float repeat_delay,[In] float rate)</unmanaged>
        /// <unmanaged-short>igGetKeyPressedAmount</unmanaged-short>
        public static unsafe System.Int32 GetKeyPressedAmount(System.Int32 keyIndex, System.Single repeatDelay, System.Single rate)
        {
            System.Int32 __result__;
            __result__ = igGetKeyPressedAmount_(keyIndex, repeatDelay, rate);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetKeyPressedAmount", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern int igGetKeyPressedAmount_(int param0, float param1, float param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "wantCaptureKeyboardValue">No documentation.</param>
        /// <unmanaged>void igCaptureKeyboardFromApp([In] bool want_capture_keyboard_value)</unmanaged>
        /// <unmanaged-short>igCaptureKeyboardFromApp</unmanaged-short>
        public static unsafe void CaptureKeyboardFromApp(System.Boolean wantCaptureKeyboardValue)
        {
            System.Byte wantCaptureKeyboardValue_;
            wantCaptureKeyboardValue_ = (System.Byte)(wantCaptureKeyboardValue ? 1 : 0);
            igCaptureKeyboardFromApp_(wantCaptureKeyboardValue_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igCaptureKeyboardFromApp", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igCaptureKeyboardFromApp_(System.Byte param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "button">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsMouseDown([In] int button)</unmanaged>
        /// <unmanaged-short>igIsMouseDown</unmanaged-short>
        public static unsafe System.Boolean IsMouseDown(System.Int32 button)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsMouseDown_(button);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsMouseDown", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsMouseDown_(int param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "button">No documentation.</param>
        /// <param name = "repeat">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsMouseClicked([In] int button,[In] bool repeat)</unmanaged>
        /// <unmanaged-short>igIsMouseClicked</unmanaged-short>
        public static unsafe System.Boolean IsMouseClicked(System.Int32 button, System.Boolean repeat)
        {
            System.Byte repeat_;
            System.Boolean __result__;
            System.Byte __result__native;
            repeat_ = (System.Byte)(repeat ? 1 : 0);
            __result__native = igIsMouseClicked_(button, repeat_);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsMouseClicked", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsMouseClicked_(int param0, System.Byte param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "button">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsMouseReleased([In] int button)</unmanaged>
        /// <unmanaged-short>igIsMouseReleased</unmanaged-short>
        public static unsafe System.Boolean IsMouseReleased(System.Int32 button)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsMouseReleased_(button);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsMouseReleased", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsMouseReleased_(int param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "button">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsMouseDoubleClicked([In] int button)</unmanaged>
        /// <unmanaged-short>igIsMouseDoubleClicked</unmanaged-short>
        public static unsafe System.Boolean IsMouseDoubleClicked(System.Int32 button)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsMouseDoubleClicked_(button);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsMouseDoubleClicked", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsMouseDoubleClicked_(int param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "rMin">No documentation.</param>
        /// <param name = "rMax">No documentation.</param>
        /// <param name = "clip">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsMouseHoveringRect([In] const ImVec2 r_min,[In] const ImVec2 r_max,[In] bool clip)</unmanaged>
        /// <unmanaged-short>igIsMouseHoveringRect</unmanaged-short>
        public static unsafe System.Boolean IsMouseHoveringRect(DearImguiSharp.ImVec2 rMin, DearImguiSharp.ImVec2 rMax, System.Boolean clip)
        {
            System.Byte clip_;
            System.Boolean __result__;
            System.Byte __result__native;
            clip_ = (System.Byte)(clip ? 1 : 0);
            __result__native = igIsMouseHoveringRect_(rMin, rMax, clip_);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsMouseHoveringRect", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsMouseHoveringRect_(DearImguiSharp.ImVec2 param0, DearImguiSharp.ImVec2 param1, System.Byte param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "mousePos">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsMousePosValid([In] const ImVec2* mouse_pos)</unmanaged>
        /// <unmanaged-short>igIsMousePosValid</unmanaged-short>
        public static unsafe System.Boolean IsMousePosValid(DearImguiSharp.ImVec2 mousePos)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsMousePosValid_(&mousePos);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsMousePosValid", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsMousePosValid_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsAnyMouseDown()</unmanaged>
        /// <unmanaged-short>igIsAnyMouseDown</unmanaged-short>
        public static unsafe System.Boolean IsAnyMouseDown()
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsAnyMouseDown_();
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsAnyMouseDown", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsAnyMouseDown_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <unmanaged>void igGetMousePos([In] ImVec2* pOut)</unmanaged>
        /// <unmanaged-short>igGetMousePos</unmanaged-short>
        public static unsafe void GetMousePos(DearImguiSharp.ImVec2 outRef)
        {
            igGetMousePos_(&outRef);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetMousePos", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igGetMousePos_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <unmanaged>void igGetMousePosOnOpeningCurrentPopup([In] ImVec2* pOut)</unmanaged>
        /// <unmanaged-short>igGetMousePosOnOpeningCurrentPopup</unmanaged-short>
        public static unsafe void GetMousePosOnOpeningCurrentPopup(DearImguiSharp.ImVec2 outRef)
        {
            igGetMousePosOnOpeningCurrentPopup_(&outRef);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetMousePosOnOpeningCurrentPopup", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igGetMousePosOnOpeningCurrentPopup_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "button">No documentation.</param>
        /// <param name = "lockThreshold">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsMouseDragging([In] int button,[In] float lock_threshold)</unmanaged>
        /// <unmanaged-short>igIsMouseDragging</unmanaged-short>
        public static unsafe System.Boolean IsMouseDragging(System.Int32 button, System.Single lockThreshold)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsMouseDragging_(button, lockThreshold);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsMouseDragging", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsMouseDragging_(int param0, float param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "button">No documentation.</param>
        /// <param name = "lockThreshold">No documentation.</param>
        /// <unmanaged>void igGetMouseDragDelta([In] ImVec2* pOut,[In] int button,[In] float lock_threshold)</unmanaged>
        /// <unmanaged-short>igGetMouseDragDelta</unmanaged-short>
        public static unsafe void GetMouseDragDelta(DearImguiSharp.ImVec2 outRef, System.Int32 button, System.Single lockThreshold)
        {
            igGetMouseDragDelta_(&outRef, button, lockThreshold);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetMouseDragDelta", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igGetMouseDragDelta_(void *param0, int param1, float param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "button">No documentation.</param>
        /// <unmanaged>void igResetMouseDragDelta([In] int button)</unmanaged>
        /// <unmanaged-short>igResetMouseDragDelta</unmanaged-short>
        public static unsafe void ResetMouseDragDelta(System.Int32 button)
        {
            igResetMouseDragDelta_(button);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igResetMouseDragDelta", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igResetMouseDragDelta_(int param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>int igGetMouseCursor()</unmanaged>
        /// <unmanaged-short>igGetMouseCursor</unmanaged-short>
        public static unsafe System.Int32 GetMouseCursor()
        {
            System.Int32 __result__;
            __result__ = igGetMouseCursor_();
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetMouseCursor", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern int igGetMouseCursor_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "cursorType">No documentation.</param>
        /// <unmanaged>void igSetMouseCursor([In] int cursor_type)</unmanaged>
        /// <unmanaged-short>igSetMouseCursor</unmanaged-short>
        public static unsafe void SetMouseCursor(System.Int32 cursorType)
        {
            igSetMouseCursor_(cursorType);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetMouseCursor", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetMouseCursor_(int param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "wantCaptureMouseValue">No documentation.</param>
        /// <unmanaged>void igCaptureMouseFromApp([In] bool want_capture_mouse_value)</unmanaged>
        /// <unmanaged-short>igCaptureMouseFromApp</unmanaged-short>
        public static unsafe void CaptureMouseFromApp(System.Boolean wantCaptureMouseValue)
        {
            System.Byte wantCaptureMouseValue_;
            wantCaptureMouseValue_ = (System.Byte)(wantCaptureMouseValue ? 1 : 0);
            igCaptureMouseFromApp_(wantCaptureMouseValue_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igCaptureMouseFromApp", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igCaptureMouseFromApp_(System.Byte param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>const char* igGetClipboardText()</unmanaged>
        /// <unmanaged-short>igGetClipboardText</unmanaged-short>
        public static unsafe System.String GetClipboardText()
        {
            System.String __result__;
            System.IntPtr __result__native;
            __result__native = igGetClipboardText_();
            __result__ = System.Runtime.InteropServices.Marshal.PtrToStringAnsi(__result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetClipboardText", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.IntPtr igGetClipboardText_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "text">No documentation.</param>
        /// <unmanaged>void igSetClipboardText([In] const char* text)</unmanaged>
        /// <unmanaged-short>igSetClipboardText</unmanaged-short>
        public static unsafe void SetClipboardText(System.String text)
        {
            System.IntPtr text_;
            text_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(text);
            igSetClipboardText_((void *)text_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(text_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetClipboardText", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetClipboardText_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "iniFilename">No documentation.</param>
        /// <unmanaged>void igLoadIniSettingsFromDisk([In] const char* ini_filename)</unmanaged>
        /// <unmanaged-short>igLoadIniSettingsFromDisk</unmanaged-short>
        public static unsafe void LoadIniSettingsFromDisk(System.String iniFilename)
        {
            System.IntPtr iniFilename_;
            iniFilename_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(iniFilename);
            igLoadIniSettingsFromDisk_((void *)iniFilename_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(iniFilename_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igLoadIniSettingsFromDisk", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igLoadIniSettingsFromDisk_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "iniData">No documentation.</param>
        /// <param name = "iniSize">No documentation.</param>
        /// <unmanaged>void igLoadIniSettingsFromMemory([In] const char* ini_data,[In] size_t ini_size)</unmanaged>
        /// <unmanaged-short>igLoadIniSettingsFromMemory</unmanaged-short>
        public static unsafe void LoadIniSettingsFromMemory(System.String iniData, SharpGen.Runtime.PointerSize iniSize)
        {
            System.IntPtr iniData_;
            iniData_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(iniData);
            igLoadIniSettingsFromMemory_((void *)iniData_, (void *)iniSize);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(iniData_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igLoadIniSettingsFromMemory", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igLoadIniSettingsFromMemory_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "iniFilename">No documentation.</param>
        /// <unmanaged>void igSaveIniSettingsToDisk([In] const char* ini_filename)</unmanaged>
        /// <unmanaged-short>igSaveIniSettingsToDisk</unmanaged-short>
        public static unsafe void SaveIniSettingsToDisk(System.String iniFilename)
        {
            System.IntPtr iniFilename_;
            iniFilename_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(iniFilename);
            igSaveIniSettingsToDisk_((void *)iniFilename_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(iniFilename_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSaveIniSettingsToDisk", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSaveIniSettingsToDisk_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outIniSize">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>const char* igSaveIniSettingsToMemory([In] size_t* out_ini_size)</unmanaged>
        /// <unmanaged-short>igSaveIniSettingsToMemory</unmanaged-short>
        public static unsafe System.String SaveIniSettingsToMemory(SharpGen.Runtime.PointerSize outIniSize)
        {
            System.String __result__;
            System.IntPtr __result__native;
            __result__native = igSaveIniSettingsToMemory_(&outIniSize);
            __result__ = System.Runtime.InteropServices.Marshal.PtrToStringAnsi(__result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSaveIniSettingsToMemory", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.IntPtr igSaveIniSettingsToMemory_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "allocFunc">No documentation.</param>
        /// <param name = "freeFunc">No documentation.</param>
        /// <param name = "userData">No documentation.</param>
        /// <unmanaged>void igSetAllocatorFunctions([In] __function__stdcall* alloc_func,[In] __function__stdcall* free_func,[In] void* user_data)</unmanaged>
        /// <unmanaged-short>igSetAllocatorFunctions</unmanaged-short>
        public static unsafe void SetAllocatorFunctions(SharpGen.Runtime.FunctionCallback allocFunc, SharpGen.Runtime.FunctionCallback freeFunc, System.IntPtr userData)
        {
            igSetAllocatorFunctions_(allocFunc, freeFunc, (void *)userData);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetAllocatorFunctions", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetAllocatorFunctions_(void *param0, void *param1, void *param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "size">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>void* igMemAlloc([In] size_t size)</unmanaged>
        /// <unmanaged-short>igMemAlloc</unmanaged-short>
        public static unsafe System.IntPtr MemAlloc(SharpGen.Runtime.PointerSize size)
        {
            System.IntPtr __result__;
            __result__ = igMemAlloc_((void *)size);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igMemAlloc", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.IntPtr igMemAlloc_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "trRef">No documentation.</param>
        /// <unmanaged>void igMemFree([In] void* ptr)</unmanaged>
        /// <unmanaged-short>igMemFree</unmanaged-short>
        public static unsafe void MemFree(System.IntPtr trRef)
        {
            igMemFree_((void *)trRef);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igMemFree", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igMemFree_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiStyle* ImGuiStyle_ImGuiStyle()</unmanaged>
        /// <unmanaged-short>ImGuiStyle_ImGuiStyle</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiStyle ImGuiStyleImGuiStyle()
        {
            DearImguiSharp.ImGuiStyle __result__;
            DearImguiSharp.ImGuiStyle.__Native __result__native = default (DearImguiSharp.ImGuiStyle.__Native);
            __result__ = default (DearImguiSharp.ImGuiStyle);
            ImGuiStyle_ImGuiStyle_(&__result__native);
            __result__.__MarshalFrom(ref __result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiStyle_ImGuiStyle", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImGuiStyle_ImGuiStyle_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiStyle_destroy([In] ImGuiStyle* self)</unmanaged>
        /// <unmanaged-short>ImGuiStyle_destroy</unmanaged-short>
        public static unsafe void ImGuiStyleDestroy(ref DearImguiSharp.ImGuiStyle self)
        {
            DearImguiSharp.ImGuiStyle.__Native self_ = default (DearImguiSharp.ImGuiStyle.__Native);
            self.__MarshalTo(ref self_);
            ImGuiStyle_destroy_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiStyle_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiStyle_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "scaleFactor">No documentation.</param>
        /// <unmanaged>void ImGuiStyle_ScaleAllSizes([In] ImGuiStyle* self,[In] float scale_factor)</unmanaged>
        /// <unmanaged-short>ImGuiStyle_ScaleAllSizes</unmanaged-short>
        public static unsafe void ImGuiStyleScaleAllSizes(ref DearImguiSharp.ImGuiStyle self, System.Single scaleFactor)
        {
            DearImguiSharp.ImGuiStyle.__Native self_ = default (DearImguiSharp.ImGuiStyle.__Native);
            self.__MarshalTo(ref self_);
            ImGuiStyle_ScaleAllSizes_(&self_, scaleFactor);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiStyle_ScaleAllSizes", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiStyle_ScaleAllSizes_(void *param0, float param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "c">No documentation.</param>
        /// <unmanaged>void ImGuiIO_AddInputCharacter([In] ImGuiIO* self,[In] unsigned int c)</unmanaged>
        /// <unmanaged-short>ImGuiIO_AddInputCharacter</unmanaged-short>
        public static unsafe void ImGuiIOAddInputCharacter(ref DearImguiSharp.ImGuiIO self, System.UInt32 c)
        {
            DearImguiSharp.ImGuiIO.__Native self_ = default (DearImguiSharp.ImGuiIO.__Native);
            self.__MarshalTo(ref self_);
            ImGuiIO_AddInputCharacter_(&self_, c);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiIO_AddInputCharacter", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiIO_AddInputCharacter_(void *param0, System.UInt32 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "str">No documentation.</param>
        /// <unmanaged>void ImGuiIO_AddInputCharactersUTF8([In] ImGuiIO* self,[In] const char* str)</unmanaged>
        /// <unmanaged-short>ImGuiIO_AddInputCharactersUTF8</unmanaged-short>
        public static unsafe void ImGuiIOAddInputCharactersUTF8(ref DearImguiSharp.ImGuiIO self, System.String str)
        {
            DearImguiSharp.ImGuiIO.__Native self_ = default (DearImguiSharp.ImGuiIO.__Native);
            System.IntPtr str_;
            self.__MarshalTo(ref self_);
            str_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(str);
            ImGuiIO_AddInputCharactersUTF8_(&self_, (void *)str_);
            self.__MarshalFree(ref self_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(str_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiIO_AddInputCharactersUTF8", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiIO_AddInputCharactersUTF8_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiIO_ClearInputCharacters([In] ImGuiIO* self)</unmanaged>
        /// <unmanaged-short>ImGuiIO_ClearInputCharacters</unmanaged-short>
        public static unsafe void ImGuiIOClearInputCharacters(ref DearImguiSharp.ImGuiIO self)
        {
            DearImguiSharp.ImGuiIO.__Native self_ = default (DearImguiSharp.ImGuiIO.__Native);
            self.__MarshalTo(ref self_);
            ImGuiIO_ClearInputCharacters_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiIO_ClearInputCharacters", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiIO_ClearInputCharacters_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiIO* ImGuiIO_ImGuiIO()</unmanaged>
        /// <unmanaged-short>ImGuiIO_ImGuiIO</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiIO ImGuiIOImGuiIO()
        {
            DearImguiSharp.ImGuiIO __result__;
            DearImguiSharp.ImGuiIO.__Native __result__native = default (DearImguiSharp.ImGuiIO.__Native);
            __result__ = default (DearImguiSharp.ImGuiIO);
            ImGuiIO_ImGuiIO_(&__result__native);
            __result__.__MarshalFrom(ref __result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiIO_ImGuiIO", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImGuiIO_ImGuiIO_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiIO_destroy([In] ImGuiIO* self)</unmanaged>
        /// <unmanaged-short>ImGuiIO_destroy</unmanaged-short>
        public static unsafe void ImGuiIODestroy(ref DearImguiSharp.ImGuiIO self)
        {
            DearImguiSharp.ImGuiIO.__Native self_ = default (DearImguiSharp.ImGuiIO.__Native);
            self.__MarshalTo(ref self_);
            ImGuiIO_destroy_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiIO_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiIO_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiInputTextCallbackData* ImGuiInputTextCallbackData_ImGuiInputTextCallbackData()</unmanaged>
        /// <unmanaged-short>ImGuiInputTextCallbackData_ImGuiInputTextCallbackData</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiInputTextCallbackData ImGuiInputTextCallbackDataImGuiInputTextCallbackData()
        {
            DearImguiSharp.ImGuiInputTextCallbackData __result__;
            DearImguiSharp.ImGuiInputTextCallbackData.__Native __result__native = default (DearImguiSharp.ImGuiInputTextCallbackData.__Native);
            __result__ = default (DearImguiSharp.ImGuiInputTextCallbackData);
            ImGuiInputTextCallbackData_ImGuiInputTextCallbackData_(&__result__native);
            __result__.__MarshalFrom(ref __result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiInputTextCallbackData_ImGuiInputTextCallbackData", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImGuiInputTextCallbackData_ImGuiInputTextCallbackData_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiInputTextCallbackData_destroy([In] ImGuiInputTextCallbackData* self)</unmanaged>
        /// <unmanaged-short>ImGuiInputTextCallbackData_destroy</unmanaged-short>
        public static unsafe void ImGuiInputTextCallbackDataDestroy(ref DearImguiSharp.ImGuiInputTextCallbackData self)
        {
            DearImguiSharp.ImGuiInputTextCallbackData.__Native self_ = default (DearImguiSharp.ImGuiInputTextCallbackData.__Native);
            self.__MarshalTo(ref self_);
            ImGuiInputTextCallbackData_destroy_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiInputTextCallbackData_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiInputTextCallbackData_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "pos">No documentation.</param>
        /// <param name = "bytesCount">No documentation.</param>
        /// <unmanaged>void ImGuiInputTextCallbackData_DeleteChars([In] ImGuiInputTextCallbackData* self,[In] int pos,[In] int bytes_count)</unmanaged>
        /// <unmanaged-short>ImGuiInputTextCallbackData_DeleteChars</unmanaged-short>
        public static unsafe void ImGuiInputTextCallbackDataDeleteChars(ref DearImguiSharp.ImGuiInputTextCallbackData self, System.Int32 pos, System.Int32 bytesCount)
        {
            DearImguiSharp.ImGuiInputTextCallbackData.__Native self_ = default (DearImguiSharp.ImGuiInputTextCallbackData.__Native);
            self.__MarshalTo(ref self_);
            ImGuiInputTextCallbackData_DeleteChars_(&self_, pos, bytesCount);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiInputTextCallbackData_DeleteChars", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiInputTextCallbackData_DeleteChars_(void *param0, int param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "pos">No documentation.</param>
        /// <param name = "text">No documentation.</param>
        /// <param name = "textEnd">No documentation.</param>
        /// <unmanaged>void ImGuiInputTextCallbackData_InsertChars([In] ImGuiInputTextCallbackData* self,[In] int pos,[In] const char* text,[In] const char* text_end)</unmanaged>
        /// <unmanaged-short>ImGuiInputTextCallbackData_InsertChars</unmanaged-short>
        public static unsafe void ImGuiInputTextCallbackDataInsertChars(ref DearImguiSharp.ImGuiInputTextCallbackData self, System.Int32 pos, System.String text, System.String textEnd)
        {
            DearImguiSharp.ImGuiInputTextCallbackData.__Native self_ = default (DearImguiSharp.ImGuiInputTextCallbackData.__Native);
            System.IntPtr text_;
            System.IntPtr textEnd_;
            self.__MarshalTo(ref self_);
            text_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(text);
            textEnd_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(textEnd);
            ImGuiInputTextCallbackData_InsertChars_(&self_, pos, (void *)text_, (void *)textEnd_);
            self.__MarshalFree(ref self_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(text_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(textEnd_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiInputTextCallbackData_InsertChars", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiInputTextCallbackData_InsertChars_(void *param0, int param1, void *param2, void *param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool ImGuiInputTextCallbackData_HasSelection([In] ImGuiInputTextCallbackData* self)</unmanaged>
        /// <unmanaged-short>ImGuiInputTextCallbackData_HasSelection</unmanaged-short>
        public static unsafe System.Boolean ImGuiInputTextCallbackDataHasSelection(ref DearImguiSharp.ImGuiInputTextCallbackData self)
        {
            DearImguiSharp.ImGuiInputTextCallbackData.__Native self_ = default (DearImguiSharp.ImGuiInputTextCallbackData.__Native);
            System.Boolean __result__;
            System.Byte __result__native;
            self.__MarshalTo(ref self_);
            __result__native = ImGuiInputTextCallbackData_HasSelection_(&self_);
            __result__ = __result__native != 0;
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiInputTextCallbackData_HasSelection", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte ImGuiInputTextCallbackData_HasSelection_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiPayload* ImGuiPayload_ImGuiPayload()</unmanaged>
        /// <unmanaged-short>ImGuiPayload_ImGuiPayload</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiPayload ImGuiPayloadImGuiPayload()
        {
            DearImguiSharp.ImGuiPayload __result__;
            DearImguiSharp.ImGuiPayload.__Native __result__native = default (DearImguiSharp.ImGuiPayload.__Native);
            __result__ = default (DearImguiSharp.ImGuiPayload);
            ImGuiPayload_ImGuiPayload_(&__result__native);
            __result__.__MarshalFrom(ref __result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiPayload_ImGuiPayload", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImGuiPayload_ImGuiPayload_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiPayload_destroy([In] ImGuiPayload* self)</unmanaged>
        /// <unmanaged-short>ImGuiPayload_destroy</unmanaged-short>
        public static unsafe void ImGuiPayloadDestroy(ref DearImguiSharp.ImGuiPayload self)
        {
            DearImguiSharp.ImGuiPayload.__Native self_ = default (DearImguiSharp.ImGuiPayload.__Native);
            self.__MarshalTo(ref self_);
            ImGuiPayload_destroy_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiPayload_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiPayload_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiPayload_Clear([In] ImGuiPayload* self)</unmanaged>
        /// <unmanaged-short>ImGuiPayload_Clear</unmanaged-short>
        public static unsafe void ImGuiPayloadClear(ref DearImguiSharp.ImGuiPayload self)
        {
            DearImguiSharp.ImGuiPayload.__Native self_ = default (DearImguiSharp.ImGuiPayload.__Native);
            self.__MarshalTo(ref self_);
            ImGuiPayload_Clear_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiPayload_Clear", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiPayload_Clear_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "type">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool ImGuiPayload_IsDataType([In] ImGuiPayload* self,[In] const char* type)</unmanaged>
        /// <unmanaged-short>ImGuiPayload_IsDataType</unmanaged-short>
        public static unsafe System.Boolean ImGuiPayloadIsDataType(ref DearImguiSharp.ImGuiPayload self, System.String type)
        {
            DearImguiSharp.ImGuiPayload.__Native self_ = default (DearImguiSharp.ImGuiPayload.__Native);
            System.IntPtr type_;
            System.Boolean __result__;
            System.Byte __result__native;
            self.__MarshalTo(ref self_);
            type_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(type);
            __result__native = ImGuiPayload_IsDataType_(&self_, (void *)type_);
            __result__ = __result__native != 0;
            self.__MarshalFree(ref self_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(type_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiPayload_IsDataType", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte ImGuiPayload_IsDataType_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool ImGuiPayload_IsPreview([In] ImGuiPayload* self)</unmanaged>
        /// <unmanaged-short>ImGuiPayload_IsPreview</unmanaged-short>
        public static unsafe System.Boolean ImGuiPayloadIsPreview(ref DearImguiSharp.ImGuiPayload self)
        {
            DearImguiSharp.ImGuiPayload.__Native self_ = default (DearImguiSharp.ImGuiPayload.__Native);
            System.Boolean __result__;
            System.Byte __result__native;
            self.__MarshalTo(ref self_);
            __result__native = ImGuiPayload_IsPreview_(&self_);
            __result__ = __result__native != 0;
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiPayload_IsPreview", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte ImGuiPayload_IsPreview_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool ImGuiPayload_IsDelivery([In] ImGuiPayload* self)</unmanaged>
        /// <unmanaged-short>ImGuiPayload_IsDelivery</unmanaged-short>
        public static unsafe System.Boolean ImGuiPayloadIsDelivery(ref DearImguiSharp.ImGuiPayload self)
        {
            DearImguiSharp.ImGuiPayload.__Native self_ = default (DearImguiSharp.ImGuiPayload.__Native);
            System.Boolean __result__;
            System.Byte __result__native;
            self.__MarshalTo(ref self_);
            __result__native = ImGuiPayload_IsDelivery_(&self_);
            __result__ = __result__native != 0;
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiPayload_IsDelivery", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte ImGuiPayload_IsDelivery_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiOnceUponAFrame* ImGuiOnceUponAFrame_ImGuiOnceUponAFrame()</unmanaged>
        /// <unmanaged-short>ImGuiOnceUponAFrame_ImGuiOnceUponAFrame</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiOnceUponAFrame ImGuiOnceUponAFrameImGuiOnceUponAFrame()
        {
            DearImguiSharp.ImGuiOnceUponAFrame __result__;
            __result__ = ImGuiOnceUponAFrame_ImGuiOnceUponAFrame_();
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiOnceUponAFrame_ImGuiOnceUponAFrame", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern DearImguiSharp.ImGuiOnceUponAFrame ImGuiOnceUponAFrame_ImGuiOnceUponAFrame_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiOnceUponAFrame_destroy([In] ImGuiOnceUponAFrame* self)</unmanaged>
        /// <unmanaged-short>ImGuiOnceUponAFrame_destroy</unmanaged-short>
        public static unsafe void ImGuiOnceUponAFrameDestroy(DearImguiSharp.ImGuiOnceUponAFrame self)
        {
            ImGuiOnceUponAFrame_destroy_(&self);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiOnceUponAFrame_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiOnceUponAFrame_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "defaultFilter">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiTextFilter* ImGuiTextFilter_ImGuiTextFilter([In] const char* default_filter)</unmanaged>
        /// <unmanaged-short>ImGuiTextFilter_ImGuiTextFilter</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiTextFilter ImGuiTextFilterImGuiTextFilter(System.String defaultFilter)
        {
            System.IntPtr defaultFilter_;
            DearImguiSharp.ImGuiTextFilter __result__;
            DearImguiSharp.ImGuiTextFilter.__Native __result__native = default (DearImguiSharp.ImGuiTextFilter.__Native);
            __result__ = default (DearImguiSharp.ImGuiTextFilter);
            defaultFilter_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(defaultFilter);
            ImGuiTextFilter_ImGuiTextFilter_(&__result__native, (void *)defaultFilter_);
            __result__.__MarshalFrom(ref __result__native);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(defaultFilter_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiTextFilter_ImGuiTextFilter", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImGuiTextFilter_ImGuiTextFilter_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiTextFilter_destroy([In] ImGuiTextFilter* self)</unmanaged>
        /// <unmanaged-short>ImGuiTextFilter_destroy</unmanaged-short>
        public static unsafe void ImGuiTextFilterDestroy(ref DearImguiSharp.ImGuiTextFilter self)
        {
            DearImguiSharp.ImGuiTextFilter.__Native self_ = default (DearImguiSharp.ImGuiTextFilter.__Native);
            self.__MarshalTo(ref self_);
            ImGuiTextFilter_destroy_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiTextFilter_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiTextFilter_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "label">No documentation.</param>
        /// <param name = "width">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool ImGuiTextFilter_Draw([In] ImGuiTextFilter* self,[In] const char* label,[In] float width)</unmanaged>
        /// <unmanaged-short>ImGuiTextFilter_Draw</unmanaged-short>
        public static unsafe System.Boolean ImGuiTextFilterDraw(ref DearImguiSharp.ImGuiTextFilter self, System.String label, System.Single width)
        {
            DearImguiSharp.ImGuiTextFilter.__Native self_ = default (DearImguiSharp.ImGuiTextFilter.__Native);
            System.IntPtr label_;
            System.Boolean __result__;
            System.Byte __result__native;
            self.__MarshalTo(ref self_);
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            __result__native = ImGuiTextFilter_Draw_(&self_, (void *)label_, width);
            __result__ = __result__native != 0;
            self.__MarshalFree(ref self_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiTextFilter_Draw", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte ImGuiTextFilter_Draw_(void *param0, void *param1, float param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "text">No documentation.</param>
        /// <param name = "textEnd">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool ImGuiTextFilter_PassFilter([In] ImGuiTextFilter* self,[In] const char* text,[In] const char* text_end)</unmanaged>
        /// <unmanaged-short>ImGuiTextFilter_PassFilter</unmanaged-short>
        public static unsafe System.Boolean ImGuiTextFilterPassFilter(ref DearImguiSharp.ImGuiTextFilter self, System.String text, System.String textEnd)
        {
            DearImguiSharp.ImGuiTextFilter.__Native self_ = default (DearImguiSharp.ImGuiTextFilter.__Native);
            System.IntPtr text_;
            System.IntPtr textEnd_;
            System.Boolean __result__;
            System.Byte __result__native;
            self.__MarshalTo(ref self_);
            text_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(text);
            textEnd_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(textEnd);
            __result__native = ImGuiTextFilter_PassFilter_(&self_, (void *)text_, (void *)textEnd_);
            __result__ = __result__native != 0;
            self.__MarshalFree(ref self_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(text_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(textEnd_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiTextFilter_PassFilter", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte ImGuiTextFilter_PassFilter_(void *param0, void *param1, void *param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiTextFilter_Build([In] ImGuiTextFilter* self)</unmanaged>
        /// <unmanaged-short>ImGuiTextFilter_Build</unmanaged-short>
        public static unsafe void ImGuiTextFilterBuild(ref DearImguiSharp.ImGuiTextFilter self)
        {
            DearImguiSharp.ImGuiTextFilter.__Native self_ = default (DearImguiSharp.ImGuiTextFilter.__Native);
            self.__MarshalTo(ref self_);
            ImGuiTextFilter_Build_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiTextFilter_Build", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiTextFilter_Build_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiTextFilter_Clear([In] ImGuiTextFilter* self)</unmanaged>
        /// <unmanaged-short>ImGuiTextFilter_Clear</unmanaged-short>
        public static unsafe void ImGuiTextFilterClear(ref DearImguiSharp.ImGuiTextFilter self)
        {
            DearImguiSharp.ImGuiTextFilter.__Native self_ = default (DearImguiSharp.ImGuiTextFilter.__Native);
            self.__MarshalTo(ref self_);
            ImGuiTextFilter_Clear_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiTextFilter_Clear", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiTextFilter_Clear_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool ImGuiTextFilter_IsActive([In] ImGuiTextFilter* self)</unmanaged>
        /// <unmanaged-short>ImGuiTextFilter_IsActive</unmanaged-short>
        public static unsafe System.Boolean ImGuiTextFilterIsActive(ref DearImguiSharp.ImGuiTextFilter self)
        {
            DearImguiSharp.ImGuiTextFilter.__Native self_ = default (DearImguiSharp.ImGuiTextFilter.__Native);
            System.Boolean __result__;
            System.Byte __result__native;
            self.__MarshalTo(ref self_);
            __result__native = ImGuiTextFilter_IsActive_(&self_);
            __result__ = __result__native != 0;
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiTextFilter_IsActive", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte ImGuiTextFilter_IsActive_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiTextRange* ImGuiTextRange_ImGuiTextRangeNil()</unmanaged>
        /// <unmanaged-short>ImGuiTextRange_ImGuiTextRangeNil</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiTextRange ImGuiTextRangeImGuiTextRangeNil()
        {
            DearImguiSharp.ImGuiTextRange __result__;
            DearImguiSharp.ImGuiTextRange.__Native __result__native = default (DearImguiSharp.ImGuiTextRange.__Native);
            __result__ = default (DearImguiSharp.ImGuiTextRange);
            ImGuiTextRange_ImGuiTextRangeNil_(&__result__native);
            __result__.__MarshalFrom(ref __result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiTextRange_ImGuiTextRangeNil", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImGuiTextRange_ImGuiTextRangeNil_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiTextRange_destroy([In] ImGuiTextRange* self)</unmanaged>
        /// <unmanaged-short>ImGuiTextRange_destroy</unmanaged-short>
        public static unsafe void ImGuiTextRangeDestroy(ref DearImguiSharp.ImGuiTextRange self)
        {
            DearImguiSharp.ImGuiTextRange.__Native self_ = default (DearImguiSharp.ImGuiTextRange.__Native);
            self.__MarshalTo(ref self_);
            ImGuiTextRange_destroy_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiTextRange_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiTextRange_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "b">No documentation.</param>
        /// <param name = "e">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiTextRange* ImGuiTextRange_ImGuiTextRangeStr([In] const char* _b,[In] const char* _e)</unmanaged>
        /// <unmanaged-short>ImGuiTextRange_ImGuiTextRangeStr</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiTextRange ImGuiTextRangeImGuiTextRangeStr(System.String b, System.String e)
        {
            System.IntPtr b_;
            System.IntPtr e_;
            DearImguiSharp.ImGuiTextRange __result__;
            DearImguiSharp.ImGuiTextRange.__Native __result__native = default (DearImguiSharp.ImGuiTextRange.__Native);
            __result__ = default (DearImguiSharp.ImGuiTextRange);
            b_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(b);
            e_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(e);
            ImGuiTextRange_ImGuiTextRangeStr_(&__result__native, (void *)b_, (void *)e_);
            __result__.__MarshalFrom(ref __result__native);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(b_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(e_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiTextRange_ImGuiTextRangeStr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImGuiTextRange_ImGuiTextRangeStr_(void *param0, void *param1, void *param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool ImGuiTextRange_empty([In] ImGuiTextRange* self)</unmanaged>
        /// <unmanaged-short>ImGuiTextRange_empty</unmanaged-short>
        public static unsafe System.Boolean ImGuiTextRangeEmpty(ref DearImguiSharp.ImGuiTextRange self)
        {
            DearImguiSharp.ImGuiTextRange.__Native self_ = default (DearImguiSharp.ImGuiTextRange.__Native);
            System.Boolean __result__;
            System.Byte __result__native;
            self.__MarshalTo(ref self_);
            __result__native = ImGuiTextRange_empty_(&self_);
            __result__ = __result__native != 0;
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiTextRange_empty", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte ImGuiTextRange_empty_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "separator">No documentation.</param>
        /// <param name = "@out">No documentation.</param>
        /// <unmanaged>void ImGuiTextRange_split([In] ImGuiTextRange* self,[In] char separator,[In] ImVector_ImGuiTextRange* out)</unmanaged>
        /// <unmanaged-short>ImGuiTextRange_split</unmanaged-short>
        public static unsafe void ImGuiTextRangeSplit(ref DearImguiSharp.ImGuiTextRange self, System.Byte separator, DearImguiSharp.ImVectorImGuiTextRange @out)
        {
            DearImguiSharp.ImGuiTextRange.__Native self_ = default (DearImguiSharp.ImGuiTextRange.__Native);
            self.__MarshalTo(ref self_);
            ImGuiTextRange_split_(&self_, separator, &@out);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiTextRange_split", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiTextRange_split_(void *param0, System.Byte param1, void *param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiTextBuffer* ImGuiTextBuffer_ImGuiTextBuffer()</unmanaged>
        /// <unmanaged-short>ImGuiTextBuffer_ImGuiTextBuffer</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiTextBuffer ImGuiTextBufferImGuiTextBuffer()
        {
            DearImguiSharp.ImGuiTextBuffer __result__;
            DearImguiSharp.ImGuiTextBuffer.__Native __result__native = default (DearImguiSharp.ImGuiTextBuffer.__Native);
            __result__ = default (DearImguiSharp.ImGuiTextBuffer);
            ImGuiTextBuffer_ImGuiTextBuffer_(&__result__native);
            __result__.__MarshalFrom(ref __result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiTextBuffer_ImGuiTextBuffer", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImGuiTextBuffer_ImGuiTextBuffer_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiTextBuffer_destroy([In] ImGuiTextBuffer* self)</unmanaged>
        /// <unmanaged-short>ImGuiTextBuffer_destroy</unmanaged-short>
        public static unsafe void ImGuiTextBufferDestroy(ref DearImguiSharp.ImGuiTextBuffer self)
        {
            DearImguiSharp.ImGuiTextBuffer.__Native self_ = default (DearImguiSharp.ImGuiTextBuffer.__Native);
            self.__MarshalTo(ref self_);
            ImGuiTextBuffer_destroy_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiTextBuffer_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiTextBuffer_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>const char* ImGuiTextBuffer_begin([In] ImGuiTextBuffer* self)</unmanaged>
        /// <unmanaged-short>ImGuiTextBuffer_begin</unmanaged-short>
        public static unsafe System.String ImGuiTextBufferBegin(ref DearImguiSharp.ImGuiTextBuffer self)
        {
            DearImguiSharp.ImGuiTextBuffer.__Native self_ = default (DearImguiSharp.ImGuiTextBuffer.__Native);
            System.String __result__;
            System.IntPtr __result__native;
            self.__MarshalTo(ref self_);
            __result__native = ImGuiTextBuffer_begin_(&self_);
            __result__ = System.Runtime.InteropServices.Marshal.PtrToStringAnsi(__result__native);
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiTextBuffer_begin", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.IntPtr ImGuiTextBuffer_begin_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>const char* ImGuiTextBuffer_end([In] ImGuiTextBuffer* self)</unmanaged>
        /// <unmanaged-short>ImGuiTextBuffer_end</unmanaged-short>
        public static unsafe System.String ImGuiTextBufferEnd(ref DearImguiSharp.ImGuiTextBuffer self)
        {
            DearImguiSharp.ImGuiTextBuffer.__Native self_ = default (DearImguiSharp.ImGuiTextBuffer.__Native);
            System.String __result__;
            System.IntPtr __result__native;
            self.__MarshalTo(ref self_);
            __result__native = ImGuiTextBuffer_end_(&self_);
            __result__ = System.Runtime.InteropServices.Marshal.PtrToStringAnsi(__result__native);
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiTextBuffer_end", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.IntPtr ImGuiTextBuffer_end_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>int ImGuiTextBuffer_size([In] ImGuiTextBuffer* self)</unmanaged>
        /// <unmanaged-short>ImGuiTextBuffer_size</unmanaged-short>
        public static unsafe System.Int32 ImGuiTextBufferSize(ref DearImguiSharp.ImGuiTextBuffer self)
        {
            DearImguiSharp.ImGuiTextBuffer.__Native self_ = default (DearImguiSharp.ImGuiTextBuffer.__Native);
            System.Int32 __result__;
            self.__MarshalTo(ref self_);
            __result__ = ImGuiTextBuffer_size_(&self_);
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiTextBuffer_size", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern int ImGuiTextBuffer_size_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool ImGuiTextBuffer_empty([In] ImGuiTextBuffer* self)</unmanaged>
        /// <unmanaged-short>ImGuiTextBuffer_empty</unmanaged-short>
        public static unsafe System.Boolean ImGuiTextBufferEmpty(ref DearImguiSharp.ImGuiTextBuffer self)
        {
            DearImguiSharp.ImGuiTextBuffer.__Native self_ = default (DearImguiSharp.ImGuiTextBuffer.__Native);
            System.Boolean __result__;
            System.Byte __result__native;
            self.__MarshalTo(ref self_);
            __result__native = ImGuiTextBuffer_empty_(&self_);
            __result__ = __result__native != 0;
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiTextBuffer_empty", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte ImGuiTextBuffer_empty_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiTextBuffer_clear([In] ImGuiTextBuffer* self)</unmanaged>
        /// <unmanaged-short>ImGuiTextBuffer_clear</unmanaged-short>
        public static unsafe void ImGuiTextBufferClear(ref DearImguiSharp.ImGuiTextBuffer self)
        {
            DearImguiSharp.ImGuiTextBuffer.__Native self_ = default (DearImguiSharp.ImGuiTextBuffer.__Native);
            self.__MarshalTo(ref self_);
            ImGuiTextBuffer_clear_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiTextBuffer_clear", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiTextBuffer_clear_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "capacity">No documentation.</param>
        /// <unmanaged>void ImGuiTextBuffer_reserve([In] ImGuiTextBuffer* self,[In] int capacity)</unmanaged>
        /// <unmanaged-short>ImGuiTextBuffer_reserve</unmanaged-short>
        public static unsafe void ImGuiTextBufferReserve(ref DearImguiSharp.ImGuiTextBuffer self, System.Int32 capacity)
        {
            DearImguiSharp.ImGuiTextBuffer.__Native self_ = default (DearImguiSharp.ImGuiTextBuffer.__Native);
            self.__MarshalTo(ref self_);
            ImGuiTextBuffer_reserve_(&self_, capacity);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiTextBuffer_reserve", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiTextBuffer_reserve_(void *param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>const char* ImGuiTextBuffer_c_str([In] ImGuiTextBuffer* self)</unmanaged>
        /// <unmanaged-short>ImGuiTextBuffer_c_str</unmanaged-short>
        public static unsafe System.String ImGuiTextBufferCStr(ref DearImguiSharp.ImGuiTextBuffer self)
        {
            DearImguiSharp.ImGuiTextBuffer.__Native self_ = default (DearImguiSharp.ImGuiTextBuffer.__Native);
            System.String __result__;
            System.IntPtr __result__native;
            self.__MarshalTo(ref self_);
            __result__native = ImGuiTextBuffer_c_str_(&self_);
            __result__ = System.Runtime.InteropServices.Marshal.PtrToStringAnsi(__result__native);
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiTextBuffer_c_str", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.IntPtr ImGuiTextBuffer_c_str_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "str">No documentation.</param>
        /// <param name = "strEnd">No documentation.</param>
        /// <unmanaged>void ImGuiTextBuffer_append([In] ImGuiTextBuffer* self,[In] const char* str,[In] const char* str_end)</unmanaged>
        /// <unmanaged-short>ImGuiTextBuffer_append</unmanaged-short>
        public static unsafe void ImGuiTextBufferAppend(ref DearImguiSharp.ImGuiTextBuffer self, System.String str, System.String strEnd)
        {
            DearImguiSharp.ImGuiTextBuffer.__Native self_ = default (DearImguiSharp.ImGuiTextBuffer.__Native);
            System.IntPtr str_;
            System.IntPtr strEnd_;
            self.__MarshalTo(ref self_);
            str_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(str);
            strEnd_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(strEnd);
            ImGuiTextBuffer_append_(&self_, (void *)str_, (void *)strEnd_);
            self.__MarshalFree(ref self_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(str_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(strEnd_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiTextBuffer_append", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiTextBuffer_append_(void *param0, void *param1, void *param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "fmt">No documentation.</param>
        /// <param name = "args">No documentation.</param>
        /// <unmanaged>void ImGuiTextBuffer_appendfv([In] ImGuiTextBuffer* self,[In] const char* fmt,[In] char* args)</unmanaged>
        /// <unmanaged-short>ImGuiTextBuffer_appendfv</unmanaged-short>
        public static unsafe void ImGuiTextBufferAppendfv(ref DearImguiSharp.ImGuiTextBuffer self, System.String fmt, System.String args)
        {
            DearImguiSharp.ImGuiTextBuffer.__Native self_ = default (DearImguiSharp.ImGuiTextBuffer.__Native);
            System.IntPtr fmt_;
            System.IntPtr args_;
            self.__MarshalTo(ref self_);
            fmt_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(fmt);
            args_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(args);
            ImGuiTextBuffer_appendfv_(&self_, (void *)fmt_, (void *)args_);
            self.__MarshalFree(ref self_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(fmt_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(args_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiTextBuffer_appendfv", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiTextBuffer_appendfv_(void *param0, void *param1, void *param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "key">No documentation.</param>
        /// <param name = "valI">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiStoragePair* ImGuiStoragePair_ImGuiStoragePairInt([In] unsigned int _key,[In] int _val_i)</unmanaged>
        /// <unmanaged-short>ImGuiStoragePair_ImGuiStoragePairInt</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiStoragePair ImGuiStoragePairImGuiStoragePairInt(System.UInt32 key, System.Int32 valI)
        {
            DearImguiSharp.ImGuiStoragePair __result__;
            __result__ = ImGuiStoragePair_ImGuiStoragePairInt_(key, valI);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiStoragePair_ImGuiStoragePairInt", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern DearImguiSharp.ImGuiStoragePair ImGuiStoragePair_ImGuiStoragePairInt_(System.UInt32 param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiStoragePair_destroy([In] ImGuiStoragePair* self)</unmanaged>
        /// <unmanaged-short>ImGuiStoragePair_destroy</unmanaged-short>
        public static unsafe void ImGuiStoragePairDestroy(DearImguiSharp.ImGuiStoragePair self)
        {
            ImGuiStoragePair_destroy_(&self);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiStoragePair_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiStoragePair_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "key">No documentation.</param>
        /// <param name = "valF">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiStoragePair* ImGuiStoragePair_ImGuiStoragePairFloat([In] unsigned int _key,[In] float _val_f)</unmanaged>
        /// <unmanaged-short>ImGuiStoragePair_ImGuiStoragePairFloat</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiStoragePair ImGuiStoragePairImGuiStoragePairFloat(System.UInt32 key, System.Single valF)
        {
            DearImguiSharp.ImGuiStoragePair __result__;
            __result__ = ImGuiStoragePair_ImGuiStoragePairFloat_(key, valF);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiStoragePair_ImGuiStoragePairFloat", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern DearImguiSharp.ImGuiStoragePair ImGuiStoragePair_ImGuiStoragePairFloat_(System.UInt32 param0, float param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "key">No documentation.</param>
        /// <param name = "valP">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiStoragePair* ImGuiStoragePair_ImGuiStoragePairPtr([In] unsigned int _key,[In] void* _val_p)</unmanaged>
        /// <unmanaged-short>ImGuiStoragePair_ImGuiStoragePairPtr</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiStoragePair ImGuiStoragePairImGuiStoragePairPtr(System.UInt32 key, System.IntPtr valP)
        {
            DearImguiSharp.ImGuiStoragePair __result__;
            __result__ = ImGuiStoragePair_ImGuiStoragePairPtr_(key, (void *)valP);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiStoragePair_ImGuiStoragePairPtr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern DearImguiSharp.ImGuiStoragePair ImGuiStoragePair_ImGuiStoragePairPtr_(System.UInt32 param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiStorage_Clear([In] ImGuiStorage* self)</unmanaged>
        /// <unmanaged-short>ImGuiStorage_Clear</unmanaged-short>
        public static unsafe void ImGuiStorageClear(DearImguiSharp.ImGuiStorage self)
        {
            ImGuiStorage_Clear_(&self);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiStorage_Clear", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiStorage_Clear_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "key">No documentation.</param>
        /// <param name = "defaultVal">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>int ImGuiStorage_GetInt([In] ImGuiStorage* self,[In] unsigned int key,[In] int default_val)</unmanaged>
        /// <unmanaged-short>ImGuiStorage_GetInt</unmanaged-short>
        public static unsafe System.Int32 ImGuiStorageGetInt(DearImguiSharp.ImGuiStorage self, System.UInt32 key, System.Int32 defaultVal)
        {
            System.Int32 __result__;
            __result__ = ImGuiStorage_GetInt_(&self, key, defaultVal);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiStorage_GetInt", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern int ImGuiStorage_GetInt_(void *param0, System.UInt32 param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "key">No documentation.</param>
        /// <param name = "val">No documentation.</param>
        /// <unmanaged>void ImGuiStorage_SetInt([In] ImGuiStorage* self,[In] unsigned int key,[In] int val)</unmanaged>
        /// <unmanaged-short>ImGuiStorage_SetInt</unmanaged-short>
        public static unsafe void ImGuiStorageSetInt(DearImguiSharp.ImGuiStorage self, System.UInt32 key, System.Int32 val)
        {
            ImGuiStorage_SetInt_(&self, key, val);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiStorage_SetInt", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiStorage_SetInt_(void *param0, System.UInt32 param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "key">No documentation.</param>
        /// <param name = "defaultVal">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool ImGuiStorage_GetBool([In] ImGuiStorage* self,[In] unsigned int key,[In] bool default_val)</unmanaged>
        /// <unmanaged-short>ImGuiStorage_GetBool</unmanaged-short>
        public static unsafe System.Boolean ImGuiStorageGetBool(DearImguiSharp.ImGuiStorage self, System.UInt32 key, System.Boolean defaultVal)
        {
            System.Byte defaultVal_;
            System.Boolean __result__;
            System.Byte __result__native;
            defaultVal_ = (System.Byte)(defaultVal ? 1 : 0);
            __result__native = ImGuiStorage_GetBool_(&self, key, defaultVal_);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiStorage_GetBool", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte ImGuiStorage_GetBool_(void *param0, System.UInt32 param1, System.Byte param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "key">No documentation.</param>
        /// <param name = "val">No documentation.</param>
        /// <unmanaged>void ImGuiStorage_SetBool([In] ImGuiStorage* self,[In] unsigned int key,[In] bool val)</unmanaged>
        /// <unmanaged-short>ImGuiStorage_SetBool</unmanaged-short>
        public static unsafe void ImGuiStorageSetBool(DearImguiSharp.ImGuiStorage self, System.UInt32 key, System.Boolean val)
        {
            System.Byte val_;
            val_ = (System.Byte)(val ? 1 : 0);
            ImGuiStorage_SetBool_(&self, key, val_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiStorage_SetBool", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiStorage_SetBool_(void *param0, System.UInt32 param1, System.Byte param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "key">No documentation.</param>
        /// <param name = "defaultVal">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float ImGuiStorage_GetFloat([In] ImGuiStorage* self,[In] unsigned int key,[In] float default_val)</unmanaged>
        /// <unmanaged-short>ImGuiStorage_GetFloat</unmanaged-short>
        public static unsafe System.Single ImGuiStorageGetFloat(DearImguiSharp.ImGuiStorage self, System.UInt32 key, System.Single defaultVal)
        {
            System.Single __result__;
            __result__ = ImGuiStorage_GetFloat_(&self, key, defaultVal);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiStorage_GetFloat", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float ImGuiStorage_GetFloat_(void *param0, System.UInt32 param1, float param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "key">No documentation.</param>
        /// <param name = "val">No documentation.</param>
        /// <unmanaged>void ImGuiStorage_SetFloat([In] ImGuiStorage* self,[In] unsigned int key,[In] float val)</unmanaged>
        /// <unmanaged-short>ImGuiStorage_SetFloat</unmanaged-short>
        public static unsafe void ImGuiStorageSetFloat(DearImguiSharp.ImGuiStorage self, System.UInt32 key, System.Single val)
        {
            ImGuiStorage_SetFloat_(&self, key, val);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiStorage_SetFloat", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiStorage_SetFloat_(void *param0, System.UInt32 param1, float param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "key">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>void* ImGuiStorage_GetVoidPtr([In] ImGuiStorage* self,[In] unsigned int key)</unmanaged>
        /// <unmanaged-short>ImGuiStorage_GetVoidPtr</unmanaged-short>
        public static unsafe System.IntPtr ImGuiStorageGetVoidPtr(DearImguiSharp.ImGuiStorage self, System.UInt32 key)
        {
            System.IntPtr __result__;
            __result__ = ImGuiStorage_GetVoidPtr_(&self, key);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiStorage_GetVoidPtr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.IntPtr ImGuiStorage_GetVoidPtr_(void *param0, System.UInt32 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "key">No documentation.</param>
        /// <param name = "val">No documentation.</param>
        /// <unmanaged>void ImGuiStorage_SetVoidPtr([In] ImGuiStorage* self,[In] unsigned int key,[In] void* val)</unmanaged>
        /// <unmanaged-short>ImGuiStorage_SetVoidPtr</unmanaged-short>
        public static unsafe void ImGuiStorageSetVoidPtr(DearImguiSharp.ImGuiStorage self, System.UInt32 key, System.IntPtr val)
        {
            ImGuiStorage_SetVoidPtr_(&self, key, (void *)val);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiStorage_SetVoidPtr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiStorage_SetVoidPtr_(void *param0, System.UInt32 param1, void *param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "key">No documentation.</param>
        /// <param name = "defaultVal">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>int* ImGuiStorage_GetIntRef([In] ImGuiStorage* self,[In] unsigned int key,[In] int default_val)</unmanaged>
        /// <unmanaged-short>ImGuiStorage_GetIntRef</unmanaged-short>
        public static unsafe System.Int32 ImGuiStorageGetIntRef(DearImguiSharp.ImGuiStorage self, System.UInt32 key, System.Int32 defaultVal)
        {
            System.Int32 __result__;
            __result__ = ImGuiStorage_GetIntRef_(&self, key, defaultVal);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiStorage_GetIntRef", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern int ImGuiStorage_GetIntRef_(void *param0, System.UInt32 param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "key">No documentation.</param>
        /// <param name = "defaultVal">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool* ImGuiStorage_GetBoolRef([In] ImGuiStorage* self,[In] unsigned int key,[In] bool default_val)</unmanaged>
        /// <unmanaged-short>ImGuiStorage_GetBoolRef</unmanaged-short>
        public static unsafe System.Boolean ImGuiStorageGetBoolRef(DearImguiSharp.ImGuiStorage self, System.UInt32 key, System.Boolean defaultVal)
        {
            System.Byte defaultVal_;
            System.Boolean __result__;
            System.Byte __result__native;
            defaultVal_ = (System.Byte)(defaultVal ? 1 : 0);
            __result__native = ImGuiStorage_GetBoolRef_(&self, key, defaultVal_);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiStorage_GetBoolRef", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte ImGuiStorage_GetBoolRef_(void *param0, System.UInt32 param1, System.Byte param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "key">No documentation.</param>
        /// <param name = "defaultVal">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float* ImGuiStorage_GetFloatRef([In] ImGuiStorage* self,[In] unsigned int key,[In] float default_val)</unmanaged>
        /// <unmanaged-short>ImGuiStorage_GetFloatRef</unmanaged-short>
        public static unsafe System.Single ImGuiStorageGetFloatRef(DearImguiSharp.ImGuiStorage self, System.UInt32 key, System.Single defaultVal)
        {
            System.Single __result__;
            __result__ = ImGuiStorage_GetFloatRef_(&self, key, defaultVal);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiStorage_GetFloatRef", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float ImGuiStorage_GetFloatRef_(void *param0, System.UInt32 param1, float param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "key">No documentation.</param>
        /// <param name = "defaultVal">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>void** ImGuiStorage_GetVoidPtrRef([In] ImGuiStorage* self,[In] unsigned int key,[In] void* default_val)</unmanaged>
        /// <unmanaged-short>ImGuiStorage_GetVoidPtrRef</unmanaged-short>
        public static unsafe System.IntPtr ImGuiStorageGetVoidPtrRef(DearImguiSharp.ImGuiStorage self, System.UInt32 key, System.IntPtr defaultVal)
        {
            System.IntPtr __result__;
            __result__ = ImGuiStorage_GetVoidPtrRef_(&self, key, (void *)defaultVal);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiStorage_GetVoidPtrRef", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.IntPtr ImGuiStorage_GetVoidPtrRef_(void *param0, System.UInt32 param1, void *param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "val">No documentation.</param>
        /// <unmanaged>void ImGuiStorage_SetAllInt([In] ImGuiStorage* self,[In] int val)</unmanaged>
        /// <unmanaged-short>ImGuiStorage_SetAllInt</unmanaged-short>
        public static unsafe void ImGuiStorageSetAllInt(DearImguiSharp.ImGuiStorage self, System.Int32 val)
        {
            ImGuiStorage_SetAllInt_(&self, val);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiStorage_SetAllInt", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiStorage_SetAllInt_(void *param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiStorage_BuildSortByKey([In] ImGuiStorage* self)</unmanaged>
        /// <unmanaged-short>ImGuiStorage_BuildSortByKey</unmanaged-short>
        public static unsafe void ImGuiStorageBuildSortByKey(DearImguiSharp.ImGuiStorage self)
        {
            ImGuiStorage_BuildSortByKey_(&self);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiStorage_BuildSortByKey", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiStorage_BuildSortByKey_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "itemsCount">No documentation.</param>
        /// <param name = "itemsHeight">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiListClipper* ImGuiListClipper_ImGuiListClipper([In] int items_count,[In] float items_height)</unmanaged>
        /// <unmanaged-short>ImGuiListClipper_ImGuiListClipper</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiListClipper ImGuiListClipperImGuiListClipper(System.Int32 itemsCount, System.Single itemsHeight)
        {
            DearImguiSharp.ImGuiListClipper __result__;
            ImGuiListClipper_ImGuiListClipper_(&__result__, itemsCount, itemsHeight);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiListClipper_ImGuiListClipper", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImGuiListClipper_ImGuiListClipper_(void *param0, int param1, float param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiListClipper_destroy([In] ImGuiListClipper* self)</unmanaged>
        /// <unmanaged-short>ImGuiListClipper_destroy</unmanaged-short>
        public static unsafe void ImGuiListClipperDestroy(ref DearImguiSharp.ImGuiListClipper self)
        {
            fixed (void *self_ = &self)
                ImGuiListClipper_destroy_(self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiListClipper_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiListClipper_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool ImGuiListClipper_Step([In] ImGuiListClipper* self)</unmanaged>
        /// <unmanaged-short>ImGuiListClipper_Step</unmanaged-short>
        public static unsafe System.Boolean ImGuiListClipperStep(ref DearImguiSharp.ImGuiListClipper self)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            fixed (void *self_ = &self)
                __result__native = ImGuiListClipper_Step_(self_);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiListClipper_Step", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte ImGuiListClipper_Step_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "itemsCount">No documentation.</param>
        /// <param name = "itemsHeight">No documentation.</param>
        /// <unmanaged>void ImGuiListClipper_Begin([In] ImGuiListClipper* self,[In] int items_count,[In] float items_height)</unmanaged>
        /// <unmanaged-short>ImGuiListClipper_Begin</unmanaged-short>
        public static unsafe void ImGuiListClipperBegin(ref DearImguiSharp.ImGuiListClipper self, System.Int32 itemsCount, System.Single itemsHeight)
        {
            fixed (void *self_ = &self)
                ImGuiListClipper_Begin_(self_, itemsCount, itemsHeight);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiListClipper_Begin", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiListClipper_Begin_(void *param0, int param1, float param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiListClipper_End([In] ImGuiListClipper* self)</unmanaged>
        /// <unmanaged-short>ImGuiListClipper_End</unmanaged-short>
        public static unsafe void ImGuiListClipperEnd(ref DearImguiSharp.ImGuiListClipper self)
        {
            fixed (void *self_ = &self)
                ImGuiListClipper_End_(self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiListClipper_End", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiListClipper_End_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImColor* ImColor_ImColorNil()</unmanaged>
        /// <unmanaged-short>ImColor_ImColorNil</unmanaged-short>
        public static unsafe DearImguiSharp.ImColor ImColorImColorNil()
        {
            DearImguiSharp.ImColor __result__;
            ImColor_ImColorNil_(&__result__);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImColor_ImColorNil", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImColor_ImColorNil_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImColor_destroy([In] ImColor* self)</unmanaged>
        /// <unmanaged-short>ImColor_destroy</unmanaged-short>
        public static unsafe void ImColorDestroy(DearImguiSharp.ImColor self)
        {
            ImColor_destroy_(&self);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImColor_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImColor_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "r">No documentation.</param>
        /// <param name = "g">No documentation.</param>
        /// <param name = "b">No documentation.</param>
        /// <param name = "a">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImColor* ImColor_ImColorInt([In] int r,[In] int g,[In] int b,[In] int a)</unmanaged>
        /// <unmanaged-short>ImColor_ImColorInt</unmanaged-short>
        public static unsafe DearImguiSharp.ImColor ImColorImColorInt(System.Int32 r, System.Int32 g, System.Int32 b, System.Int32 a)
        {
            DearImguiSharp.ImColor __result__;
            ImColor_ImColorInt_(&__result__, r, g, b, a);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImColor_ImColorInt", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImColor_ImColorInt_(void *param0, int param1, int param2, int param3, int param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "rgba">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImColor* ImColor_ImColorU32([In] unsigned int rgba)</unmanaged>
        /// <unmanaged-short>ImColor_ImColorU32</unmanaged-short>
        public static unsafe DearImguiSharp.ImColor ImColorImColorU32(System.UInt32 rgba)
        {
            DearImguiSharp.ImColor __result__;
            ImColor_ImColorU32_(&__result__, rgba);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImColor_ImColorU32", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImColor_ImColorU32_(void *param0, System.UInt32 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "r">No documentation.</param>
        /// <param name = "g">No documentation.</param>
        /// <param name = "b">No documentation.</param>
        /// <param name = "a">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImColor* ImColor_ImColorFloat([In] float r,[In] float g,[In] float b,[In] float a)</unmanaged>
        /// <unmanaged-short>ImColor_ImColorFloat</unmanaged-short>
        public static unsafe DearImguiSharp.ImColor ImColorImColorFloat(System.Single r, System.Single g, System.Single b, System.Single a)
        {
            DearImguiSharp.ImColor __result__;
            ImColor_ImColorFloat_(&__result__, r, g, b, a);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImColor_ImColorFloat", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImColor_ImColorFloat_(void *param0, float param1, float param2, float param3, float param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "col">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImColor* ImColor_ImColorVec4([In] const ImVec4 col)</unmanaged>
        /// <unmanaged-short>ImColor_ImColorVec4</unmanaged-short>
        public static unsafe DearImguiSharp.ImColor ImColorImColorVec4(DearImguiSharp.ImVec4 col)
        {
            DearImguiSharp.ImColor __result__;
            ImColor_ImColorVec4_(&__result__, col);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImColor_ImColorVec4", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImColor_ImColorVec4_(void *param0, DearImguiSharp.ImVec4 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "h">No documentation.</param>
        /// <param name = "s">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <param name = "a">No documentation.</param>
        /// <unmanaged>void ImColor_SetHSV([In] ImColor* self,[In] float h,[In] float s,[In] float v,[In] float a)</unmanaged>
        /// <unmanaged-short>ImColor_SetHSV</unmanaged-short>
        public static unsafe void ImColorSetHSV(DearImguiSharp.ImColor self, System.Single h, System.Single s, System.Single v, System.Single a)
        {
            ImColor_SetHSV_(&self, h, s, v, a);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImColor_SetHSV", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImColor_SetHSV_(void *param0, float param1, float param2, float param3, float param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "self">No documentation.</param>
        /// <param name = "h">No documentation.</param>
        /// <param name = "s">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <param name = "a">No documentation.</param>
        /// <unmanaged>void ImColor_HSV([In] ImColor* pOut,[In] ImColor* self,[In] float h,[In] float s,[In] float v,[In] float a)</unmanaged>
        /// <unmanaged-short>ImColor_HSV</unmanaged-short>
        public static unsafe void ImColorHsv(DearImguiSharp.ImColor outRef, DearImguiSharp.ImColor self, System.Single h, System.Single s, System.Single v, System.Single a)
        {
            ImColor_HSV_(&outRef, &self, h, s, v, a);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImColor_HSV", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImColor_HSV_(void *param0, void *param1, float param2, float param3, float param4, float param5);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImDrawCmd* ImDrawCmd_ImDrawCmd()</unmanaged>
        /// <unmanaged-short>ImDrawCmd_ImDrawCmd</unmanaged-short>
        public static unsafe DearImguiSharp.ImDrawCmd ImDrawCmdImDrawCmd()
        {
            DearImguiSharp.ImDrawCmd __result__;
            ImDrawCmd_ImDrawCmd_(&__result__);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawCmd_ImDrawCmd", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImDrawCmd_ImDrawCmd_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImDrawCmd_destroy([In] ImDrawCmd* self)</unmanaged>
        /// <unmanaged-short>ImDrawCmd_destroy</unmanaged-short>
        public static unsafe void ImDrawCmdDestroy(ref DearImguiSharp.ImDrawCmd self)
        {
            fixed (void *self_ = &self)
                ImDrawCmd_destroy_(self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawCmd_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawCmd_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImDrawListSplitter* ImDrawListSplitter_ImDrawListSplitter()</unmanaged>
        /// <unmanaged-short>ImDrawListSplitter_ImDrawListSplitter</unmanaged-short>
        public static unsafe DearImguiSharp.ImDrawListSplitter ImDrawListSplitterImDrawListSplitter()
        {
            DearImguiSharp.ImDrawListSplitter __result__;
            ImDrawListSplitter_ImDrawListSplitter_(&__result__);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawListSplitter_ImDrawListSplitter", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImDrawListSplitter_ImDrawListSplitter_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImDrawListSplitter_destroy([In] ImDrawListSplitter* self)</unmanaged>
        /// <unmanaged-short>ImDrawListSplitter_destroy</unmanaged-short>
        public static unsafe void ImDrawListSplitterDestroy(ref DearImguiSharp.ImDrawListSplitter self)
        {
            fixed (void *self_ = &self)
                ImDrawListSplitter_destroy_(self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawListSplitter_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawListSplitter_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImDrawListSplitter_Clear([In] ImDrawListSplitter* self)</unmanaged>
        /// <unmanaged-short>ImDrawListSplitter_Clear</unmanaged-short>
        public static unsafe void ImDrawListSplitterClear(ref DearImguiSharp.ImDrawListSplitter self)
        {
            fixed (void *self_ = &self)
                ImDrawListSplitter_Clear_(self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawListSplitter_Clear", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawListSplitter_Clear_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImDrawListSplitter_ClearFreeMemory([In] ImDrawListSplitter* self)</unmanaged>
        /// <unmanaged-short>ImDrawListSplitter_ClearFreeMemory</unmanaged-short>
        public static unsafe void ImDrawListSplitterClearFreeMemory(ref DearImguiSharp.ImDrawListSplitter self)
        {
            fixed (void *self_ = &self)
                ImDrawListSplitter_ClearFreeMemory_(self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawListSplitter_ClearFreeMemory", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawListSplitter_ClearFreeMemory_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "drawList">No documentation.</param>
        /// <param name = "count">No documentation.</param>
        /// <unmanaged>void ImDrawListSplitter_Split([In] ImDrawListSplitter* self,[In] ImDrawList* draw_list,[In] int count)</unmanaged>
        /// <unmanaged-short>ImDrawListSplitter_Split</unmanaged-short>
        public static unsafe void ImDrawListSplitterSplit(ref DearImguiSharp.ImDrawListSplitter self, ref DearImguiSharp.ImDrawList drawList, System.Int32 count)
        {
            DearImguiSharp.ImDrawList.__Native drawList_ = default (DearImguiSharp.ImDrawList.__Native);
            drawList.__MarshalTo(ref drawList_);
            fixed (void *self_ = &self)
                ImDrawListSplitter_Split_(self_, &drawList_, count);
            drawList.__MarshalFree(ref drawList_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawListSplitter_Split", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawListSplitter_Split_(void *param0, void *param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "drawList">No documentation.</param>
        /// <unmanaged>void ImDrawListSplitter_Merge([In] ImDrawListSplitter* self,[In] ImDrawList* draw_list)</unmanaged>
        /// <unmanaged-short>ImDrawListSplitter_Merge</unmanaged-short>
        public static unsafe void ImDrawListSplitterMerge(ref DearImguiSharp.ImDrawListSplitter self, ref DearImguiSharp.ImDrawList drawList)
        {
            DearImguiSharp.ImDrawList.__Native drawList_ = default (DearImguiSharp.ImDrawList.__Native);
            drawList.__MarshalTo(ref drawList_);
            fixed (void *self_ = &self)
                ImDrawListSplitter_Merge_(self_, &drawList_);
            drawList.__MarshalFree(ref drawList_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawListSplitter_Merge", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawListSplitter_Merge_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "drawList">No documentation.</param>
        /// <param name = "channelIdx">No documentation.</param>
        /// <unmanaged>void ImDrawListSplitter_SetCurrentChannel([In] ImDrawListSplitter* self,[In] ImDrawList* draw_list,[In] int channel_idx)</unmanaged>
        /// <unmanaged-short>ImDrawListSplitter_SetCurrentChannel</unmanaged-short>
        public static unsafe void ImDrawListSplitterSetCurrentChannel(ref DearImguiSharp.ImDrawListSplitter self, ref DearImguiSharp.ImDrawList drawList, System.Int32 channelIdx)
        {
            DearImguiSharp.ImDrawList.__Native drawList_ = default (DearImguiSharp.ImDrawList.__Native);
            drawList.__MarshalTo(ref drawList_);
            fixed (void *self_ = &self)
                ImDrawListSplitter_SetCurrentChannel_(self_, &drawList_, channelIdx);
            drawList.__MarshalFree(ref drawList_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawListSplitter_SetCurrentChannel", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawListSplitter_SetCurrentChannel_(void *param0, void *param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "sharedData">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImDrawList* ImDrawList_ImDrawList([In] const ImDrawListSharedData* shared_data)</unmanaged>
        /// <unmanaged-short>ImDrawList_ImDrawList</unmanaged-short>
        public static unsafe DearImguiSharp.ImDrawList ImDrawListImDrawList(ref DearImguiSharp.ImDrawListSharedData sharedData)
        {
            DearImguiSharp.ImDrawListSharedData.__Native sharedData_ = default (DearImguiSharp.ImDrawListSharedData.__Native);
            DearImguiSharp.ImDrawList __result__;
            DearImguiSharp.ImDrawList.__Native __result__native = default (DearImguiSharp.ImDrawList.__Native);
            __result__ = default (DearImguiSharp.ImDrawList);
            sharedData.__MarshalTo(ref sharedData_);
            ImDrawList_ImDrawList_(&__result__native, &sharedData_);
            __result__.__MarshalFrom(ref __result__native);
            sharedData.__MarshalFree(ref sharedData_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_ImDrawList", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImDrawList_ImDrawList_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImDrawList_destroy([In] ImDrawList* self)</unmanaged>
        /// <unmanaged-short>ImDrawList_destroy</unmanaged-short>
        public static unsafe void ImDrawListDestroy(ref DearImguiSharp.ImDrawList self)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_destroy_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "clipRectMin">No documentation.</param>
        /// <param name = "clipRectMax">No documentation.</param>
        /// <param name = "intersectWithCurrentClipRect">No documentation.</param>
        /// <unmanaged>void ImDrawList_PushClipRect([In] ImDrawList* self,[In] ImVec2 clip_rect_min,[In] ImVec2 clip_rect_max,[In] bool intersect_with_current_clip_rect)</unmanaged>
        /// <unmanaged-short>ImDrawList_PushClipRect</unmanaged-short>
        public static unsafe void ImDrawListPushClipRect(ref DearImguiSharp.ImDrawList self, DearImguiSharp.ImVec2 clipRectMin, DearImguiSharp.ImVec2 clipRectMax, System.Boolean intersectWithCurrentClipRect)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            System.Byte intersectWithCurrentClipRect_;
            self.__MarshalTo(ref self_);
            intersectWithCurrentClipRect_ = (System.Byte)(intersectWithCurrentClipRect ? 1 : 0);
            ImDrawList_PushClipRect_(&self_, clipRectMin, clipRectMax, intersectWithCurrentClipRect_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_PushClipRect", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_PushClipRect_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2, System.Byte param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImDrawList_PushClipRectFullScreen([In] ImDrawList* self)</unmanaged>
        /// <unmanaged-short>ImDrawList_PushClipRectFullScreen</unmanaged-short>
        public static unsafe void ImDrawListPushClipRectFullScreen(ref DearImguiSharp.ImDrawList self)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_PushClipRectFullScreen_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_PushClipRectFullScreen", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_PushClipRectFullScreen_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImDrawList_PopClipRect([In] ImDrawList* self)</unmanaged>
        /// <unmanaged-short>ImDrawList_PopClipRect</unmanaged-short>
        public static unsafe void ImDrawListPopClipRect(ref DearImguiSharp.ImDrawList self)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_PopClipRect_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_PopClipRect", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_PopClipRect_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "textureId">No documentation.</param>
        /// <unmanaged>void ImDrawList_PushTextureID([In] ImDrawList* self,[In] void* texture_id)</unmanaged>
        /// <unmanaged-short>ImDrawList_PushTextureID</unmanaged-short>
        public static unsafe void ImDrawListPushTextureID(ref DearImguiSharp.ImDrawList self, System.IntPtr textureId)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_PushTextureID_(&self_, (void *)textureId);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_PushTextureID", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_PushTextureID_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImDrawList_PopTextureID([In] ImDrawList* self)</unmanaged>
        /// <unmanaged-short>ImDrawList_PopTextureID</unmanaged-short>
        public static unsafe void ImDrawListPopTextureID(ref DearImguiSharp.ImDrawList self)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_PopTextureID_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_PopTextureID", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_PopTextureID_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImDrawList_GetClipRectMin([In] ImVec2* pOut,[In] ImDrawList* self)</unmanaged>
        /// <unmanaged-short>ImDrawList_GetClipRectMin</unmanaged-short>
        public static unsafe void ImDrawListGetClipRectMin(DearImguiSharp.ImVec2 outRef, ref DearImguiSharp.ImDrawList self)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_GetClipRectMin_(&outRef, &self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_GetClipRectMin", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_GetClipRectMin_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImDrawList_GetClipRectMax([In] ImVec2* pOut,[In] ImDrawList* self)</unmanaged>
        /// <unmanaged-short>ImDrawList_GetClipRectMax</unmanaged-short>
        public static unsafe void ImDrawListGetClipRectMax(DearImguiSharp.ImVec2 outRef, ref DearImguiSharp.ImDrawList self)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_GetClipRectMax_(&outRef, &self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_GetClipRectMax", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_GetClipRectMax_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "p1">No documentation.</param>
        /// <param name = "p2">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <param name = "thickness">No documentation.</param>
        /// <unmanaged>void ImDrawList_AddLine([In] ImDrawList* self,[In] const ImVec2 p1,[In] const ImVec2 p2,[In] unsigned int col,[In] float thickness)</unmanaged>
        /// <unmanaged-short>ImDrawList_AddLine</unmanaged-short>
        public static unsafe void ImDrawListAddLine(ref DearImguiSharp.ImDrawList self, DearImguiSharp.ImVec2 p1, DearImguiSharp.ImVec2 p2, System.UInt32 col, System.Single thickness)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_AddLine_(&self_, p1, p2, col, thickness);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_AddLine", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_AddLine_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2, System.UInt32 param3, float param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "pMin">No documentation.</param>
        /// <param name = "pMax">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <param name = "rounding">No documentation.</param>
        /// <param name = "roundingCorners">No documentation.</param>
        /// <param name = "thickness">No documentation.</param>
        /// <unmanaged>void ImDrawList_AddRect([In] ImDrawList* self,[In] const ImVec2 p_min,[In] const ImVec2 p_max,[In] unsigned int col,[In] float rounding,[In] int rounding_corners,[In] float thickness)</unmanaged>
        /// <unmanaged-short>ImDrawList_AddRect</unmanaged-short>
        public static unsafe void ImDrawListAddRect(ref DearImguiSharp.ImDrawList self, DearImguiSharp.ImVec2 pMin, DearImguiSharp.ImVec2 pMax, System.UInt32 col, System.Single rounding, System.Int32 roundingCorners, System.Single thickness)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_AddRect_(&self_, pMin, pMax, col, rounding, roundingCorners, thickness);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_AddRect", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_AddRect_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2, System.UInt32 param3, float param4, int param5, float param6);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "pMin">No documentation.</param>
        /// <param name = "pMax">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <param name = "rounding">No documentation.</param>
        /// <param name = "roundingCorners">No documentation.</param>
        /// <unmanaged>void ImDrawList_AddRectFilled([In] ImDrawList* self,[In] const ImVec2 p_min,[In] const ImVec2 p_max,[In] unsigned int col,[In] float rounding,[In] int rounding_corners)</unmanaged>
        /// <unmanaged-short>ImDrawList_AddRectFilled</unmanaged-short>
        public static unsafe void ImDrawListAddRectFilled(ref DearImguiSharp.ImDrawList self, DearImguiSharp.ImVec2 pMin, DearImguiSharp.ImVec2 pMax, System.UInt32 col, System.Single rounding, System.Int32 roundingCorners)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_AddRectFilled_(&self_, pMin, pMax, col, rounding, roundingCorners);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_AddRectFilled", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_AddRectFilled_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2, System.UInt32 param3, float param4, int param5);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "pMin">No documentation.</param>
        /// <param name = "pMax">No documentation.</param>
        /// <param name = "colUprLeft">No documentation.</param>
        /// <param name = "colUprRight">No documentation.</param>
        /// <param name = "colBotRight">No documentation.</param>
        /// <param name = "colBotLeft">No documentation.</param>
        /// <unmanaged>void ImDrawList_AddRectFilledMultiColor([In] ImDrawList* self,[In] const ImVec2 p_min,[In] const ImVec2 p_max,[In] unsigned int col_upr_left,[In] unsigned int col_upr_right,[In] unsigned int col_bot_right,[In] unsigned int col_bot_left)</unmanaged>
        /// <unmanaged-short>ImDrawList_AddRectFilledMultiColor</unmanaged-short>
        public static unsafe void ImDrawListAddRectFilledMultiColor(ref DearImguiSharp.ImDrawList self, DearImguiSharp.ImVec2 pMin, DearImguiSharp.ImVec2 pMax, System.UInt32 colUprLeft, System.UInt32 colUprRight, System.UInt32 colBotRight, System.UInt32 colBotLeft)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_AddRectFilledMultiColor_(&self_, pMin, pMax, colUprLeft, colUprRight, colBotRight, colBotLeft);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_AddRectFilledMultiColor", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_AddRectFilledMultiColor_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2, System.UInt32 param3, System.UInt32 param4, System.UInt32 param5, System.UInt32 param6);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "p1">No documentation.</param>
        /// <param name = "p2">No documentation.</param>
        /// <param name = "p3">No documentation.</param>
        /// <param name = "p4">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <param name = "thickness">No documentation.</param>
        /// <unmanaged>void ImDrawList_AddQuad([In] ImDrawList* self,[In] const ImVec2 p1,[In] const ImVec2 p2,[In] const ImVec2 p3,[In] const ImVec2 p4,[In] unsigned int col,[In] float thickness)</unmanaged>
        /// <unmanaged-short>ImDrawList_AddQuad</unmanaged-short>
        public static unsafe void ImDrawListAddQuad(ref DearImguiSharp.ImDrawList self, DearImguiSharp.ImVec2 p1, DearImguiSharp.ImVec2 p2, DearImguiSharp.ImVec2 p3, DearImguiSharp.ImVec2 p4, System.UInt32 col, System.Single thickness)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_AddQuad_(&self_, p1, p2, p3, p4, col, thickness);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_AddQuad", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_AddQuad_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2, DearImguiSharp.ImVec2 param3, DearImguiSharp.ImVec2 param4, System.UInt32 param5, float param6);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "p1">No documentation.</param>
        /// <param name = "p2">No documentation.</param>
        /// <param name = "p3">No documentation.</param>
        /// <param name = "p4">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <unmanaged>void ImDrawList_AddQuadFilled([In] ImDrawList* self,[In] const ImVec2 p1,[In] const ImVec2 p2,[In] const ImVec2 p3,[In] const ImVec2 p4,[In] unsigned int col)</unmanaged>
        /// <unmanaged-short>ImDrawList_AddQuadFilled</unmanaged-short>
        public static unsafe void ImDrawListAddQuadFilled(ref DearImguiSharp.ImDrawList self, DearImguiSharp.ImVec2 p1, DearImguiSharp.ImVec2 p2, DearImguiSharp.ImVec2 p3, DearImguiSharp.ImVec2 p4, System.UInt32 col)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_AddQuadFilled_(&self_, p1, p2, p3, p4, col);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_AddQuadFilled", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_AddQuadFilled_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2, DearImguiSharp.ImVec2 param3, DearImguiSharp.ImVec2 param4, System.UInt32 param5);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "p1">No documentation.</param>
        /// <param name = "p2">No documentation.</param>
        /// <param name = "p3">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <param name = "thickness">No documentation.</param>
        /// <unmanaged>void ImDrawList_AddTriangle([In] ImDrawList* self,[In] const ImVec2 p1,[In] const ImVec2 p2,[In] const ImVec2 p3,[In] unsigned int col,[In] float thickness)</unmanaged>
        /// <unmanaged-short>ImDrawList_AddTriangle</unmanaged-short>
        public static unsafe void ImDrawListAddTriangle(ref DearImguiSharp.ImDrawList self, DearImguiSharp.ImVec2 p1, DearImguiSharp.ImVec2 p2, DearImguiSharp.ImVec2 p3, System.UInt32 col, System.Single thickness)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_AddTriangle_(&self_, p1, p2, p3, col, thickness);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_AddTriangle", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_AddTriangle_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2, DearImguiSharp.ImVec2 param3, System.UInt32 param4, float param5);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "p1">No documentation.</param>
        /// <param name = "p2">No documentation.</param>
        /// <param name = "p3">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <unmanaged>void ImDrawList_AddTriangleFilled([In] ImDrawList* self,[In] const ImVec2 p1,[In] const ImVec2 p2,[In] const ImVec2 p3,[In] unsigned int col)</unmanaged>
        /// <unmanaged-short>ImDrawList_AddTriangleFilled</unmanaged-short>
        public static unsafe void ImDrawListAddTriangleFilled(ref DearImguiSharp.ImDrawList self, DearImguiSharp.ImVec2 p1, DearImguiSharp.ImVec2 p2, DearImguiSharp.ImVec2 p3, System.UInt32 col)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_AddTriangleFilled_(&self_, p1, p2, p3, col);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_AddTriangleFilled", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_AddTriangleFilled_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2, DearImguiSharp.ImVec2 param3, System.UInt32 param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "center">No documentation.</param>
        /// <param name = "radius">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <param name = "numSegments">No documentation.</param>
        /// <param name = "thickness">No documentation.</param>
        /// <unmanaged>void ImDrawList_AddCircle([In] ImDrawList* self,[In] const ImVec2 center,[In] float radius,[In] unsigned int col,[In] int num_segments,[In] float thickness)</unmanaged>
        /// <unmanaged-short>ImDrawList_AddCircle</unmanaged-short>
        public static unsafe void ImDrawListAddCircle(ref DearImguiSharp.ImDrawList self, DearImguiSharp.ImVec2 center, System.Single radius, System.UInt32 col, System.Int32 numSegments, System.Single thickness)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_AddCircle_(&self_, center, radius, col, numSegments, thickness);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_AddCircle", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_AddCircle_(void *param0, DearImguiSharp.ImVec2 param1, float param2, System.UInt32 param3, int param4, float param5);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "center">No documentation.</param>
        /// <param name = "radius">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <param name = "numSegments">No documentation.</param>
        /// <unmanaged>void ImDrawList_AddCircleFilled([In] ImDrawList* self,[In] const ImVec2 center,[In] float radius,[In] unsigned int col,[In] int num_segments)</unmanaged>
        /// <unmanaged-short>ImDrawList_AddCircleFilled</unmanaged-short>
        public static unsafe void ImDrawListAddCircleFilled(ref DearImguiSharp.ImDrawList self, DearImguiSharp.ImVec2 center, System.Single radius, System.UInt32 col, System.Int32 numSegments)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_AddCircleFilled_(&self_, center, radius, col, numSegments);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_AddCircleFilled", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_AddCircleFilled_(void *param0, DearImguiSharp.ImVec2 param1, float param2, System.UInt32 param3, int param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "center">No documentation.</param>
        /// <param name = "radius">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <param name = "numSegments">No documentation.</param>
        /// <param name = "thickness">No documentation.</param>
        /// <unmanaged>void ImDrawList_AddNgon([In] ImDrawList* self,[In] const ImVec2 center,[In] float radius,[In] unsigned int col,[In] int num_segments,[In] float thickness)</unmanaged>
        /// <unmanaged-short>ImDrawList_AddNgon</unmanaged-short>
        public static unsafe void ImDrawListAddNgon(ref DearImguiSharp.ImDrawList self, DearImguiSharp.ImVec2 center, System.Single radius, System.UInt32 col, System.Int32 numSegments, System.Single thickness)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_AddNgon_(&self_, center, radius, col, numSegments, thickness);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_AddNgon", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_AddNgon_(void *param0, DearImguiSharp.ImVec2 param1, float param2, System.UInt32 param3, int param4, float param5);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "center">No documentation.</param>
        /// <param name = "radius">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <param name = "numSegments">No documentation.</param>
        /// <unmanaged>void ImDrawList_AddNgonFilled([In] ImDrawList* self,[In] const ImVec2 center,[In] float radius,[In] unsigned int col,[In] int num_segments)</unmanaged>
        /// <unmanaged-short>ImDrawList_AddNgonFilled</unmanaged-short>
        public static unsafe void ImDrawListAddNgonFilled(ref DearImguiSharp.ImDrawList self, DearImguiSharp.ImVec2 center, System.Single radius, System.UInt32 col, System.Int32 numSegments)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_AddNgonFilled_(&self_, center, radius, col, numSegments);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_AddNgonFilled", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_AddNgonFilled_(void *param0, DearImguiSharp.ImVec2 param1, float param2, System.UInt32 param3, int param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "pos">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <param name = "textBegin">No documentation.</param>
        /// <param name = "textEnd">No documentation.</param>
        /// <unmanaged>void ImDrawList_AddTextVec2([In] ImDrawList* self,[In] const ImVec2 pos,[In] unsigned int col,[In] const char* text_begin,[In] const char* text_end)</unmanaged>
        /// <unmanaged-short>ImDrawList_AddTextVec2</unmanaged-short>
        public static unsafe void ImDrawListAddTextVec2(ref DearImguiSharp.ImDrawList self, DearImguiSharp.ImVec2 pos, System.UInt32 col, System.String textBegin, System.String textEnd)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            System.IntPtr textBegin_;
            System.IntPtr textEnd_;
            self.__MarshalTo(ref self_);
            textBegin_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(textBegin);
            textEnd_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(textEnd);
            ImDrawList_AddTextVec2_(&self_, pos, col, (void *)textBegin_, (void *)textEnd_);
            self.__MarshalFree(ref self_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(textBegin_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(textEnd_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_AddTextVec2", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_AddTextVec2_(void *param0, DearImguiSharp.ImVec2 param1, System.UInt32 param2, void *param3, void *param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "font">No documentation.</param>
        /// <param name = "fontSize">No documentation.</param>
        /// <param name = "pos">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <param name = "textBegin">No documentation.</param>
        /// <param name = "textEnd">No documentation.</param>
        /// <param name = "wrapWidth">No documentation.</param>
        /// <param name = "cpuFineClipRect">No documentation.</param>
        /// <unmanaged>void ImDrawList_AddTextFontPtr([In] ImDrawList* self,[In] const ImFont* font,[In] float font_size,[In] const ImVec2 pos,[In] unsigned int col,[In] const char* text_begin,[In] const char* text_end,[In] float wrap_width,[In] const ImVec4* cpu_fine_clip_rect)</unmanaged>
        /// <unmanaged-short>ImDrawList_AddTextFontPtr</unmanaged-short>
        public static unsafe void ImDrawListAddTextFontPtr(ref DearImguiSharp.ImDrawList self, ref DearImguiSharp.ImFont font, System.Single fontSize, DearImguiSharp.ImVec2 pos, System.UInt32 col, System.String textBegin, System.String textEnd, System.Single wrapWidth, DearImguiSharp.ImVec4 cpuFineClipRect)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            System.IntPtr textBegin_;
            System.IntPtr textEnd_;
            self.__MarshalTo(ref self_);
            textBegin_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(textBegin);
            textEnd_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(textEnd);
            fixed (void *font_ = &font)
                ImDrawList_AddTextFontPtr_(&self_, font_, fontSize, pos, col, (void *)textBegin_, (void *)textEnd_, wrapWidth, &cpuFineClipRect);
            self.__MarshalFree(ref self_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(textBegin_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(textEnd_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_AddTextFontPtr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_AddTextFontPtr_(void *param0, void *param1, float param2, DearImguiSharp.ImVec2 param3, System.UInt32 param4, void *param5, void *param6, float param7, void *param8);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "ointsRef">No documentation.</param>
        /// <param name = "numPoints">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <param name = "closed">No documentation.</param>
        /// <param name = "thickness">No documentation.</param>
        /// <unmanaged>void ImDrawList_AddPolyline([In] ImDrawList* self,[In] const ImVec2* points,[In] int num_points,[In] unsigned int col,[In] bool closed,[In] float thickness)</unmanaged>
        /// <unmanaged-short>ImDrawList_AddPolyline</unmanaged-short>
        public static unsafe void ImDrawListAddPolyline(ref DearImguiSharp.ImDrawList self, DearImguiSharp.ImVec2 ointsRef, System.Int32 numPoints, System.UInt32 col, System.Boolean closed, System.Single thickness)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            System.Byte closed_;
            self.__MarshalTo(ref self_);
            closed_ = (System.Byte)(closed ? 1 : 0);
            ImDrawList_AddPolyline_(&self_, &ointsRef, numPoints, col, closed_, thickness);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_AddPolyline", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_AddPolyline_(void *param0, void *param1, int param2, System.UInt32 param3, System.Byte param4, float param5);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "ointsRef">No documentation.</param>
        /// <param name = "numPoints">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <unmanaged>void ImDrawList_AddConvexPolyFilled([In] ImDrawList* self,[In] const ImVec2* points,[In] int num_points,[In] unsigned int col)</unmanaged>
        /// <unmanaged-short>ImDrawList_AddConvexPolyFilled</unmanaged-short>
        public static unsafe void ImDrawListAddConvexPolyFilled(ref DearImguiSharp.ImDrawList self, DearImguiSharp.ImVec2 ointsRef, System.Int32 numPoints, System.UInt32 col)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_AddConvexPolyFilled_(&self_, &ointsRef, numPoints, col);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_AddConvexPolyFilled", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_AddConvexPolyFilled_(void *param0, void *param1, int param2, System.UInt32 param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "p1">No documentation.</param>
        /// <param name = "p2">No documentation.</param>
        /// <param name = "p3">No documentation.</param>
        /// <param name = "p4">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <param name = "thickness">No documentation.</param>
        /// <param name = "numSegments">No documentation.</param>
        /// <unmanaged>void ImDrawList_AddBezierCurve([In] ImDrawList* self,[In] const ImVec2 p1,[In] const ImVec2 p2,[In] const ImVec2 p3,[In] const ImVec2 p4,[In] unsigned int col,[In] float thickness,[In] int num_segments)</unmanaged>
        /// <unmanaged-short>ImDrawList_AddBezierCurve</unmanaged-short>
        public static unsafe void ImDrawListAddBezierCurve(ref DearImguiSharp.ImDrawList self, DearImguiSharp.ImVec2 p1, DearImguiSharp.ImVec2 p2, DearImguiSharp.ImVec2 p3, DearImguiSharp.ImVec2 p4, System.UInt32 col, System.Single thickness, System.Int32 numSegments)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_AddBezierCurve_(&self_, p1, p2, p3, p4, col, thickness, numSegments);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_AddBezierCurve", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_AddBezierCurve_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2, DearImguiSharp.ImVec2 param3, DearImguiSharp.ImVec2 param4, System.UInt32 param5, float param6, int param7);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "userTextureId">No documentation.</param>
        /// <param name = "pMin">No documentation.</param>
        /// <param name = "pMax">No documentation.</param>
        /// <param name = "uvMin">No documentation.</param>
        /// <param name = "uvMax">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <unmanaged>void ImDrawList_AddImage([In] ImDrawList* self,[In] void* user_texture_id,[In] const ImVec2 p_min,[In] const ImVec2 p_max,[In] const ImVec2 uv_min,[In] const ImVec2 uv_max,[In] unsigned int col)</unmanaged>
        /// <unmanaged-short>ImDrawList_AddImage</unmanaged-short>
        public static unsafe void ImDrawListAddImage(ref DearImguiSharp.ImDrawList self, System.IntPtr userTextureId, DearImguiSharp.ImVec2 pMin, DearImguiSharp.ImVec2 pMax, DearImguiSharp.ImVec2 uvMin, DearImguiSharp.ImVec2 uvMax, System.UInt32 col)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_AddImage_(&self_, (void *)userTextureId, pMin, pMax, uvMin, uvMax, col);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_AddImage", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_AddImage_(void *param0, void *param1, DearImguiSharp.ImVec2 param2, DearImguiSharp.ImVec2 param3, DearImguiSharp.ImVec2 param4, DearImguiSharp.ImVec2 param5, System.UInt32 param6);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "userTextureId">No documentation.</param>
        /// <param name = "p1">No documentation.</param>
        /// <param name = "p2">No documentation.</param>
        /// <param name = "p3">No documentation.</param>
        /// <param name = "p4">No documentation.</param>
        /// <param name = "uv1">No documentation.</param>
        /// <param name = "uv2">No documentation.</param>
        /// <param name = "uv3">No documentation.</param>
        /// <param name = "uv4">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <unmanaged>void ImDrawList_AddImageQuad([In] ImDrawList* self,[In] void* user_texture_id,[In] const ImVec2 p1,[In] const ImVec2 p2,[In] const ImVec2 p3,[In] const ImVec2 p4,[In] const ImVec2 uv1,[In] const ImVec2 uv2,[In] const ImVec2 uv3,[In] const ImVec2 uv4,[In] unsigned int col)</unmanaged>
        /// <unmanaged-short>ImDrawList_AddImageQuad</unmanaged-short>
        public static unsafe void ImDrawListAddImageQuad(ref DearImguiSharp.ImDrawList self, System.IntPtr userTextureId, DearImguiSharp.ImVec2 p1, DearImguiSharp.ImVec2 p2, DearImguiSharp.ImVec2 p3, DearImguiSharp.ImVec2 p4, DearImguiSharp.ImVec2 uv1, DearImguiSharp.ImVec2 uv2, DearImguiSharp.ImVec2 uv3, DearImguiSharp.ImVec2 uv4, System.UInt32 col)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_AddImageQuad_(&self_, (void *)userTextureId, p1, p2, p3, p4, uv1, uv2, uv3, uv4, col);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_AddImageQuad", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_AddImageQuad_(void *param0, void *param1, DearImguiSharp.ImVec2 param2, DearImguiSharp.ImVec2 param3, DearImguiSharp.ImVec2 param4, DearImguiSharp.ImVec2 param5, DearImguiSharp.ImVec2 param6, DearImguiSharp.ImVec2 param7, DearImguiSharp.ImVec2 param8, DearImguiSharp.ImVec2 param9, System.UInt32 param10);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "userTextureId">No documentation.</param>
        /// <param name = "pMin">No documentation.</param>
        /// <param name = "pMax">No documentation.</param>
        /// <param name = "uvMin">No documentation.</param>
        /// <param name = "uvMax">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <param name = "rounding">No documentation.</param>
        /// <param name = "roundingCorners">No documentation.</param>
        /// <unmanaged>void ImDrawList_AddImageRounded([In] ImDrawList* self,[In] void* user_texture_id,[In] const ImVec2 p_min,[In] const ImVec2 p_max,[In] const ImVec2 uv_min,[In] const ImVec2 uv_max,[In] unsigned int col,[In] float rounding,[In] int rounding_corners)</unmanaged>
        /// <unmanaged-short>ImDrawList_AddImageRounded</unmanaged-short>
        public static unsafe void ImDrawListAddImageRounded(ref DearImguiSharp.ImDrawList self, System.IntPtr userTextureId, DearImguiSharp.ImVec2 pMin, DearImguiSharp.ImVec2 pMax, DearImguiSharp.ImVec2 uvMin, DearImguiSharp.ImVec2 uvMax, System.UInt32 col, System.Single rounding, System.Int32 roundingCorners)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_AddImageRounded_(&self_, (void *)userTextureId, pMin, pMax, uvMin, uvMax, col, rounding, roundingCorners);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_AddImageRounded", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_AddImageRounded_(void *param0, void *param1, DearImguiSharp.ImVec2 param2, DearImguiSharp.ImVec2 param3, DearImguiSharp.ImVec2 param4, DearImguiSharp.ImVec2 param5, System.UInt32 param6, float param7, int param8);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImDrawList_PathClear([In] ImDrawList* self)</unmanaged>
        /// <unmanaged-short>ImDrawList_PathClear</unmanaged-short>
        public static unsafe void ImDrawListPathClear(ref DearImguiSharp.ImDrawList self)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_PathClear_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_PathClear", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_PathClear_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "pos">No documentation.</param>
        /// <unmanaged>void ImDrawList_PathLineTo([In] ImDrawList* self,[In] const ImVec2 pos)</unmanaged>
        /// <unmanaged-short>ImDrawList_PathLineTo</unmanaged-short>
        public static unsafe void ImDrawListPathLineTo(ref DearImguiSharp.ImDrawList self, DearImguiSharp.ImVec2 pos)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_PathLineTo_(&self_, pos);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_PathLineTo", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_PathLineTo_(void *param0, DearImguiSharp.ImVec2 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "pos">No documentation.</param>
        /// <unmanaged>void ImDrawList_PathLineToMergeDuplicate([In] ImDrawList* self,[In] const ImVec2 pos)</unmanaged>
        /// <unmanaged-short>ImDrawList_PathLineToMergeDuplicate</unmanaged-short>
        public static unsafe void ImDrawListPathLineToMergeDuplicate(ref DearImguiSharp.ImDrawList self, DearImguiSharp.ImVec2 pos)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_PathLineToMergeDuplicate_(&self_, pos);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_PathLineToMergeDuplicate", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_PathLineToMergeDuplicate_(void *param0, DearImguiSharp.ImVec2 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <unmanaged>void ImDrawList_PathFillConvex([In] ImDrawList* self,[In] unsigned int col)</unmanaged>
        /// <unmanaged-short>ImDrawList_PathFillConvex</unmanaged-short>
        public static unsafe void ImDrawListPathFillConvex(ref DearImguiSharp.ImDrawList self, System.UInt32 col)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_PathFillConvex_(&self_, col);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_PathFillConvex", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_PathFillConvex_(void *param0, System.UInt32 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <param name = "closed">No documentation.</param>
        /// <param name = "thickness">No documentation.</param>
        /// <unmanaged>void ImDrawList_PathStroke([In] ImDrawList* self,[In] unsigned int col,[In] bool closed,[In] float thickness)</unmanaged>
        /// <unmanaged-short>ImDrawList_PathStroke</unmanaged-short>
        public static unsafe void ImDrawListPathStroke(ref DearImguiSharp.ImDrawList self, System.UInt32 col, System.Boolean closed, System.Single thickness)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            System.Byte closed_;
            self.__MarshalTo(ref self_);
            closed_ = (System.Byte)(closed ? 1 : 0);
            ImDrawList_PathStroke_(&self_, col, closed_, thickness);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_PathStroke", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_PathStroke_(void *param0, System.UInt32 param1, System.Byte param2, float param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "center">No documentation.</param>
        /// <param name = "radius">No documentation.</param>
        /// <param name = "aMin">No documentation.</param>
        /// <param name = "aMax">No documentation.</param>
        /// <param name = "numSegments">No documentation.</param>
        /// <unmanaged>void ImDrawList_PathArcTo([In] ImDrawList* self,[In] const ImVec2 center,[In] float radius,[In] float a_min,[In] float a_max,[In] int num_segments)</unmanaged>
        /// <unmanaged-short>ImDrawList_PathArcTo</unmanaged-short>
        public static unsafe void ImDrawListPathArcTo(ref DearImguiSharp.ImDrawList self, DearImguiSharp.ImVec2 center, System.Single radius, System.Single aMin, System.Single aMax, System.Int32 numSegments)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_PathArcTo_(&self_, center, radius, aMin, aMax, numSegments);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_PathArcTo", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_PathArcTo_(void *param0, DearImguiSharp.ImVec2 param1, float param2, float param3, float param4, int param5);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "center">No documentation.</param>
        /// <param name = "radius">No documentation.</param>
        /// <param name = "aMinOf12">No documentation.</param>
        /// <param name = "aMaxOf12">No documentation.</param>
        /// <unmanaged>void ImDrawList_PathArcToFast([In] ImDrawList* self,[In] const ImVec2 center,[In] float radius,[In] int a_min_of_12,[In] int a_max_of_12)</unmanaged>
        /// <unmanaged-short>ImDrawList_PathArcToFast</unmanaged-short>
        public static unsafe void ImDrawListPathArcToFast(ref DearImguiSharp.ImDrawList self, DearImguiSharp.ImVec2 center, System.Single radius, System.Int32 aMinOf12, System.Int32 aMaxOf12)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_PathArcToFast_(&self_, center, radius, aMinOf12, aMaxOf12);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_PathArcToFast", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_PathArcToFast_(void *param0, DearImguiSharp.ImVec2 param1, float param2, int param3, int param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "p2">No documentation.</param>
        /// <param name = "p3">No documentation.</param>
        /// <param name = "p4">No documentation.</param>
        /// <param name = "numSegments">No documentation.</param>
        /// <unmanaged>void ImDrawList_PathBezierCurveTo([In] ImDrawList* self,[In] const ImVec2 p2,[In] const ImVec2 p3,[In] const ImVec2 p4,[In] int num_segments)</unmanaged>
        /// <unmanaged-short>ImDrawList_PathBezierCurveTo</unmanaged-short>
        public static unsafe void ImDrawListPathBezierCurveTo(ref DearImguiSharp.ImDrawList self, DearImguiSharp.ImVec2 p2, DearImguiSharp.ImVec2 p3, DearImguiSharp.ImVec2 p4, System.Int32 numSegments)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_PathBezierCurveTo_(&self_, p2, p3, p4, numSegments);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_PathBezierCurveTo", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_PathBezierCurveTo_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2, DearImguiSharp.ImVec2 param3, int param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "rectMin">No documentation.</param>
        /// <param name = "rectMax">No documentation.</param>
        /// <param name = "rounding">No documentation.</param>
        /// <param name = "roundingCorners">No documentation.</param>
        /// <unmanaged>void ImDrawList_PathRect([In] ImDrawList* self,[In] const ImVec2 rect_min,[In] const ImVec2 rect_max,[In] float rounding,[In] int rounding_corners)</unmanaged>
        /// <unmanaged-short>ImDrawList_PathRect</unmanaged-short>
        public static unsafe void ImDrawListPathRect(ref DearImguiSharp.ImDrawList self, DearImguiSharp.ImVec2 rectMin, DearImguiSharp.ImVec2 rectMax, System.Single rounding, System.Int32 roundingCorners)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_PathRect_(&self_, rectMin, rectMax, rounding, roundingCorners);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_PathRect", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_PathRect_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2, float param3, int param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "callback">No documentation.</param>
        /// <param name = "callbackData">No documentation.</param>
        /// <unmanaged>void ImDrawList_AddCallback([In] ImDrawList* self,[In] __function__stdcall* callback,[In] void* callback_data)</unmanaged>
        /// <unmanaged-short>ImDrawList_AddCallback</unmanaged-short>
        public static unsafe void ImDrawListAddCallback(ref DearImguiSharp.ImDrawList self, SharpGen.Runtime.FunctionCallback callback, System.IntPtr callbackData)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_AddCallback_(&self_, callback, (void *)callbackData);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_AddCallback", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_AddCallback_(void *param0, void *param1, void *param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImDrawList_AddDrawCmd([In] ImDrawList* self)</unmanaged>
        /// <unmanaged-short>ImDrawList_AddDrawCmd</unmanaged-short>
        public static unsafe void ImDrawListAddDrawCmd(ref DearImguiSharp.ImDrawList self)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_AddDrawCmd_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_AddDrawCmd", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_AddDrawCmd_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImDrawList* ImDrawList_CloneOutput([In] ImDrawList* self)</unmanaged>
        /// <unmanaged-short>ImDrawList_CloneOutput</unmanaged-short>
        public static unsafe DearImguiSharp.ImDrawList ImDrawListCloneOutput(ref DearImguiSharp.ImDrawList self)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            DearImguiSharp.ImDrawList __result__;
            DearImguiSharp.ImDrawList.__Native __result__native = default (DearImguiSharp.ImDrawList.__Native);
            __result__ = default (DearImguiSharp.ImDrawList);
            self.__MarshalTo(ref self_);
            ImDrawList_CloneOutput_(&__result__native, &self_);
            __result__.__MarshalFrom(ref __result__native);
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_CloneOutput", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImDrawList_CloneOutput_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "count">No documentation.</param>
        /// <unmanaged>void ImDrawList_ChannelsSplit([In] ImDrawList* self,[In] int count)</unmanaged>
        /// <unmanaged-short>ImDrawList_ChannelsSplit</unmanaged-short>
        public static unsafe void ImDrawListChannelsSplit(ref DearImguiSharp.ImDrawList self, System.Int32 count)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_ChannelsSplit_(&self_, count);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_ChannelsSplit", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_ChannelsSplit_(void *param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImDrawList_ChannelsMerge([In] ImDrawList* self)</unmanaged>
        /// <unmanaged-short>ImDrawList_ChannelsMerge</unmanaged-short>
        public static unsafe void ImDrawListChannelsMerge(ref DearImguiSharp.ImDrawList self)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_ChannelsMerge_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_ChannelsMerge", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_ChannelsMerge_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "n">No documentation.</param>
        /// <unmanaged>void ImDrawList_ChannelsSetCurrent([In] ImDrawList* self,[In] int n)</unmanaged>
        /// <unmanaged-short>ImDrawList_ChannelsSetCurrent</unmanaged-short>
        public static unsafe void ImDrawListChannelsSetCurrent(ref DearImguiSharp.ImDrawList self, System.Int32 n)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_ChannelsSetCurrent_(&self_, n);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_ChannelsSetCurrent", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_ChannelsSetCurrent_(void *param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImDrawList_Clear([In] ImDrawList* self)</unmanaged>
        /// <unmanaged-short>ImDrawList_Clear</unmanaged-short>
        public static unsafe void ImDrawListClear(ref DearImguiSharp.ImDrawList self)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_Clear_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_Clear", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_Clear_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImDrawList_ClearFreeMemory([In] ImDrawList* self)</unmanaged>
        /// <unmanaged-short>ImDrawList_ClearFreeMemory</unmanaged-short>
        public static unsafe void ImDrawListClearFreeMemory(ref DearImguiSharp.ImDrawList self)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_ClearFreeMemory_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_ClearFreeMemory", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_ClearFreeMemory_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "idxCount">No documentation.</param>
        /// <param name = "vtxCount">No documentation.</param>
        /// <unmanaged>void ImDrawList_PrimReserve([In] ImDrawList* self,[In] int idx_count,[In] int vtx_count)</unmanaged>
        /// <unmanaged-short>ImDrawList_PrimReserve</unmanaged-short>
        public static unsafe void ImDrawListPrimReserve(ref DearImguiSharp.ImDrawList self, System.Int32 idxCount, System.Int32 vtxCount)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_PrimReserve_(&self_, idxCount, vtxCount);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_PrimReserve", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_PrimReserve_(void *param0, int param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "idxCount">No documentation.</param>
        /// <param name = "vtxCount">No documentation.</param>
        /// <unmanaged>void ImDrawList_PrimUnreserve([In] ImDrawList* self,[In] int idx_count,[In] int vtx_count)</unmanaged>
        /// <unmanaged-short>ImDrawList_PrimUnreserve</unmanaged-short>
        public static unsafe void ImDrawListPrimUnreserve(ref DearImguiSharp.ImDrawList self, System.Int32 idxCount, System.Int32 vtxCount)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_PrimUnreserve_(&self_, idxCount, vtxCount);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_PrimUnreserve", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_PrimUnreserve_(void *param0, int param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "a">No documentation.</param>
        /// <param name = "b">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <unmanaged>void ImDrawList_PrimRect([In] ImDrawList* self,[In] const ImVec2 a,[In] const ImVec2 b,[In] unsigned int col)</unmanaged>
        /// <unmanaged-short>ImDrawList_PrimRect</unmanaged-short>
        public static unsafe void ImDrawListPrimRect(ref DearImguiSharp.ImDrawList self, DearImguiSharp.ImVec2 a, DearImguiSharp.ImVec2 b, System.UInt32 col)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_PrimRect_(&self_, a, b, col);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_PrimRect", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_PrimRect_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2, System.UInt32 param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "a">No documentation.</param>
        /// <param name = "b">No documentation.</param>
        /// <param name = "uvA">No documentation.</param>
        /// <param name = "uvB">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <unmanaged>void ImDrawList_PrimRectUV([In] ImDrawList* self,[In] const ImVec2 a,[In] const ImVec2 b,[In] const ImVec2 uv_a,[In] const ImVec2 uv_b,[In] unsigned int col)</unmanaged>
        /// <unmanaged-short>ImDrawList_PrimRectUV</unmanaged-short>
        public static unsafe void ImDrawListPrimRectUV(ref DearImguiSharp.ImDrawList self, DearImguiSharp.ImVec2 a, DearImguiSharp.ImVec2 b, DearImguiSharp.ImVec2 uvA, DearImguiSharp.ImVec2 uvB, System.UInt32 col)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_PrimRectUV_(&self_, a, b, uvA, uvB, col);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_PrimRectUV", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_PrimRectUV_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2, DearImguiSharp.ImVec2 param3, DearImguiSharp.ImVec2 param4, System.UInt32 param5);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "a">No documentation.</param>
        /// <param name = "b">No documentation.</param>
        /// <param name = "c">No documentation.</param>
        /// <param name = "d">No documentation.</param>
        /// <param name = "uvA">No documentation.</param>
        /// <param name = "uvB">No documentation.</param>
        /// <param name = "uvC">No documentation.</param>
        /// <param name = "uvD">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <unmanaged>void ImDrawList_PrimQuadUV([In] ImDrawList* self,[In] const ImVec2 a,[In] const ImVec2 b,[In] const ImVec2 c,[In] const ImVec2 d,[In] const ImVec2 uv_a,[In] const ImVec2 uv_b,[In] const ImVec2 uv_c,[In] const ImVec2 uv_d,[In] unsigned int col)</unmanaged>
        /// <unmanaged-short>ImDrawList_PrimQuadUV</unmanaged-short>
        public static unsafe void ImDrawListPrimQuadUV(ref DearImguiSharp.ImDrawList self, DearImguiSharp.ImVec2 a, DearImguiSharp.ImVec2 b, DearImguiSharp.ImVec2 c, DearImguiSharp.ImVec2 d, DearImguiSharp.ImVec2 uvA, DearImguiSharp.ImVec2 uvB, DearImguiSharp.ImVec2 uvC, DearImguiSharp.ImVec2 uvD, System.UInt32 col)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_PrimQuadUV_(&self_, a, b, c, d, uvA, uvB, uvC, uvD, col);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_PrimQuadUV", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_PrimQuadUV_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2, DearImguiSharp.ImVec2 param3, DearImguiSharp.ImVec2 param4, DearImguiSharp.ImVec2 param5, DearImguiSharp.ImVec2 param6, DearImguiSharp.ImVec2 param7, DearImguiSharp.ImVec2 param8, System.UInt32 param9);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "pos">No documentation.</param>
        /// <param name = "uv">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <unmanaged>void ImDrawList_PrimWriteVtx([In] ImDrawList* self,[In] const ImVec2 pos,[In] const ImVec2 uv,[In] unsigned int col)</unmanaged>
        /// <unmanaged-short>ImDrawList_PrimWriteVtx</unmanaged-short>
        public static unsafe void ImDrawListPrimWriteVtx(ref DearImguiSharp.ImDrawList self, DearImguiSharp.ImVec2 pos, DearImguiSharp.ImVec2 uv, System.UInt32 col)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_PrimWriteVtx_(&self_, pos, uv, col);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_PrimWriteVtx", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_PrimWriteVtx_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2, System.UInt32 param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "idx">No documentation.</param>
        /// <unmanaged>void ImDrawList_PrimWriteIdx([In] ImDrawList* self,[In] unsigned short idx)</unmanaged>
        /// <unmanaged-short>ImDrawList_PrimWriteIdx</unmanaged-short>
        public static unsafe void ImDrawListPrimWriteIdx(ref DearImguiSharp.ImDrawList self, System.UInt16 idx)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_PrimWriteIdx_(&self_, idx);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_PrimWriteIdx", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_PrimWriteIdx_(void *param0, System.UInt16 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "pos">No documentation.</param>
        /// <param name = "uv">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <unmanaged>void ImDrawList_PrimVtx([In] ImDrawList* self,[In] const ImVec2 pos,[In] const ImVec2 uv,[In] unsigned int col)</unmanaged>
        /// <unmanaged-short>ImDrawList_PrimVtx</unmanaged-short>
        public static unsafe void ImDrawListPrimVtx(ref DearImguiSharp.ImDrawList self, DearImguiSharp.ImVec2 pos, DearImguiSharp.ImVec2 uv, System.UInt32 col)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_PrimVtx_(&self_, pos, uv, col);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_PrimVtx", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_PrimVtx_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2, System.UInt32 param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImDrawList_UpdateClipRect([In] ImDrawList* self)</unmanaged>
        /// <unmanaged-short>ImDrawList_UpdateClipRect</unmanaged-short>
        public static unsafe void ImDrawListUpdateClipRect(ref DearImguiSharp.ImDrawList self)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_UpdateClipRect_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_UpdateClipRect", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_UpdateClipRect_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImDrawList_UpdateTextureID([In] ImDrawList* self)</unmanaged>
        /// <unmanaged-short>ImDrawList_UpdateTextureID</unmanaged-short>
        public static unsafe void ImDrawListUpdateTextureID(ref DearImguiSharp.ImDrawList self)
        {
            DearImguiSharp.ImDrawList.__Native self_ = default (DearImguiSharp.ImDrawList.__Native);
            self.__MarshalTo(ref self_);
            ImDrawList_UpdateTextureID_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawList_UpdateTextureID", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawList_UpdateTextureID_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImDrawData* ImDrawData_ImDrawData()</unmanaged>
        /// <unmanaged-short>ImDrawData_ImDrawData</unmanaged-short>
        public static unsafe DearImguiSharp.ImDrawData ImDrawDataImDrawData()
        {
            DearImguiSharp.ImDrawData __result__;
            ImDrawData_ImDrawData_(&__result__);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawData_ImDrawData", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImDrawData_ImDrawData_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImDrawData_destroy([In] ImDrawData* self)</unmanaged>
        /// <unmanaged-short>ImDrawData_destroy</unmanaged-short>
        public static unsafe void ImDrawDataDestroy(ref DearImguiSharp.ImDrawData self)
        {
            fixed (void *self_ = &self)
                ImDrawData_destroy_(self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawData_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawData_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImDrawData_Clear([In] ImDrawData* self)</unmanaged>
        /// <unmanaged-short>ImDrawData_Clear</unmanaged-short>
        public static unsafe void ImDrawDataClear(ref DearImguiSharp.ImDrawData self)
        {
            fixed (void *self_ = &self)
                ImDrawData_Clear_(self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawData_Clear", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawData_Clear_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImDrawData_DeIndexAllBuffers([In] ImDrawData* self)</unmanaged>
        /// <unmanaged-short>ImDrawData_DeIndexAllBuffers</unmanaged-short>
        public static unsafe void ImDrawDataDeIndexAllBuffers(ref DearImguiSharp.ImDrawData self)
        {
            fixed (void *self_ = &self)
                ImDrawData_DeIndexAllBuffers_(self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawData_DeIndexAllBuffers", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawData_DeIndexAllBuffers_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "fbScale">No documentation.</param>
        /// <unmanaged>void ImDrawData_ScaleClipRects([In] ImDrawData* self,[In] const ImVec2 fb_scale)</unmanaged>
        /// <unmanaged-short>ImDrawData_ScaleClipRects</unmanaged-short>
        public static unsafe void ImDrawDataScaleClipRects(ref DearImguiSharp.ImDrawData self, DearImguiSharp.ImVec2 fbScale)
        {
            fixed (void *self_ = &self)
                ImDrawData_ScaleClipRects_(self_, fbScale);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawData_ScaleClipRects", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawData_ScaleClipRects_(void *param0, DearImguiSharp.ImVec2 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImFontConfig* ImFontConfig_ImFontConfig()</unmanaged>
        /// <unmanaged-short>ImFontConfig_ImFontConfig</unmanaged-short>
        public static unsafe DearImguiSharp.ImFontConfig ImFontConfigImFontConfig()
        {
            DearImguiSharp.ImFontConfig __result__;
            DearImguiSharp.ImFontConfig.__Native __result__native = default (DearImguiSharp.ImFontConfig.__Native);
            __result__ = default (DearImguiSharp.ImFontConfig);
            ImFontConfig_ImFontConfig_(&__result__native);
            __result__.__MarshalFrom(ref __result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontConfig_ImFontConfig", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImFontConfig_ImFontConfig_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImFontConfig_destroy([In] ImFontConfig* self)</unmanaged>
        /// <unmanaged-short>ImFontConfig_destroy</unmanaged-short>
        public static unsafe void ImFontConfigDestroy(ref DearImguiSharp.ImFontConfig self)
        {
            DearImguiSharp.ImFontConfig.__Native self_ = default (DearImguiSharp.ImFontConfig.__Native);
            self.__MarshalTo(ref self_);
            ImFontConfig_destroy_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontConfig_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImFontConfig_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImFontGlyphRangesBuilder* ImFontGlyphRangesBuilder_ImFontGlyphRangesBuilder()</unmanaged>
        /// <unmanaged-short>ImFontGlyphRangesBuilder_ImFontGlyphRangesBuilder</unmanaged-short>
        public static unsafe DearImguiSharp.ImFontGlyphRangesBuilder ImFontGlyphRangesBuilderImFontGlyphRangesBuilder()
        {
            DearImguiSharp.ImFontGlyphRangesBuilder __result__;
            ImFontGlyphRangesBuilder_ImFontGlyphRangesBuilder_(&__result__);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontGlyphRangesBuilder_ImFontGlyphRangesBuilder", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImFontGlyphRangesBuilder_ImFontGlyphRangesBuilder_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImFontGlyphRangesBuilder_destroy([In] ImFontGlyphRangesBuilder* self)</unmanaged>
        /// <unmanaged-short>ImFontGlyphRangesBuilder_destroy</unmanaged-short>
        public static unsafe void ImFontGlyphRangesBuilderDestroy(DearImguiSharp.ImFontGlyphRangesBuilder self)
        {
            ImFontGlyphRangesBuilder_destroy_(&self);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontGlyphRangesBuilder_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImFontGlyphRangesBuilder_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImFontGlyphRangesBuilder_Clear([In] ImFontGlyphRangesBuilder* self)</unmanaged>
        /// <unmanaged-short>ImFontGlyphRangesBuilder_Clear</unmanaged-short>
        public static unsafe void ImFontGlyphRangesBuilderClear(DearImguiSharp.ImFontGlyphRangesBuilder self)
        {
            ImFontGlyphRangesBuilder_Clear_(&self);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontGlyphRangesBuilder_Clear", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImFontGlyphRangesBuilder_Clear_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "n">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool ImFontGlyphRangesBuilder_GetBit([In] ImFontGlyphRangesBuilder* self,[In] int n)</unmanaged>
        /// <unmanaged-short>ImFontGlyphRangesBuilder_GetBit</unmanaged-short>
        public static unsafe System.Boolean ImFontGlyphRangesBuilderGetBit(DearImguiSharp.ImFontGlyphRangesBuilder self, System.Int32 n)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = ImFontGlyphRangesBuilder_GetBit_(&self, n);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontGlyphRangesBuilder_GetBit", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte ImFontGlyphRangesBuilder_GetBit_(void *param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "n">No documentation.</param>
        /// <unmanaged>void ImFontGlyphRangesBuilder_SetBit([In] ImFontGlyphRangesBuilder* self,[In] int n)</unmanaged>
        /// <unmanaged-short>ImFontGlyphRangesBuilder_SetBit</unmanaged-short>
        public static unsafe void ImFontGlyphRangesBuilderSetBit(DearImguiSharp.ImFontGlyphRangesBuilder self, System.Int32 n)
        {
            ImFontGlyphRangesBuilder_SetBit_(&self, n);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontGlyphRangesBuilder_SetBit", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImFontGlyphRangesBuilder_SetBit_(void *param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "c">No documentation.</param>
        /// <unmanaged>void ImFontGlyphRangesBuilder_AddChar([In] ImFontGlyphRangesBuilder* self,[In] unsigned short c)</unmanaged>
        /// <unmanaged-short>ImFontGlyphRangesBuilder_AddChar</unmanaged-short>
        public static unsafe void ImFontGlyphRangesBuilderAddChar(DearImguiSharp.ImFontGlyphRangesBuilder self, System.UInt16 c)
        {
            ImFontGlyphRangesBuilder_AddChar_(&self, c);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontGlyphRangesBuilder_AddChar", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImFontGlyphRangesBuilder_AddChar_(void *param0, System.UInt16 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "text">No documentation.</param>
        /// <param name = "textEnd">No documentation.</param>
        /// <unmanaged>void ImFontGlyphRangesBuilder_AddText([In] ImFontGlyphRangesBuilder* self,[In] const char* text,[In] const char* text_end)</unmanaged>
        /// <unmanaged-short>ImFontGlyphRangesBuilder_AddText</unmanaged-short>
        public static unsafe void ImFontGlyphRangesBuilderAddText(DearImguiSharp.ImFontGlyphRangesBuilder self, System.String text, System.String textEnd)
        {
            System.IntPtr text_;
            System.IntPtr textEnd_;
            text_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(text);
            textEnd_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(textEnd);
            ImFontGlyphRangesBuilder_AddText_(&self, (void *)text_, (void *)textEnd_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(text_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(textEnd_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontGlyphRangesBuilder_AddText", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImFontGlyphRangesBuilder_AddText_(void *param0, void *param1, void *param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "ranges">No documentation.</param>
        /// <unmanaged>void ImFontGlyphRangesBuilder_AddRanges([In] ImFontGlyphRangesBuilder* self,[In] const unsigned short* ranges)</unmanaged>
        /// <unmanaged-short>ImFontGlyphRangesBuilder_AddRanges</unmanaged-short>
        public static unsafe void ImFontGlyphRangesBuilderAddRanges(DearImguiSharp.ImFontGlyphRangesBuilder self, System.UInt16 ranges)
        {
            ImFontGlyphRangesBuilder_AddRanges_(&self, &ranges);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontGlyphRangesBuilder_AddRanges", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImFontGlyphRangesBuilder_AddRanges_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "outRanges">No documentation.</param>
        /// <unmanaged>void ImFontGlyphRangesBuilder_BuildRanges([In] ImFontGlyphRangesBuilder* self,[In] ImVector_ImWchar* out_ranges)</unmanaged>
        /// <unmanaged-short>ImFontGlyphRangesBuilder_BuildRanges</unmanaged-short>
        public static unsafe void ImFontGlyphRangesBuilderBuildRanges(DearImguiSharp.ImFontGlyphRangesBuilder self, DearImguiSharp.ImVectorImWchar outRanges)
        {
            ImFontGlyphRangesBuilder_BuildRanges_(&self, &outRanges);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontGlyphRangesBuilder_BuildRanges", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImFontGlyphRangesBuilder_BuildRanges_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImFontAtlasCustomRect* ImFontAtlasCustomRect_ImFontAtlasCustomRect()</unmanaged>
        /// <unmanaged-short>ImFontAtlasCustomRect_ImFontAtlasCustomRect</unmanaged-short>
        public static unsafe DearImguiSharp.ImFontAtlasCustomRect ImFontAtlasCustomRectImFontAtlasCustomRect()
        {
            DearImguiSharp.ImFontAtlasCustomRect __result__;
            ImFontAtlasCustomRect_ImFontAtlasCustomRect_(&__result__);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontAtlasCustomRect_ImFontAtlasCustomRect", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImFontAtlasCustomRect_ImFontAtlasCustomRect_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImFontAtlasCustomRect_destroy([In] ImFontAtlasCustomRect* self)</unmanaged>
        /// <unmanaged-short>ImFontAtlasCustomRect_destroy</unmanaged-short>
        public static unsafe void ImFontAtlasCustomRectDestroy(ref DearImguiSharp.ImFontAtlasCustomRect self)
        {
            fixed (void *self_ = &self)
                ImFontAtlasCustomRect_destroy_(self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontAtlasCustomRect_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImFontAtlasCustomRect_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool ImFontAtlasCustomRect_IsPacked([In] ImFontAtlasCustomRect* self)</unmanaged>
        /// <unmanaged-short>ImFontAtlasCustomRect_IsPacked</unmanaged-short>
        public static unsafe System.Boolean ImFontAtlasCustomRectIsPacked(ref DearImguiSharp.ImFontAtlasCustomRect self)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            fixed (void *self_ = &self)
                __result__native = ImFontAtlasCustomRect_IsPacked_(self_);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontAtlasCustomRect_IsPacked", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte ImFontAtlasCustomRect_IsPacked_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImFontAtlas* ImFontAtlas_ImFontAtlas()</unmanaged>
        /// <unmanaged-short>ImFontAtlas_ImFontAtlas</unmanaged-short>
        public static unsafe DearImguiSharp.ImFontAtlas ImFontAtlasImFontAtlas()
        {
            DearImguiSharp.ImFontAtlas __result__;
            DearImguiSharp.ImFontAtlas.__Native __result__native = default (DearImguiSharp.ImFontAtlas.__Native);
            __result__ = default (DearImguiSharp.ImFontAtlas);
            ImFontAtlas_ImFontAtlas_(&__result__native);
            __result__.__MarshalFrom(ref __result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontAtlas_ImFontAtlas", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImFontAtlas_ImFontAtlas_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImFontAtlas_destroy([In] ImFontAtlas* self)</unmanaged>
        /// <unmanaged-short>ImFontAtlas_destroy</unmanaged-short>
        public static unsafe void ImFontAtlasDestroy(ref DearImguiSharp.ImFontAtlas self)
        {
            DearImguiSharp.ImFontAtlas.__Native self_ = default (DearImguiSharp.ImFontAtlas.__Native);
            self.__MarshalTo(ref self_);
            ImFontAtlas_destroy_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontAtlas_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImFontAtlas_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "fontCfg">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImFont* ImFontAtlas_AddFont([In] ImFontAtlas* self,[In] const ImFontConfig* font_cfg)</unmanaged>
        /// <unmanaged-short>ImFontAtlas_AddFont</unmanaged-short>
        public static unsafe DearImguiSharp.ImFont ImFontAtlasAddFont(ref DearImguiSharp.ImFontAtlas self, ref DearImguiSharp.ImFontConfig fontCfg)
        {
            DearImguiSharp.ImFontAtlas.__Native self_ = default (DearImguiSharp.ImFontAtlas.__Native);
            DearImguiSharp.ImFontConfig.__Native fontCfg_ = default (DearImguiSharp.ImFontConfig.__Native);
            DearImguiSharp.ImFont __result__;
            self.__MarshalTo(ref self_);
            fontCfg.__MarshalTo(ref fontCfg_);
            ImFontAtlas_AddFont_(&__result__, &self_, &fontCfg_);
            self.__MarshalFree(ref self_);
            fontCfg.__MarshalFree(ref fontCfg_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontAtlas_AddFont", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImFontAtlas_AddFont_(void *param0, void *param1, void *param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "fontCfg">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImFont* ImFontAtlas_AddFontDefault([In] ImFontAtlas* self,[In] const ImFontConfig* font_cfg)</unmanaged>
        /// <unmanaged-short>ImFontAtlas_AddFontDefault</unmanaged-short>
        public static unsafe DearImguiSharp.ImFont ImFontAtlasAddFontDefault(ref DearImguiSharp.ImFontAtlas self, ref DearImguiSharp.ImFontConfig fontCfg)
        {
            DearImguiSharp.ImFontAtlas.__Native self_ = default (DearImguiSharp.ImFontAtlas.__Native);
            DearImguiSharp.ImFontConfig.__Native fontCfg_ = default (DearImguiSharp.ImFontConfig.__Native);
            DearImguiSharp.ImFont __result__;
            self.__MarshalTo(ref self_);
            fontCfg.__MarshalTo(ref fontCfg_);
            ImFontAtlas_AddFontDefault_(&__result__, &self_, &fontCfg_);
            self.__MarshalFree(ref self_);
            fontCfg.__MarshalFree(ref fontCfg_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontAtlas_AddFontDefault", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImFontAtlas_AddFontDefault_(void *param0, void *param1, void *param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "filename">No documentation.</param>
        /// <param name = "sizePixels">No documentation.</param>
        /// <param name = "fontCfg">No documentation.</param>
        /// <param name = "glyphRanges">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImFont* ImFontAtlas_AddFontFromFileTTF([In] ImFontAtlas* self,[In] const char* filename,[In] float size_pixels,[In] const ImFontConfig* font_cfg,[In] const unsigned short* glyph_ranges)</unmanaged>
        /// <unmanaged-short>ImFontAtlas_AddFontFromFileTTF</unmanaged-short>
        public static unsafe DearImguiSharp.ImFont ImFontAtlasAddFontFromFileTTF(ref DearImguiSharp.ImFontAtlas self, System.String filename, System.Single sizePixels, ref DearImguiSharp.ImFontConfig fontCfg, System.UInt16 glyphRanges)
        {
            DearImguiSharp.ImFontAtlas.__Native self_ = default (DearImguiSharp.ImFontAtlas.__Native);
            System.IntPtr filename_;
            DearImguiSharp.ImFontConfig.__Native fontCfg_ = default (DearImguiSharp.ImFontConfig.__Native);
            DearImguiSharp.ImFont __result__;
            self.__MarshalTo(ref self_);
            filename_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(filename);
            fontCfg.__MarshalTo(ref fontCfg_);
            ImFontAtlas_AddFontFromFileTTF_(&__result__, &self_, (void *)filename_, sizePixels, &fontCfg_, &glyphRanges);
            self.__MarshalFree(ref self_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(filename_);
            fontCfg.__MarshalFree(ref fontCfg_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontAtlas_AddFontFromFileTTF", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImFontAtlas_AddFontFromFileTTF_(void *param0, void *param1, void *param2, float param3, void *param4, void *param5);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "fontData">No documentation.</param>
        /// <param name = "fontSize">No documentation.</param>
        /// <param name = "sizePixels">No documentation.</param>
        /// <param name = "fontCfg">No documentation.</param>
        /// <param name = "glyphRanges">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImFont* ImFontAtlas_AddFontFromMemoryTTF([In] ImFontAtlas* self,[In] void* font_data,[In] int font_size,[In] float size_pixels,[In] const ImFontConfig* font_cfg,[In] const unsigned short* glyph_ranges)</unmanaged>
        /// <unmanaged-short>ImFontAtlas_AddFontFromMemoryTTF</unmanaged-short>
        public static unsafe DearImguiSharp.ImFont ImFontAtlasAddFontFromMemoryTTF(ref DearImguiSharp.ImFontAtlas self, System.IntPtr fontData, System.Int32 fontSize, System.Single sizePixels, ref DearImguiSharp.ImFontConfig fontCfg, System.UInt16 glyphRanges)
        {
            DearImguiSharp.ImFontAtlas.__Native self_ = default (DearImguiSharp.ImFontAtlas.__Native);
            DearImguiSharp.ImFontConfig.__Native fontCfg_ = default (DearImguiSharp.ImFontConfig.__Native);
            DearImguiSharp.ImFont __result__;
            self.__MarshalTo(ref self_);
            fontCfg.__MarshalTo(ref fontCfg_);
            ImFontAtlas_AddFontFromMemoryTTF_(&__result__, &self_, (void *)fontData, fontSize, sizePixels, &fontCfg_, &glyphRanges);
            self.__MarshalFree(ref self_);
            fontCfg.__MarshalFree(ref fontCfg_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontAtlas_AddFontFromMemoryTTF", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImFontAtlas_AddFontFromMemoryTTF_(void *param0, void *param1, void *param2, int param3, float param4, void *param5, void *param6);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "compressedFontData">No documentation.</param>
        /// <param name = "compressedFontSize">No documentation.</param>
        /// <param name = "sizePixels">No documentation.</param>
        /// <param name = "fontCfg">No documentation.</param>
        /// <param name = "glyphRanges">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImFont* ImFontAtlas_AddFontFromMemoryCompressedTTF([In] ImFontAtlas* self,[In] const void* compressed_font_data,[In] int compressed_font_size,[In] float size_pixels,[In] const ImFontConfig* font_cfg,[In] const unsigned short* glyph_ranges)</unmanaged>
        /// <unmanaged-short>ImFontAtlas_AddFontFromMemoryCompressedTTF</unmanaged-short>
        public static unsafe DearImguiSharp.ImFont ImFontAtlasAddFontFromMemoryCompressedTTF(ref DearImguiSharp.ImFontAtlas self, System.IntPtr compressedFontData, System.Int32 compressedFontSize, System.Single sizePixels, ref DearImguiSharp.ImFontConfig fontCfg, System.UInt16 glyphRanges)
        {
            DearImguiSharp.ImFontAtlas.__Native self_ = default (DearImguiSharp.ImFontAtlas.__Native);
            DearImguiSharp.ImFontConfig.__Native fontCfg_ = default (DearImguiSharp.ImFontConfig.__Native);
            DearImguiSharp.ImFont __result__;
            self.__MarshalTo(ref self_);
            fontCfg.__MarshalTo(ref fontCfg_);
            ImFontAtlas_AddFontFromMemoryCompressedTTF_(&__result__, &self_, (void *)compressedFontData, compressedFontSize, sizePixels, &fontCfg_, &glyphRanges);
            self.__MarshalFree(ref self_);
            fontCfg.__MarshalFree(ref fontCfg_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontAtlas_AddFontFromMemoryCompressedTTF", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImFontAtlas_AddFontFromMemoryCompressedTTF_(void *param0, void *param1, void *param2, int param3, float param4, void *param5, void *param6);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "compressedFontDataBase85">No documentation.</param>
        /// <param name = "sizePixels">No documentation.</param>
        /// <param name = "fontCfg">No documentation.</param>
        /// <param name = "glyphRanges">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImFont* ImFontAtlas_AddFontFromMemoryCompressedBase85TTF([In] ImFontAtlas* self,[In] const char* compressed_font_data_base85,[In] float size_pixels,[In] const ImFontConfig* font_cfg,[In] const unsigned short* glyph_ranges)</unmanaged>
        /// <unmanaged-short>ImFontAtlas_AddFontFromMemoryCompressedBase85TTF</unmanaged-short>
        public static unsafe DearImguiSharp.ImFont ImFontAtlasAddFontFromMemoryCompressedBase85TTF(ref DearImguiSharp.ImFontAtlas self, System.String compressedFontDataBase85, System.Single sizePixels, ref DearImguiSharp.ImFontConfig fontCfg, System.UInt16 glyphRanges)
        {
            DearImguiSharp.ImFontAtlas.__Native self_ = default (DearImguiSharp.ImFontAtlas.__Native);
            System.IntPtr compressedFontDataBase85_;
            DearImguiSharp.ImFontConfig.__Native fontCfg_ = default (DearImguiSharp.ImFontConfig.__Native);
            DearImguiSharp.ImFont __result__;
            self.__MarshalTo(ref self_);
            compressedFontDataBase85_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(compressedFontDataBase85);
            fontCfg.__MarshalTo(ref fontCfg_);
            ImFontAtlas_AddFontFromMemoryCompressedBase85TTF_(&__result__, &self_, (void *)compressedFontDataBase85_, sizePixels, &fontCfg_, &glyphRanges);
            self.__MarshalFree(ref self_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(compressedFontDataBase85_);
            fontCfg.__MarshalFree(ref fontCfg_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontAtlas_AddFontFromMemoryCompressedBase85TTF", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImFontAtlas_AddFontFromMemoryCompressedBase85TTF_(void *param0, void *param1, void *param2, float param3, void *param4, void *param5);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImFontAtlas_ClearInputData([In] ImFontAtlas* self)</unmanaged>
        /// <unmanaged-short>ImFontAtlas_ClearInputData</unmanaged-short>
        public static unsafe void ImFontAtlasClearInputData(ref DearImguiSharp.ImFontAtlas self)
        {
            DearImguiSharp.ImFontAtlas.__Native self_ = default (DearImguiSharp.ImFontAtlas.__Native);
            self.__MarshalTo(ref self_);
            ImFontAtlas_ClearInputData_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontAtlas_ClearInputData", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImFontAtlas_ClearInputData_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImFontAtlas_ClearTexData([In] ImFontAtlas* self)</unmanaged>
        /// <unmanaged-short>ImFontAtlas_ClearTexData</unmanaged-short>
        public static unsafe void ImFontAtlasClearTexData(ref DearImguiSharp.ImFontAtlas self)
        {
            DearImguiSharp.ImFontAtlas.__Native self_ = default (DearImguiSharp.ImFontAtlas.__Native);
            self.__MarshalTo(ref self_);
            ImFontAtlas_ClearTexData_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontAtlas_ClearTexData", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImFontAtlas_ClearTexData_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImFontAtlas_ClearFonts([In] ImFontAtlas* self)</unmanaged>
        /// <unmanaged-short>ImFontAtlas_ClearFonts</unmanaged-short>
        public static unsafe void ImFontAtlasClearFonts(ref DearImguiSharp.ImFontAtlas self)
        {
            DearImguiSharp.ImFontAtlas.__Native self_ = default (DearImguiSharp.ImFontAtlas.__Native);
            self.__MarshalTo(ref self_);
            ImFontAtlas_ClearFonts_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontAtlas_ClearFonts", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImFontAtlas_ClearFonts_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImFontAtlas_Clear([In] ImFontAtlas* self)</unmanaged>
        /// <unmanaged-short>ImFontAtlas_Clear</unmanaged-short>
        public static unsafe void ImFontAtlasClear(ref DearImguiSharp.ImFontAtlas self)
        {
            DearImguiSharp.ImFontAtlas.__Native self_ = default (DearImguiSharp.ImFontAtlas.__Native);
            self.__MarshalTo(ref self_);
            ImFontAtlas_Clear_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontAtlas_Clear", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImFontAtlas_Clear_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool ImFontAtlas_Build([In] ImFontAtlas* self)</unmanaged>
        /// <unmanaged-short>ImFontAtlas_Build</unmanaged-short>
        public static unsafe System.Boolean ImFontAtlasBuild(ref DearImguiSharp.ImFontAtlas self)
        {
            DearImguiSharp.ImFontAtlas.__Native self_ = default (DearImguiSharp.ImFontAtlas.__Native);
            System.Boolean __result__;
            System.Byte __result__native;
            self.__MarshalTo(ref self_);
            __result__native = ImFontAtlas_Build_(&self_);
            __result__ = __result__native != 0;
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontAtlas_Build", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte ImFontAtlas_Build_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "outPixels">No documentation.</param>
        /// <param name = "outWidth">No documentation.</param>
        /// <param name = "outHeight">No documentation.</param>
        /// <param name = "outBytesPerPixel">No documentation.</param>
        /// <unmanaged>void ImFontAtlas_GetTexDataAsAlpha8([In] ImFontAtlas* self,[In] unsigned char** out_pixels,[In] int* out_width,[In] int* out_height,[In] int* out_bytes_per_pixel)</unmanaged>
        /// <unmanaged-short>ImFontAtlas_GetTexDataAsAlpha8</unmanaged-short>
        public static unsafe void ImFontAtlasGetTexDataAsAlpha8(ref DearImguiSharp.ImFontAtlas self, System.Byte outPixels, System.Int32 outWidth, System.Int32 outHeight, System.Int32 outBytesPerPixel)
        {
            DearImguiSharp.ImFontAtlas.__Native self_ = default (DearImguiSharp.ImFontAtlas.__Native);
            self.__MarshalTo(ref self_);
            ImFontAtlas_GetTexDataAsAlpha8_(&self_, &outPixels, &outWidth, &outHeight, &outBytesPerPixel);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontAtlas_GetTexDataAsAlpha8", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImFontAtlas_GetTexDataAsAlpha8_(void *param0, void *param1, void *param2, void *param3, void *param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "outPixels">No documentation.</param>
        /// <param name = "outWidth">No documentation.</param>
        /// <param name = "outHeight">No documentation.</param>
        /// <param name = "outBytesPerPixel">No documentation.</param>
        /// <unmanaged>void ImFontAtlas_GetTexDataAsRGBA32([In] ImFontAtlas* self,[In] unsigned char** out_pixels,[In] int* out_width,[In] int* out_height,[In] int* out_bytes_per_pixel)</unmanaged>
        /// <unmanaged-short>ImFontAtlas_GetTexDataAsRGBA32</unmanaged-short>
        public static unsafe void ImFontAtlasGetTexDataAsRGBA32(ref DearImguiSharp.ImFontAtlas self, System.Byte outPixels, System.Int32 outWidth, System.Int32 outHeight, System.Int32 outBytesPerPixel)
        {
            DearImguiSharp.ImFontAtlas.__Native self_ = default (DearImguiSharp.ImFontAtlas.__Native);
            self.__MarshalTo(ref self_);
            ImFontAtlas_GetTexDataAsRGBA32_(&self_, &outPixels, &outWidth, &outHeight, &outBytesPerPixel);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontAtlas_GetTexDataAsRGBA32", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImFontAtlas_GetTexDataAsRGBA32_(void *param0, void *param1, void *param2, void *param3, void *param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool ImFontAtlas_IsBuilt([In] ImFontAtlas* self)</unmanaged>
        /// <unmanaged-short>ImFontAtlas_IsBuilt</unmanaged-short>
        public static unsafe System.Boolean ImFontAtlasIsBuilt(ref DearImguiSharp.ImFontAtlas self)
        {
            DearImguiSharp.ImFontAtlas.__Native self_ = default (DearImguiSharp.ImFontAtlas.__Native);
            System.Boolean __result__;
            System.Byte __result__native;
            self.__MarshalTo(ref self_);
            __result__native = ImFontAtlas_IsBuilt_(&self_);
            __result__ = __result__native != 0;
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontAtlas_IsBuilt", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte ImFontAtlas_IsBuilt_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "id">No documentation.</param>
        /// <unmanaged>void ImFontAtlas_SetTexID([In] ImFontAtlas* self,[In] void* id)</unmanaged>
        /// <unmanaged-short>ImFontAtlas_SetTexID</unmanaged-short>
        public static unsafe void ImFontAtlasSetTexID(ref DearImguiSharp.ImFontAtlas self, System.IntPtr id)
        {
            DearImguiSharp.ImFontAtlas.__Native self_ = default (DearImguiSharp.ImFontAtlas.__Native);
            self.__MarshalTo(ref self_);
            ImFontAtlas_SetTexID_(&self_, (void *)id);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontAtlas_SetTexID", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImFontAtlas_SetTexID_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>const unsigned short* ImFontAtlas_GetGlyphRangesDefault([In] ImFontAtlas* self)</unmanaged>
        /// <unmanaged-short>ImFontAtlas_GetGlyphRangesDefault</unmanaged-short>
        public static unsafe System.UInt16 ImFontAtlasGetGlyphRangesDefault(ref DearImguiSharp.ImFontAtlas self)
        {
            DearImguiSharp.ImFontAtlas.__Native self_ = default (DearImguiSharp.ImFontAtlas.__Native);
            System.UInt16 __result__;
            self.__MarshalTo(ref self_);
            __result__ = ImFontAtlas_GetGlyphRangesDefault_(&self_);
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontAtlas_GetGlyphRangesDefault", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt16 ImFontAtlas_GetGlyphRangesDefault_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>const unsigned short* ImFontAtlas_GetGlyphRangesKorean([In] ImFontAtlas* self)</unmanaged>
        /// <unmanaged-short>ImFontAtlas_GetGlyphRangesKorean</unmanaged-short>
        public static unsafe System.UInt16 ImFontAtlasGetGlyphRangesKorean(ref DearImguiSharp.ImFontAtlas self)
        {
            DearImguiSharp.ImFontAtlas.__Native self_ = default (DearImguiSharp.ImFontAtlas.__Native);
            System.UInt16 __result__;
            self.__MarshalTo(ref self_);
            __result__ = ImFontAtlas_GetGlyphRangesKorean_(&self_);
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontAtlas_GetGlyphRangesKorean", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt16 ImFontAtlas_GetGlyphRangesKorean_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>const unsigned short* ImFontAtlas_GetGlyphRangesJapanese([In] ImFontAtlas* self)</unmanaged>
        /// <unmanaged-short>ImFontAtlas_GetGlyphRangesJapanese</unmanaged-short>
        public static unsafe System.UInt16 ImFontAtlasGetGlyphRangesJapanese(ref DearImguiSharp.ImFontAtlas self)
        {
            DearImguiSharp.ImFontAtlas.__Native self_ = default (DearImguiSharp.ImFontAtlas.__Native);
            System.UInt16 __result__;
            self.__MarshalTo(ref self_);
            __result__ = ImFontAtlas_GetGlyphRangesJapanese_(&self_);
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontAtlas_GetGlyphRangesJapanese", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt16 ImFontAtlas_GetGlyphRangesJapanese_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>const unsigned short* ImFontAtlas_GetGlyphRangesChineseFull([In] ImFontAtlas* self)</unmanaged>
        /// <unmanaged-short>ImFontAtlas_GetGlyphRangesChineseFull</unmanaged-short>
        public static unsafe System.UInt16 ImFontAtlasGetGlyphRangesChineseFull(ref DearImguiSharp.ImFontAtlas self)
        {
            DearImguiSharp.ImFontAtlas.__Native self_ = default (DearImguiSharp.ImFontAtlas.__Native);
            System.UInt16 __result__;
            self.__MarshalTo(ref self_);
            __result__ = ImFontAtlas_GetGlyphRangesChineseFull_(&self_);
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontAtlas_GetGlyphRangesChineseFull", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt16 ImFontAtlas_GetGlyphRangesChineseFull_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>const unsigned short* ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon([In] ImFontAtlas* self)</unmanaged>
        /// <unmanaged-short>ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon</unmanaged-short>
        public static unsafe System.UInt16 ImFontAtlasGetGlyphRangesChineseSimplifiedCommon(ref DearImguiSharp.ImFontAtlas self)
        {
            DearImguiSharp.ImFontAtlas.__Native self_ = default (DearImguiSharp.ImFontAtlas.__Native);
            System.UInt16 __result__;
            self.__MarshalTo(ref self_);
            __result__ = ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon_(&self_);
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt16 ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>const unsigned short* ImFontAtlas_GetGlyphRangesCyrillic([In] ImFontAtlas* self)</unmanaged>
        /// <unmanaged-short>ImFontAtlas_GetGlyphRangesCyrillic</unmanaged-short>
        public static unsafe System.UInt16 ImFontAtlasGetGlyphRangesCyrillic(ref DearImguiSharp.ImFontAtlas self)
        {
            DearImguiSharp.ImFontAtlas.__Native self_ = default (DearImguiSharp.ImFontAtlas.__Native);
            System.UInt16 __result__;
            self.__MarshalTo(ref self_);
            __result__ = ImFontAtlas_GetGlyphRangesCyrillic_(&self_);
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontAtlas_GetGlyphRangesCyrillic", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt16 ImFontAtlas_GetGlyphRangesCyrillic_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>const unsigned short* ImFontAtlas_GetGlyphRangesThai([In] ImFontAtlas* self)</unmanaged>
        /// <unmanaged-short>ImFontAtlas_GetGlyphRangesThai</unmanaged-short>
        public static unsafe System.UInt16 ImFontAtlasGetGlyphRangesThai(ref DearImguiSharp.ImFontAtlas self)
        {
            DearImguiSharp.ImFontAtlas.__Native self_ = default (DearImguiSharp.ImFontAtlas.__Native);
            System.UInt16 __result__;
            self.__MarshalTo(ref self_);
            __result__ = ImFontAtlas_GetGlyphRangesThai_(&self_);
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontAtlas_GetGlyphRangesThai", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt16 ImFontAtlas_GetGlyphRangesThai_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>const unsigned short* ImFontAtlas_GetGlyphRangesVietnamese([In] ImFontAtlas* self)</unmanaged>
        /// <unmanaged-short>ImFontAtlas_GetGlyphRangesVietnamese</unmanaged-short>
        public static unsafe System.UInt16 ImFontAtlasGetGlyphRangesVietnamese(ref DearImguiSharp.ImFontAtlas self)
        {
            DearImguiSharp.ImFontAtlas.__Native self_ = default (DearImguiSharp.ImFontAtlas.__Native);
            System.UInt16 __result__;
            self.__MarshalTo(ref self_);
            __result__ = ImFontAtlas_GetGlyphRangesVietnamese_(&self_);
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontAtlas_GetGlyphRangesVietnamese", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt16 ImFontAtlas_GetGlyphRangesVietnamese_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "id">No documentation.</param>
        /// <param name = "width">No documentation.</param>
        /// <param name = "height">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>int ImFontAtlas_AddCustomRectRegular([In] ImFontAtlas* self,[In] unsigned int id,[In] int width,[In] int height)</unmanaged>
        /// <unmanaged-short>ImFontAtlas_AddCustomRectRegular</unmanaged-short>
        public static unsafe System.Int32 ImFontAtlasAddCustomRectRegular(ref DearImguiSharp.ImFontAtlas self, System.UInt32 id, System.Int32 width, System.Int32 height)
        {
            DearImguiSharp.ImFontAtlas.__Native self_ = default (DearImguiSharp.ImFontAtlas.__Native);
            System.Int32 __result__;
            self.__MarshalTo(ref self_);
            __result__ = ImFontAtlas_AddCustomRectRegular_(&self_, id, width, height);
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontAtlas_AddCustomRectRegular", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern int ImFontAtlas_AddCustomRectRegular_(void *param0, System.UInt32 param1, int param2, int param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "font">No documentation.</param>
        /// <param name = "id">No documentation.</param>
        /// <param name = "width">No documentation.</param>
        /// <param name = "height">No documentation.</param>
        /// <param name = "advanceX">No documentation.</param>
        /// <param name = "offset">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>int ImFontAtlas_AddCustomRectFontGlyph([In] ImFontAtlas* self,[In] ImFont* font,[In] unsigned short id,[In] int width,[In] int height,[In] float advance_x,[In] const ImVec2 offset)</unmanaged>
        /// <unmanaged-short>ImFontAtlas_AddCustomRectFontGlyph</unmanaged-short>
        public static unsafe System.Int32 ImFontAtlasAddCustomRectFontGlyph(ref DearImguiSharp.ImFontAtlas self, ref DearImguiSharp.ImFont font, System.UInt16 id, System.Int32 width, System.Int32 height, System.Single advanceX, DearImguiSharp.ImVec2 offset)
        {
            DearImguiSharp.ImFontAtlas.__Native self_ = default (DearImguiSharp.ImFontAtlas.__Native);
            System.Int32 __result__;
            self.__MarshalTo(ref self_);
            fixed (void *font_ = &font)
                __result__ = ImFontAtlas_AddCustomRectFontGlyph_(&self_, font_, id, width, height, advanceX, offset);
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontAtlas_AddCustomRectFontGlyph", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern int ImFontAtlas_AddCustomRectFontGlyph_(void *param0, void *param1, System.UInt16 param2, int param3, int param4, float param5, DearImguiSharp.ImVec2 param6);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "index">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>const ImFontAtlasCustomRect* ImFontAtlas_GetCustomRectByIndex([In] ImFontAtlas* self,[In] int index)</unmanaged>
        /// <unmanaged-short>ImFontAtlas_GetCustomRectByIndex</unmanaged-short>
        public static unsafe DearImguiSharp.ImFontAtlasCustomRect ImFontAtlasGetCustomRectByIndex(ref DearImguiSharp.ImFontAtlas self, System.Int32 index)
        {
            DearImguiSharp.ImFontAtlas.__Native self_ = default (DearImguiSharp.ImFontAtlas.__Native);
            DearImguiSharp.ImFontAtlasCustomRect __result__;
            self.__MarshalTo(ref self_);
            ImFontAtlas_GetCustomRectByIndex_(&__result__, &self_, index);
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontAtlas_GetCustomRectByIndex", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImFontAtlas_GetCustomRectByIndex_(void *param0, void *param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "rect">No documentation.</param>
        /// <param name = "outUvMin">No documentation.</param>
        /// <param name = "outUvMax">No documentation.</param>
        /// <unmanaged>void ImFontAtlas_CalcCustomRectUV([In] ImFontAtlas* self,[In] const ImFontAtlasCustomRect* rect,[In] ImVec2* out_uv_min,[In] ImVec2* out_uv_max)</unmanaged>
        /// <unmanaged-short>ImFontAtlas_CalcCustomRectUV</unmanaged-short>
        public static unsafe void ImFontAtlasCalcCustomRectUV(ref DearImguiSharp.ImFontAtlas self, ref DearImguiSharp.ImFontAtlasCustomRect rect, DearImguiSharp.ImVec2 outUvMin, DearImguiSharp.ImVec2 outUvMax)
        {
            DearImguiSharp.ImFontAtlas.__Native self_ = default (DearImguiSharp.ImFontAtlas.__Native);
            self.__MarshalTo(ref self_);
            fixed (void *rect_ = &rect)
                ImFontAtlas_CalcCustomRectUV_(&self_, rect_, &outUvMin, &outUvMax);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontAtlas_CalcCustomRectUV", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImFontAtlas_CalcCustomRectUV_(void *param0, void *param1, void *param2, void *param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "cursor">No documentation.</param>
        /// <param name = "outOffset">No documentation.</param>
        /// <param name = "outSize">No documentation.</param>
        /// <param name = "outUvBorder">No documentation.</param>
        /// <param name = "outUvFill">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool ImFontAtlas_GetMouseCursorTexData([In] ImFontAtlas* self,[In] int cursor,[In] ImVec2* out_offset,[In] ImVec2* out_size,[In] ImVec2* out_uv_border,[In] ImVec2* out_uv_fill)</unmanaged>
        /// <unmanaged-short>ImFontAtlas_GetMouseCursorTexData</unmanaged-short>
        public static unsafe System.Boolean ImFontAtlasGetMouseCursorTexData(ref DearImguiSharp.ImFontAtlas self, System.Int32 cursor, DearImguiSharp.ImVec2 outOffset, DearImguiSharp.ImVec2 outSize, DearImguiSharp.ImVec2 outUvBorder, DearImguiSharp.ImVec2 outUvFill)
        {
            DearImguiSharp.ImFontAtlas.__Native self_ = default (DearImguiSharp.ImFontAtlas.__Native);
            System.Boolean __result__;
            System.Byte __result__native;
            self.__MarshalTo(ref self_);
            __result__native = ImFontAtlas_GetMouseCursorTexData_(&self_, cursor, &outOffset, &outSize, &outUvBorder, &outUvFill);
            __result__ = __result__native != 0;
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFontAtlas_GetMouseCursorTexData", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte ImFontAtlas_GetMouseCursorTexData_(void *param0, int param1, void *param2, void *param3, void *param4, void *param5);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImFont* ImFont_ImFont()</unmanaged>
        /// <unmanaged-short>ImFont_ImFont</unmanaged-short>
        public static unsafe DearImguiSharp.ImFont ImFontImFont()
        {
            DearImguiSharp.ImFont __result__;
            ImFont_ImFont_(&__result__);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFont_ImFont", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImFont_ImFont_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImFont_destroy([In] ImFont* self)</unmanaged>
        /// <unmanaged-short>ImFont_destroy</unmanaged-short>
        public static unsafe void ImFontDestroy(ref DearImguiSharp.ImFont self)
        {
            fixed (void *self_ = &self)
                ImFont_destroy_(self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFont_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImFont_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "c">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>const ImFontGlyph* ImFont_FindGlyph([In] ImFont* self,[In] unsigned short c)</unmanaged>
        /// <unmanaged-short>ImFont_FindGlyph</unmanaged-short>
        public static unsafe DearImguiSharp.ImFontGlyph ImFontFindGlyph(ref DearImguiSharp.ImFont self, System.UInt16 c)
        {
            DearImguiSharp.ImFontGlyph __result__;
            fixed (void *self_ = &self)
                ImFont_FindGlyph_(&__result__, self_, c);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFont_FindGlyph", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImFont_FindGlyph_(void *param0, void *param1, System.UInt16 param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "c">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>const ImFontGlyph* ImFont_FindGlyphNoFallback([In] ImFont* self,[In] unsigned short c)</unmanaged>
        /// <unmanaged-short>ImFont_FindGlyphNoFallback</unmanaged-short>
        public static unsafe DearImguiSharp.ImFontGlyph ImFontFindGlyphNoFallback(ref DearImguiSharp.ImFont self, System.UInt16 c)
        {
            DearImguiSharp.ImFontGlyph __result__;
            fixed (void *self_ = &self)
                ImFont_FindGlyphNoFallback_(&__result__, self_, c);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFont_FindGlyphNoFallback", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImFont_FindGlyphNoFallback_(void *param0, void *param1, System.UInt16 param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "c">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float ImFont_GetCharAdvance([In] ImFont* self,[In] unsigned short c)</unmanaged>
        /// <unmanaged-short>ImFont_GetCharAdvance</unmanaged-short>
        public static unsafe System.Single ImFontGetCharAdvance(ref DearImguiSharp.ImFont self, System.UInt16 c)
        {
            System.Single __result__;
            fixed (void *self_ = &self)
                __result__ = ImFont_GetCharAdvance_(self_, c);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFont_GetCharAdvance", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float ImFont_GetCharAdvance_(void *param0, System.UInt16 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool ImFont_IsLoaded([In] ImFont* self)</unmanaged>
        /// <unmanaged-short>ImFont_IsLoaded</unmanaged-short>
        public static unsafe System.Boolean ImFontIsLoaded(ref DearImguiSharp.ImFont self)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            fixed (void *self_ = &self)
                __result__native = ImFont_IsLoaded_(self_);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFont_IsLoaded", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte ImFont_IsLoaded_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>const char* ImFont_GetDebugName([In] ImFont* self)</unmanaged>
        /// <unmanaged-short>ImFont_GetDebugName</unmanaged-short>
        public static unsafe System.String ImFontGetDebugName(ref DearImguiSharp.ImFont self)
        {
            System.String __result__;
            System.IntPtr __result__native;
            fixed (void *self_ = &self)
                __result__native = ImFont_GetDebugName_(self_);
            __result__ = System.Runtime.InteropServices.Marshal.PtrToStringAnsi(__result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFont_GetDebugName", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.IntPtr ImFont_GetDebugName_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "self">No documentation.</param>
        /// <param name = "size">No documentation.</param>
        /// <param name = "maxWidth">No documentation.</param>
        /// <param name = "wrapWidth">No documentation.</param>
        /// <param name = "textBegin">No documentation.</param>
        /// <param name = "textEnd">No documentation.</param>
        /// <param name = "remaining">No documentation.</param>
        /// <unmanaged>void ImFont_CalcTextSizeA([In] ImVec2* pOut,[In] ImFont* self,[In] float size,[In] float max_width,[In] float wrap_width,[In] const char* text_begin,[In] const char* text_end,[In] const char** remaining)</unmanaged>
        /// <unmanaged-short>ImFont_CalcTextSizeA</unmanaged-short>
        public static unsafe void ImFontCalcTextSizeA(DearImguiSharp.ImVec2 outRef, ref DearImguiSharp.ImFont self, System.Single size, System.Single maxWidth, System.Single wrapWidth, System.String textBegin, System.String textEnd, System.String remaining)
        {
            System.IntPtr textBegin_;
            System.IntPtr textEnd_;
            System.IntPtr remaining_;
            textBegin_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(textBegin);
            textEnd_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(textEnd);
            remaining_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(remaining);
            fixed (void *self_ = &self)
                ImFont_CalcTextSizeA_(&outRef, self_, size, maxWidth, wrapWidth, (void *)textBegin_, (void *)textEnd_, (void *)remaining_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(textBegin_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(textEnd_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(remaining_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFont_CalcTextSizeA", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImFont_CalcTextSizeA_(void *param0, void *param1, float param2, float param3, float param4, void *param5, void *param6, void *param7);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "scale">No documentation.</param>
        /// <param name = "text">No documentation.</param>
        /// <param name = "textEnd">No documentation.</param>
        /// <param name = "wrapWidth">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>const char* ImFont_CalcWordWrapPositionA([In] ImFont* self,[In] float scale,[In] const char* text,[In] const char* text_end,[In] float wrap_width)</unmanaged>
        /// <unmanaged-short>ImFont_CalcWordWrapPositionA</unmanaged-short>
        public static unsafe System.String ImFontCalcWordWrapPositionA(ref DearImguiSharp.ImFont self, System.Single scale, System.String text, System.String textEnd, System.Single wrapWidth)
        {
            System.IntPtr text_;
            System.IntPtr textEnd_;
            System.String __result__;
            System.IntPtr __result__native;
            text_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(text);
            textEnd_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(textEnd);
            fixed (void *self_ = &self)
                __result__native = ImFont_CalcWordWrapPositionA_(self_, scale, (void *)text_, (void *)textEnd_, wrapWidth);
            __result__ = System.Runtime.InteropServices.Marshal.PtrToStringAnsi(__result__native);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(text_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(textEnd_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFont_CalcWordWrapPositionA", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.IntPtr ImFont_CalcWordWrapPositionA_(void *param0, float param1, void *param2, void *param3, float param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "drawList">No documentation.</param>
        /// <param name = "size">No documentation.</param>
        /// <param name = "pos">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <param name = "c">No documentation.</param>
        /// <unmanaged>void ImFont_RenderChar([In] ImFont* self,[In] ImDrawList* draw_list,[In] float size,[In] ImVec2 pos,[In] unsigned int col,[In] unsigned short c)</unmanaged>
        /// <unmanaged-short>ImFont_RenderChar</unmanaged-short>
        public static unsafe void ImFontRenderChar(ref DearImguiSharp.ImFont self, ref DearImguiSharp.ImDrawList drawList, System.Single size, DearImguiSharp.ImVec2 pos, System.UInt32 col, System.UInt16 c)
        {
            DearImguiSharp.ImDrawList.__Native drawList_ = default (DearImguiSharp.ImDrawList.__Native);
            drawList.__MarshalTo(ref drawList_);
            fixed (void *self_ = &self)
                ImFont_RenderChar_(self_, &drawList_, size, pos, col, c);
            drawList.__MarshalFree(ref drawList_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFont_RenderChar", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImFont_RenderChar_(void *param0, void *param1, float param2, DearImguiSharp.ImVec2 param3, System.UInt32 param4, System.UInt16 param5);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "drawList">No documentation.</param>
        /// <param name = "size">No documentation.</param>
        /// <param name = "pos">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <param name = "clipRect">No documentation.</param>
        /// <param name = "textBegin">No documentation.</param>
        /// <param name = "textEnd">No documentation.</param>
        /// <param name = "wrapWidth">No documentation.</param>
        /// <param name = "cpuFineClip">No documentation.</param>
        /// <unmanaged>void ImFont_RenderText([In] ImFont* self,[In] ImDrawList* draw_list,[In] float size,[In] ImVec2 pos,[In] unsigned int col,[In] const ImVec4 clip_rect,[In] const char* text_begin,[In] const char* text_end,[In] float wrap_width,[In] bool cpu_fine_clip)</unmanaged>
        /// <unmanaged-short>ImFont_RenderText</unmanaged-short>
        public static unsafe void ImFontRenderText(ref DearImguiSharp.ImFont self, ref DearImguiSharp.ImDrawList drawList, System.Single size, DearImguiSharp.ImVec2 pos, System.UInt32 col, DearImguiSharp.ImVec4 clipRect, System.String textBegin, System.String textEnd, System.Single wrapWidth, System.Boolean cpuFineClip)
        {
            DearImguiSharp.ImDrawList.__Native drawList_ = default (DearImguiSharp.ImDrawList.__Native);
            System.IntPtr textBegin_;
            System.IntPtr textEnd_;
            System.Byte cpuFineClip_;
            drawList.__MarshalTo(ref drawList_);
            textBegin_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(textBegin);
            textEnd_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(textEnd);
            cpuFineClip_ = (System.Byte)(cpuFineClip ? 1 : 0);
            fixed (void *self_ = &self)
                ImFont_RenderText_(self_, &drawList_, size, pos, col, clipRect, (void *)textBegin_, (void *)textEnd_, wrapWidth, cpuFineClip_);
            drawList.__MarshalFree(ref drawList_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(textBegin_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(textEnd_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFont_RenderText", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImFont_RenderText_(void *param0, void *param1, float param2, DearImguiSharp.ImVec2 param3, System.UInt32 param4, DearImguiSharp.ImVec4 param5, void *param6, void *param7, float param8, System.Byte param9);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImFont_BuildLookupTable([In] ImFont* self)</unmanaged>
        /// <unmanaged-short>ImFont_BuildLookupTable</unmanaged-short>
        public static unsafe void ImFontBuildLookupTable(ref DearImguiSharp.ImFont self)
        {
            fixed (void *self_ = &self)
                ImFont_BuildLookupTable_(self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFont_BuildLookupTable", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImFont_BuildLookupTable_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImFont_ClearOutputData([In] ImFont* self)</unmanaged>
        /// <unmanaged-short>ImFont_ClearOutputData</unmanaged-short>
        public static unsafe void ImFontClearOutputData(ref DearImguiSharp.ImFont self)
        {
            fixed (void *self_ = &self)
                ImFont_ClearOutputData_(self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFont_ClearOutputData", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImFont_ClearOutputData_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "newSize">No documentation.</param>
        /// <unmanaged>void ImFont_GrowIndex([In] ImFont* self,[In] int new_size)</unmanaged>
        /// <unmanaged-short>ImFont_GrowIndex</unmanaged-short>
        public static unsafe void ImFontGrowIndex(ref DearImguiSharp.ImFont self, System.Int32 newSize)
        {
            fixed (void *self_ = &self)
                ImFont_GrowIndex_(self_, newSize);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFont_GrowIndex", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImFont_GrowIndex_(void *param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "c">No documentation.</param>
        /// <param name = "x0">No documentation.</param>
        /// <param name = "y0">No documentation.</param>
        /// <param name = "x1">No documentation.</param>
        /// <param name = "y1">No documentation.</param>
        /// <param name = "u0">No documentation.</param>
        /// <param name = "v0">No documentation.</param>
        /// <param name = "u1">No documentation.</param>
        /// <param name = "v1">No documentation.</param>
        /// <param name = "advanceX">No documentation.</param>
        /// <unmanaged>void ImFont_AddGlyph([In] ImFont* self,[In] unsigned short c,[In] float x0,[In] float y0,[In] float x1,[In] float y1,[In] float u0,[In] float v0,[In] float u1,[In] float v1,[In] float advance_x)</unmanaged>
        /// <unmanaged-short>ImFont_AddGlyph</unmanaged-short>
        public static unsafe void ImFontAddGlyph(ref DearImguiSharp.ImFont self, System.UInt16 c, System.Single x0, System.Single y0, System.Single x1, System.Single y1, System.Single u0, System.Single v0, System.Single u1, System.Single v1, System.Single advanceX)
        {
            fixed (void *self_ = &self)
                ImFont_AddGlyph_(self_, c, x0, y0, x1, y1, u0, v0, u1, v1, advanceX);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFont_AddGlyph", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImFont_AddGlyph_(void *param0, System.UInt16 param1, float param2, float param3, float param4, float param5, float param6, float param7, float param8, float param9, float param10);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "dst">No documentation.</param>
        /// <param name = "src">No documentation.</param>
        /// <param name = "overwriteDst">No documentation.</param>
        /// <unmanaged>void ImFont_AddRemapChar([In] ImFont* self,[In] unsigned short dst,[In] unsigned short src,[In] bool overwrite_dst)</unmanaged>
        /// <unmanaged-short>ImFont_AddRemapChar</unmanaged-short>
        public static unsafe void ImFontAddRemapChar(ref DearImguiSharp.ImFont self, System.UInt16 dst, System.UInt16 src, System.Boolean overwriteDst)
        {
            System.Byte overwriteDst_;
            overwriteDst_ = (System.Byte)(overwriteDst ? 1 : 0);
            fixed (void *self_ = &self)
                ImFont_AddRemapChar_(self_, dst, src, overwriteDst_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFont_AddRemapChar", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImFont_AddRemapChar_(void *param0, System.UInt16 param1, System.UInt16 param2, System.Byte param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "c">No documentation.</param>
        /// <unmanaged>void ImFont_SetFallbackChar([In] ImFont* self,[In] unsigned short c)</unmanaged>
        /// <unmanaged-short>ImFont_SetFallbackChar</unmanaged-short>
        public static unsafe void ImFontSetFallbackChar(ref DearImguiSharp.ImFont self, System.UInt16 c)
        {
            fixed (void *self_ = &self)
                ImFont_SetFallbackChar_(self_, c);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImFont_SetFallbackChar", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImFont_SetFallbackChar_(void *param0, System.UInt16 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "data">No documentation.</param>
        /// <param name = "dataSize">No documentation.</param>
        /// <param name = "seed">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>unsigned int igImHashData([In] const void* data,[In] size_t data_size,[In] unsigned int seed)</unmanaged>
        /// <unmanaged-short>igImHashData</unmanaged-short>
        public static unsafe System.UInt32 ImHashData(System.IntPtr data, SharpGen.Runtime.PointerSize dataSize, System.UInt32 seed)
        {
            System.UInt32 __result__;
            __result__ = igImHashData_((void *)data, (void *)dataSize, seed);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImHashData", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt32 igImHashData_(void *param0, void *param1, System.UInt32 param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "data">No documentation.</param>
        /// <param name = "dataSize">No documentation.</param>
        /// <param name = "seed">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>unsigned int igImHashStr([In] const char* data,[In] size_t data_size,[In] unsigned int seed)</unmanaged>
        /// <unmanaged-short>igImHashStr</unmanaged-short>
        public static unsafe System.UInt32 ImHashStr(System.String data, SharpGen.Runtime.PointerSize dataSize, System.UInt32 seed)
        {
            System.IntPtr data_;
            System.UInt32 __result__;
            data_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(data);
            __result__ = igImHashStr_((void *)data_, (void *)dataSize, seed);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(data_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImHashStr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt32 igImHashStr_(void *param0, void *param1, System.UInt32 param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "v">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igImIsPowerOfTwo([In] int v)</unmanaged>
        /// <unmanaged-short>igImIsPowerOfTwo</unmanaged-short>
        public static unsafe System.Boolean ImIsPowerOfTwo(System.Int32 v)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igImIsPowerOfTwo_(v);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImIsPowerOfTwo", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igImIsPowerOfTwo_(int param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "v">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>int igImUpperPowerOfTwo([In] int v)</unmanaged>
        /// <unmanaged-short>igImUpperPowerOfTwo</unmanaged-short>
        public static unsafe System.Int32 ImUpperPowerOfTwo(System.Int32 v)
        {
            System.Int32 __result__;
            __result__ = igImUpperPowerOfTwo_(v);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImUpperPowerOfTwo", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern int igImUpperPowerOfTwo_(int param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "str1">No documentation.</param>
        /// <param name = "str2">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>int igImStricmp([In] const char* str1,[In] const char* str2)</unmanaged>
        /// <unmanaged-short>igImStricmp</unmanaged-short>
        public static unsafe System.Int32 ImStricmp(System.String str1, System.String str2)
        {
            System.IntPtr str1_;
            System.IntPtr str2_;
            System.Int32 __result__;
            str1_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(str1);
            str2_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(str2);
            __result__ = igImStricmp_((void *)str1_, (void *)str2_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(str1_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(str2_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImStricmp", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern int igImStricmp_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "str1">No documentation.</param>
        /// <param name = "str2">No documentation.</param>
        /// <param name = "count">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>int igImStrnicmp([In] const char* str1,[In] const char* str2,[In] size_t count)</unmanaged>
        /// <unmanaged-short>igImStrnicmp</unmanaged-short>
        public static unsafe System.Int32 ImStrnicmp(System.String str1, System.String str2, SharpGen.Runtime.PointerSize count)
        {
            System.IntPtr str1_;
            System.IntPtr str2_;
            System.Int32 __result__;
            str1_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(str1);
            str2_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(str2);
            __result__ = igImStrnicmp_((void *)str1_, (void *)str2_, (void *)count);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(str1_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(str2_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImStrnicmp", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern int igImStrnicmp_(void *param0, void *param1, void *param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "dst">No documentation.</param>
        /// <param name = "src">No documentation.</param>
        /// <param name = "count">No documentation.</param>
        /// <unmanaged>void igImStrncpy([In] char* dst,[In] const char* src,[In] size_t count)</unmanaged>
        /// <unmanaged-short>igImStrncpy</unmanaged-short>
        public static unsafe void ImStrncpy(System.String dst, System.String src, SharpGen.Runtime.PointerSize count)
        {
            System.IntPtr dst_;
            System.IntPtr src_;
            dst_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(dst);
            src_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(src);
            igImStrncpy_((void *)dst_, (void *)src_, (void *)count);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(dst_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(src_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImStrncpy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igImStrncpy_(void *param0, void *param1, void *param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "str">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>char* igImStrdup([In] const char* str)</unmanaged>
        /// <unmanaged-short>igImStrdup</unmanaged-short>
        public static unsafe System.String ImStrdup(System.String str)
        {
            System.IntPtr str_;
            System.String __result__;
            System.IntPtr __result__native;
            str_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(str);
            __result__native = igImStrdup_((void *)str_);
            __result__ = System.Runtime.InteropServices.Marshal.PtrToStringAnsi(__result__native);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(str_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImStrdup", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.IntPtr igImStrdup_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "dst">No documentation.</param>
        /// <param name = "dstSizeRef">No documentation.</param>
        /// <param name = "str">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>char* igImStrdupcpy([In] char* dst,[In] size_t* p_dst_size,[In] const char* str)</unmanaged>
        /// <unmanaged-short>igImStrdupcpy</unmanaged-short>
        public static unsafe System.String ImStrdupcpy(System.String dst, SharpGen.Runtime.PointerSize dstSizeRef, System.String str)
        {
            System.IntPtr dst_;
            System.IntPtr str_;
            System.String __result__;
            System.IntPtr __result__native;
            dst_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(dst);
            str_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(str);
            __result__native = igImStrdupcpy_((void *)dst_, &dstSizeRef, (void *)str_);
            __result__ = System.Runtime.InteropServices.Marshal.PtrToStringAnsi(__result__native);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(dst_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(str_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImStrdupcpy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.IntPtr igImStrdupcpy_(void *param0, void *param1, void *param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "strBegin">No documentation.</param>
        /// <param name = "strEnd">No documentation.</param>
        /// <param name = "c">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>const char* igImStrchrRange([In] const char* str_begin,[In] const char* str_end,[In] char c)</unmanaged>
        /// <unmanaged-short>igImStrchrRange</unmanaged-short>
        public static unsafe System.String ImStrchrRange(System.String strBegin, System.String strEnd, System.Byte c)
        {
            System.IntPtr strBegin_;
            System.IntPtr strEnd_;
            System.String __result__;
            System.IntPtr __result__native;
            strBegin_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(strBegin);
            strEnd_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(strEnd);
            __result__native = igImStrchrRange_((void *)strBegin_, (void *)strEnd_, c);
            __result__ = System.Runtime.InteropServices.Marshal.PtrToStringAnsi(__result__native);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(strBegin_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(strEnd_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImStrchrRange", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.IntPtr igImStrchrRange_(void *param0, void *param1, System.Byte param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "str">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>int igImStrlenW([In] const unsigned short* str)</unmanaged>
        /// <unmanaged-short>igImStrlenW</unmanaged-short>
        public static unsafe System.Int32 ImStrlenW(System.UInt16 str)
        {
            System.Int32 __result__;
            __result__ = igImStrlenW_(&str);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImStrlenW", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern int igImStrlenW_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "str">No documentation.</param>
        /// <param name = "strEnd">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>const char* igImStreolRange([In] const char* str,[In] const char* str_end)</unmanaged>
        /// <unmanaged-short>igImStreolRange</unmanaged-short>
        public static unsafe System.String ImStreolRange(System.String str, System.String strEnd)
        {
            System.IntPtr str_;
            System.IntPtr strEnd_;
            System.String __result__;
            System.IntPtr __result__native;
            str_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(str);
            strEnd_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(strEnd);
            __result__native = igImStreolRange_((void *)str_, (void *)strEnd_);
            __result__ = System.Runtime.InteropServices.Marshal.PtrToStringAnsi(__result__native);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(str_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(strEnd_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImStreolRange", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.IntPtr igImStreolRange_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "bufMidLine">No documentation.</param>
        /// <param name = "bufBegin">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>const unsigned short* igImStrbolW([In] const unsigned short* buf_mid_line,[In] const unsigned short* buf_begin)</unmanaged>
        /// <unmanaged-short>igImStrbolW</unmanaged-short>
        public static unsafe System.UInt16 ImStrbolW(System.UInt16 bufMidLine, System.UInt16 bufBegin)
        {
            System.UInt16 __result__;
            __result__ = igImStrbolW_(&bufMidLine, &bufBegin);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImStrbolW", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt16 igImStrbolW_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "haystack">No documentation.</param>
        /// <param name = "haystackEnd">No documentation.</param>
        /// <param name = "needle">No documentation.</param>
        /// <param name = "needleEnd">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>const char* igImStristr([In] const char* haystack,[In] const char* haystack_end,[In] const char* needle,[In] const char* needle_end)</unmanaged>
        /// <unmanaged-short>igImStristr</unmanaged-short>
        public static unsafe System.String ImStristr(System.String haystack, System.String haystackEnd, System.String needle, System.String needleEnd)
        {
            System.IntPtr haystack_;
            System.IntPtr haystackEnd_;
            System.IntPtr needle_;
            System.IntPtr needleEnd_;
            System.String __result__;
            System.IntPtr __result__native;
            haystack_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(haystack);
            haystackEnd_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(haystackEnd);
            needle_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(needle);
            needleEnd_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(needleEnd);
            __result__native = igImStristr_((void *)haystack_, (void *)haystackEnd_, (void *)needle_, (void *)needleEnd_);
            __result__ = System.Runtime.InteropServices.Marshal.PtrToStringAnsi(__result__native);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(haystack_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(haystackEnd_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(needle_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(needleEnd_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImStristr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.IntPtr igImStristr_(void *param0, void *param1, void *param2, void *param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "str">No documentation.</param>
        /// <unmanaged>void igImStrTrimBlanks([In] char* str)</unmanaged>
        /// <unmanaged-short>igImStrTrimBlanks</unmanaged-short>
        public static unsafe void ImStrTrimBlanks(System.String str)
        {
            System.IntPtr str_;
            str_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(str);
            igImStrTrimBlanks_((void *)str_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(str_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImStrTrimBlanks", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igImStrTrimBlanks_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "str">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>const char* igImStrSkipBlank([In] const char* str)</unmanaged>
        /// <unmanaged-short>igImStrSkipBlank</unmanaged-short>
        public static unsafe System.String ImStrSkipBlank(System.String str)
        {
            System.IntPtr str_;
            System.String __result__;
            System.IntPtr __result__native;
            str_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(str);
            __result__native = igImStrSkipBlank_((void *)str_);
            __result__ = System.Runtime.InteropServices.Marshal.PtrToStringAnsi(__result__native);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(str_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImStrSkipBlank", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.IntPtr igImStrSkipBlank_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "buf">No documentation.</param>
        /// <param name = "bufSize">No documentation.</param>
        /// <param name = "fmt">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>int igImFormatString([In] char* buf,[In] size_t buf_size,[In] const char* fmt)</unmanaged>
        /// <unmanaged-short>igImFormatString</unmanaged-short>
        public static unsafe System.Int32 ImFormatString(System.String buf, SharpGen.Runtime.PointerSize bufSize, System.String fmt)
        {
            System.IntPtr buf_;
            System.IntPtr fmt_;
            System.Int32 __result__;
            buf_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(buf);
            fmt_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(fmt);
            __result__ = igImFormatString_((void *)buf_, (void *)bufSize, (void *)fmt_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(buf_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(fmt_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImFormatString", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern int igImFormatString_(void *param0, void *param1, void *param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "buf">No documentation.</param>
        /// <param name = "bufSize">No documentation.</param>
        /// <param name = "fmt">No documentation.</param>
        /// <param name = "args">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>int igImFormatStringV([In] char* buf,[In] size_t buf_size,[In] const char* fmt,[In] char* args)</unmanaged>
        /// <unmanaged-short>igImFormatStringV</unmanaged-short>
        public static unsafe System.Int32 ImFormatStringV(System.String buf, SharpGen.Runtime.PointerSize bufSize, System.String fmt, System.String args)
        {
            System.IntPtr buf_;
            System.IntPtr fmt_;
            System.IntPtr args_;
            System.Int32 __result__;
            buf_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(buf);
            fmt_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(fmt);
            args_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(args);
            __result__ = igImFormatStringV_((void *)buf_, (void *)bufSize, (void *)fmt_, (void *)args_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(buf_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(fmt_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(args_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImFormatStringV", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern int igImFormatStringV_(void *param0, void *param1, void *param2, void *param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "format">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>const char* igImParseFormatFindStart([In] const char* format)</unmanaged>
        /// <unmanaged-short>igImParseFormatFindStart</unmanaged-short>
        public static unsafe System.String ImParseFormatFindStart(System.String format)
        {
            System.IntPtr format_;
            System.String __result__;
            System.IntPtr __result__native;
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igImParseFormatFindStart_((void *)format_);
            __result__ = System.Runtime.InteropServices.Marshal.PtrToStringAnsi(__result__native);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImParseFormatFindStart", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.IntPtr igImParseFormatFindStart_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "format">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>const char* igImParseFormatFindEnd([In] const char* format)</unmanaged>
        /// <unmanaged-short>igImParseFormatFindEnd</unmanaged-short>
        public static unsafe System.String ImParseFormatFindEnd(System.String format)
        {
            System.IntPtr format_;
            System.String __result__;
            System.IntPtr __result__native;
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igImParseFormatFindEnd_((void *)format_);
            __result__ = System.Runtime.InteropServices.Marshal.PtrToStringAnsi(__result__native);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImParseFormatFindEnd", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.IntPtr igImParseFormatFindEnd_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "format">No documentation.</param>
        /// <param name = "buf">No documentation.</param>
        /// <param name = "bufSize">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>const char* igImParseFormatTrimDecorations([In] const char* format,[In] char* buf,[In] size_t buf_size)</unmanaged>
        /// <unmanaged-short>igImParseFormatTrimDecorations</unmanaged-short>
        public static unsafe System.String ImParseFormatTrimDecorations(System.String format, System.String buf, SharpGen.Runtime.PointerSize bufSize)
        {
            System.IntPtr format_;
            System.IntPtr buf_;
            System.String __result__;
            System.IntPtr __result__native;
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            buf_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(buf);
            __result__native = igImParseFormatTrimDecorations_((void *)format_, (void *)buf_, (void *)bufSize);
            __result__ = System.Runtime.InteropServices.Marshal.PtrToStringAnsi(__result__native);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(buf_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImParseFormatTrimDecorations", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.IntPtr igImParseFormatTrimDecorations_(void *param0, void *param1, void *param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "format">No documentation.</param>
        /// <param name = "defaultValue">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>int igImParseFormatPrecision([In] const char* format,[In] int default_value)</unmanaged>
        /// <unmanaged-short>igImParseFormatPrecision</unmanaged-short>
        public static unsafe System.Int32 ImParseFormatPrecision(System.String format, System.Int32 defaultValue)
        {
            System.IntPtr format_;
            System.Int32 __result__;
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__ = igImParseFormatPrecision_((void *)format_, defaultValue);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImParseFormatPrecision", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern int igImParseFormatPrecision_(void *param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "c">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igImCharIsBlankA([In] char c)</unmanaged>
        /// <unmanaged-short>igImCharIsBlankA</unmanaged-short>
        public static unsafe System.Boolean ImCharIsBlankA(System.Byte c)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igImCharIsBlankA_(c);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImCharIsBlankA", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igImCharIsBlankA_(System.Byte param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "c">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igImCharIsBlankW([In] unsigned int c)</unmanaged>
        /// <unmanaged-short>igImCharIsBlankW</unmanaged-short>
        public static unsafe System.Boolean ImCharIsBlankW(System.UInt32 c)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igImCharIsBlankW_(c);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImCharIsBlankW", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igImCharIsBlankW_(System.UInt32 param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "buf">No documentation.</param>
        /// <param name = "bufSize">No documentation.</param>
        /// <param name = "inText">No documentation.</param>
        /// <param name = "inTextEnd">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>int igImTextStrToUtf8([In] char* buf,[In] int buf_size,[In] const unsigned short* in_text,[In] const unsigned short* in_text_end)</unmanaged>
        /// <unmanaged-short>igImTextStrToUtf8</unmanaged-short>
        public static unsafe System.Int32 ImTextStrToUtf8(System.String buf, System.Int32 bufSize, System.UInt16 inText, System.UInt16 inTextEnd)
        {
            System.IntPtr buf_;
            System.Int32 __result__;
            buf_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(buf);
            __result__ = igImTextStrToUtf8_((void *)buf_, bufSize, &inText, &inTextEnd);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(buf_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImTextStrToUtf8", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern int igImTextStrToUtf8_(void *param0, int param1, void *param2, void *param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outChar">No documentation.</param>
        /// <param name = "inText">No documentation.</param>
        /// <param name = "inTextEnd">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>int igImTextCharFromUtf8([In] unsigned int* out_char,[In] const char* in_text,[In] const char* in_text_end)</unmanaged>
        /// <unmanaged-short>igImTextCharFromUtf8</unmanaged-short>
        public static unsafe System.Int32 ImTextCharFromUtf8(System.UInt32 outChar, System.String inText, System.String inTextEnd)
        {
            System.IntPtr inText_;
            System.IntPtr inTextEnd_;
            System.Int32 __result__;
            inText_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(inText);
            inTextEnd_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(inTextEnd);
            __result__ = igImTextCharFromUtf8_(&outChar, (void *)inText_, (void *)inTextEnd_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(inText_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(inTextEnd_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImTextCharFromUtf8", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern int igImTextCharFromUtf8_(void *param0, void *param1, void *param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "buf">No documentation.</param>
        /// <param name = "bufSize">No documentation.</param>
        /// <param name = "inText">No documentation.</param>
        /// <param name = "inTextEnd">No documentation.</param>
        /// <param name = "inRemaining">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>int igImTextStrFromUtf8([In] unsigned short* buf,[In] int buf_size,[In] const char* in_text,[In] const char* in_text_end,[In] const char** in_remaining)</unmanaged>
        /// <unmanaged-short>igImTextStrFromUtf8</unmanaged-short>
        public static unsafe System.Int32 ImTextStrFromUtf8(System.UInt16 buf, System.Int32 bufSize, System.String inText, System.String inTextEnd, System.String inRemaining)
        {
            System.IntPtr inText_;
            System.IntPtr inTextEnd_;
            System.IntPtr inRemaining_;
            System.Int32 __result__;
            inText_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(inText);
            inTextEnd_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(inTextEnd);
            inRemaining_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(inRemaining);
            __result__ = igImTextStrFromUtf8_(&buf, bufSize, (void *)inText_, (void *)inTextEnd_, (void *)inRemaining_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(inText_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(inTextEnd_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(inRemaining_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImTextStrFromUtf8", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern int igImTextStrFromUtf8_(void *param0, int param1, void *param2, void *param3, void *param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "inText">No documentation.</param>
        /// <param name = "inTextEnd">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>int igImTextCountCharsFromUtf8([In] const char* in_text,[In] const char* in_text_end)</unmanaged>
        /// <unmanaged-short>igImTextCountCharsFromUtf8</unmanaged-short>
        public static unsafe System.Int32 ImTextCountCharsFromUtf8(System.String inText, System.String inTextEnd)
        {
            System.IntPtr inText_;
            System.IntPtr inTextEnd_;
            System.Int32 __result__;
            inText_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(inText);
            inTextEnd_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(inTextEnd);
            __result__ = igImTextCountCharsFromUtf8_((void *)inText_, (void *)inTextEnd_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(inText_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(inTextEnd_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImTextCountCharsFromUtf8", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern int igImTextCountCharsFromUtf8_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "inText">No documentation.</param>
        /// <param name = "inTextEnd">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>int igImTextCountUtf8BytesFromChar([In] const char* in_text,[In] const char* in_text_end)</unmanaged>
        /// <unmanaged-short>igImTextCountUtf8BytesFromChar</unmanaged-short>
        public static unsafe System.Int32 ImTextCountUtf8BytesFromChar(System.String inText, System.String inTextEnd)
        {
            System.IntPtr inText_;
            System.IntPtr inTextEnd_;
            System.Int32 __result__;
            inText_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(inText);
            inTextEnd_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(inTextEnd);
            __result__ = igImTextCountUtf8BytesFromChar_((void *)inText_, (void *)inTextEnd_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(inText_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(inTextEnd_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImTextCountUtf8BytesFromChar", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern int igImTextCountUtf8BytesFromChar_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "inText">No documentation.</param>
        /// <param name = "inTextEnd">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>int igImTextCountUtf8BytesFromStr([In] const unsigned short* in_text,[In] const unsigned short* in_text_end)</unmanaged>
        /// <unmanaged-short>igImTextCountUtf8BytesFromStr</unmanaged-short>
        public static unsafe System.Int32 ImTextCountUtf8BytesFromStr(System.UInt16 inText, System.UInt16 inTextEnd)
        {
            System.Int32 __result__;
            __result__ = igImTextCountUtf8BytesFromStr_(&inText, &inTextEnd);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImTextCountUtf8BytesFromStr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern int igImTextCountUtf8BytesFromStr_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "filename">No documentation.</param>
        /// <param name = "mode">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>FILE* igImFileOpen([In] const char* filename,[In] const char* mode)</unmanaged>
        /// <unmanaged-short>igImFileOpen</unmanaged-short>
        public static unsafe System.IntPtr ImFileOpen(System.String filename, System.String mode)
        {
            System.IntPtr filename_;
            System.IntPtr mode_;
            System.IntPtr __result__;
            filename_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(filename);
            mode_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(mode);
            __result__ = igImFileOpen_((void *)filename_, (void *)mode_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(filename_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(mode_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImFileOpen", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.IntPtr igImFileOpen_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "file">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igImFileClose([In] FILE* file)</unmanaged>
        /// <unmanaged-short>igImFileClose</unmanaged-short>
        public static unsafe System.Boolean ImFileClose(System.IntPtr file)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igImFileClose_((void *)file);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImFileClose", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igImFileClose_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "file">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>unsigned longlong igImFileGetSize([In] FILE* file)</unmanaged>
        /// <unmanaged-short>igImFileGetSize</unmanaged-short>
        public static unsafe System.UInt64 ImFileGetSize(System.IntPtr file)
        {
            System.UInt64 __result__;
            __result__ = igImFileGetSize_((void *)file);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImFileGetSize", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt64 igImFileGetSize_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "data">No documentation.</param>
        /// <param name = "size">No documentation.</param>
        /// <param name = "count">No documentation.</param>
        /// <param name = "file">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>unsigned longlong igImFileRead([In] void* data,[In] unsigned longlong size,[In] unsigned longlong count,[In] FILE* file)</unmanaged>
        /// <unmanaged-short>igImFileRead</unmanaged-short>
        public static unsafe System.UInt64 ImFileRead(System.IntPtr data, System.UInt64 size, System.UInt64 count, System.IntPtr file)
        {
            System.UInt64 __result__;
            __result__ = igImFileRead_((void *)data, size, count, (void *)file);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImFileRead", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt64 igImFileRead_(void *param0, System.UInt64 param1, System.UInt64 param2, void *param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "data">No documentation.</param>
        /// <param name = "size">No documentation.</param>
        /// <param name = "count">No documentation.</param>
        /// <param name = "file">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>unsigned longlong igImFileWrite([In] const void* data,[In] unsigned longlong size,[In] unsigned longlong count,[In] FILE* file)</unmanaged>
        /// <unmanaged-short>igImFileWrite</unmanaged-short>
        public static unsafe System.UInt64 ImFileWrite(System.IntPtr data, System.UInt64 size, System.UInt64 count, System.IntPtr file)
        {
            System.UInt64 __result__;
            __result__ = igImFileWrite_((void *)data, size, count, (void *)file);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImFileWrite", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt64 igImFileWrite_(void *param0, System.UInt64 param1, System.UInt64 param2, void *param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "filename">No documentation.</param>
        /// <param name = "mode">No documentation.</param>
        /// <param name = "outFileSize">No documentation.</param>
        /// <param name = "paddingBytes">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>void* igImFileLoadToMemory([In] const char* filename,[In] const char* mode,[In] size_t* out_file_size,[In] int padding_bytes)</unmanaged>
        /// <unmanaged-short>igImFileLoadToMemory</unmanaged-short>
        public static unsafe System.IntPtr ImFileLoadToMemory(System.String filename, System.String mode, SharpGen.Runtime.PointerSize outFileSize, System.Int32 paddingBytes)
        {
            System.IntPtr filename_;
            System.IntPtr mode_;
            System.IntPtr __result__;
            filename_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(filename);
            mode_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(mode);
            __result__ = igImFileLoadToMemory_((void *)filename_, (void *)mode_, &outFileSize, paddingBytes);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(filename_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(mode_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImFileLoadToMemory", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.IntPtr igImFileLoadToMemory_(void *param0, void *param1, void *param2, int param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "x">No documentation.</param>
        /// <param name = "y">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float igImPowFloat([In] float x,[In] float y)</unmanaged>
        /// <unmanaged-short>igImPowFloat</unmanaged-short>
        public static unsafe System.Single ImPowFloat(System.Single x, System.Single y)
        {
            System.Single __result__;
            __result__ = igImPowFloat_(x, y);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImPowFloat", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float igImPowFloat_(float param0, float param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "x">No documentation.</param>
        /// <param name = "y">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>double igImPowdouble([In] double x,[In] double y)</unmanaged>
        /// <unmanaged-short>igImPowdouble</unmanaged-short>
        public static unsafe System.Double ImPowdouble(System.Double x, System.Double y)
        {
            System.Double __result__;
            __result__ = igImPowdouble_(x, y);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImPowdouble", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern double igImPowdouble_(double param0, double param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "lhs">No documentation.</param>
        /// <param name = "rhs">No documentation.</param>
        /// <unmanaged>void igImMin([In] ImVec2* pOut,[In] const ImVec2 lhs,[In] const ImVec2 rhs)</unmanaged>
        /// <unmanaged-short>igImMin</unmanaged-short>
        public static unsafe void ImMin(DearImguiSharp.ImVec2 outRef, DearImguiSharp.ImVec2 lhs, DearImguiSharp.ImVec2 rhs)
        {
            igImMin_(&outRef, lhs, rhs);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImMin", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igImMin_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "lhs">No documentation.</param>
        /// <param name = "rhs">No documentation.</param>
        /// <unmanaged>void igImMax([In] ImVec2* pOut,[In] const ImVec2 lhs,[In] const ImVec2 rhs)</unmanaged>
        /// <unmanaged-short>igImMax</unmanaged-short>
        public static unsafe void ImMax(DearImguiSharp.ImVec2 outRef, DearImguiSharp.ImVec2 lhs, DearImguiSharp.ImVec2 rhs)
        {
            igImMax_(&outRef, lhs, rhs);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImMax", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igImMax_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <param name = "mn">No documentation.</param>
        /// <param name = "mx">No documentation.</param>
        /// <unmanaged>void igImClamp([In] ImVec2* pOut,[In] const ImVec2 v,[In] const ImVec2 mn,[In] ImVec2 mx)</unmanaged>
        /// <unmanaged-short>igImClamp</unmanaged-short>
        public static unsafe void ImClamp(DearImguiSharp.ImVec2 outRef, DearImguiSharp.ImVec2 v, DearImguiSharp.ImVec2 mn, DearImguiSharp.ImVec2 mx)
        {
            igImClamp_(&outRef, v, mn, mx);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImClamp", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igImClamp_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2, DearImguiSharp.ImVec2 param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "a">No documentation.</param>
        /// <param name = "b">No documentation.</param>
        /// <param name = "t">No documentation.</param>
        /// <unmanaged>void igImLerpVec2Float([In] ImVec2* pOut,[In] const ImVec2 a,[In] const ImVec2 b,[In] float t)</unmanaged>
        /// <unmanaged-short>igImLerpVec2Float</unmanaged-short>
        public static unsafe void ImLerpVec2Float(DearImguiSharp.ImVec2 outRef, DearImguiSharp.ImVec2 a, DearImguiSharp.ImVec2 b, System.Single t)
        {
            igImLerpVec2Float_(&outRef, a, b, t);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImLerpVec2Float", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igImLerpVec2Float_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2, float param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "a">No documentation.</param>
        /// <param name = "b">No documentation.</param>
        /// <param name = "t">No documentation.</param>
        /// <unmanaged>void igImLerpVec2Vec2([In] ImVec2* pOut,[In] const ImVec2 a,[In] const ImVec2 b,[In] const ImVec2 t)</unmanaged>
        /// <unmanaged-short>igImLerpVec2Vec2</unmanaged-short>
        public static unsafe void ImLerpVec2Vec2(DearImguiSharp.ImVec2 outRef, DearImguiSharp.ImVec2 a, DearImguiSharp.ImVec2 b, DearImguiSharp.ImVec2 t)
        {
            igImLerpVec2Vec2_(&outRef, a, b, t);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImLerpVec2Vec2", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igImLerpVec2Vec2_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2, DearImguiSharp.ImVec2 param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "a">No documentation.</param>
        /// <param name = "b">No documentation.</param>
        /// <param name = "t">No documentation.</param>
        /// <unmanaged>void igImLerpVec4([In] ImVec4* pOut,[In] const ImVec4 a,[In] const ImVec4 b,[In] float t)</unmanaged>
        /// <unmanaged-short>igImLerpVec4</unmanaged-short>
        public static unsafe void ImLerpVec4(DearImguiSharp.ImVec4 outRef, DearImguiSharp.ImVec4 a, DearImguiSharp.ImVec4 b, System.Single t)
        {
            igImLerpVec4_(&outRef, a, b, t);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImLerpVec4", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igImLerpVec4_(void *param0, DearImguiSharp.ImVec4 param1, DearImguiSharp.ImVec4 param2, float param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "f">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float igImSaturate([In] float f)</unmanaged>
        /// <unmanaged-short>igImSaturate</unmanaged-short>
        public static unsafe System.Single ImSaturate(System.Single f)
        {
            System.Single __result__;
            __result__ = igImSaturate_(f);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImSaturate", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float igImSaturate_(float param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "lhs">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float igImLengthSqrVec2([In] const ImVec2 lhs)</unmanaged>
        /// <unmanaged-short>igImLengthSqrVec2</unmanaged-short>
        public static unsafe System.Single ImLengthSqrVec2(DearImguiSharp.ImVec2 lhs)
        {
            System.Single __result__;
            __result__ = igImLengthSqrVec2_(lhs);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImLengthSqrVec2", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float igImLengthSqrVec2_(DearImguiSharp.ImVec2 param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "lhs">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float igImLengthSqrVec4([In] const ImVec4 lhs)</unmanaged>
        /// <unmanaged-short>igImLengthSqrVec4</unmanaged-short>
        public static unsafe System.Single ImLengthSqrVec4(DearImguiSharp.ImVec4 lhs)
        {
            System.Single __result__;
            __result__ = igImLengthSqrVec4_(lhs);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImLengthSqrVec4", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float igImLengthSqrVec4_(DearImguiSharp.ImVec4 param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "lhs">No documentation.</param>
        /// <param name = "failValue">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float igImInvLength([In] const ImVec2 lhs,[In] float fail_value)</unmanaged>
        /// <unmanaged-short>igImInvLength</unmanaged-short>
        public static unsafe System.Single ImInvLength(DearImguiSharp.ImVec2 lhs, System.Single failValue)
        {
            System.Single __result__;
            __result__ = igImInvLength_(lhs, failValue);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImInvLength", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float igImInvLength_(DearImguiSharp.ImVec2 param0, float param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "f">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float igImFloorFloat([In] float f)</unmanaged>
        /// <unmanaged-short>igImFloorFloat</unmanaged-short>
        public static unsafe System.Single ImFloorFloat(System.Single f)
        {
            System.Single __result__;
            __result__ = igImFloorFloat_(f);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImFloorFloat", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float igImFloorFloat_(float param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <unmanaged>void igImFloorVec2([In] ImVec2* pOut,[In] const ImVec2 v)</unmanaged>
        /// <unmanaged-short>igImFloorVec2</unmanaged-short>
        public static unsafe void ImFloorVec2(DearImguiSharp.ImVec2 outRef, DearImguiSharp.ImVec2 v)
        {
            igImFloorVec2_(&outRef, v);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImFloorVec2", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igImFloorVec2_(void *param0, DearImguiSharp.ImVec2 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "a">No documentation.</param>
        /// <param name = "b">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>int igImModPositive([In] int a,[In] int b)</unmanaged>
        /// <unmanaged-short>igImModPositive</unmanaged-short>
        public static unsafe System.Int32 ImModPositive(System.Int32 a, System.Int32 b)
        {
            System.Int32 __result__;
            __result__ = igImModPositive_(a, b);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImModPositive", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern int igImModPositive_(int param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "a">No documentation.</param>
        /// <param name = "b">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float igImDot([In] const ImVec2 a,[In] const ImVec2 b)</unmanaged>
        /// <unmanaged-short>igImDot</unmanaged-short>
        public static unsafe System.Single ImDot(DearImguiSharp.ImVec2 a, DearImguiSharp.ImVec2 b)
        {
            System.Single __result__;
            __result__ = igImDot_(a, b);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImDot", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float igImDot_(DearImguiSharp.ImVec2 param0, DearImguiSharp.ImVec2 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <param name = "cosA">No documentation.</param>
        /// <param name = "sinA">No documentation.</param>
        /// <unmanaged>void igImRotate([In] ImVec2* pOut,[In] const ImVec2 v,[In] float cos_a,[In] float sin_a)</unmanaged>
        /// <unmanaged-short>igImRotate</unmanaged-short>
        public static unsafe void ImRotate(DearImguiSharp.ImVec2 outRef, DearImguiSharp.ImVec2 v, System.Single cosA, System.Single sinA)
        {
            igImRotate_(&outRef, v, cosA, sinA);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImRotate", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igImRotate_(void *param0, DearImguiSharp.ImVec2 param1, float param2, float param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "current">No documentation.</param>
        /// <param name = "target">No documentation.</param>
        /// <param name = "speed">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float igImLinearSweep([In] float current,[In] float target,[In] float speed)</unmanaged>
        /// <unmanaged-short>igImLinearSweep</unmanaged-short>
        public static unsafe System.Single ImLinearSweep(System.Single current, System.Single target, System.Single speed)
        {
            System.Single __result__;
            __result__ = igImLinearSweep_(current, target, speed);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImLinearSweep", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float igImLinearSweep_(float param0, float param1, float param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "lhs">No documentation.</param>
        /// <param name = "rhs">No documentation.</param>
        /// <unmanaged>void igImMul([In] ImVec2* pOut,[In] const ImVec2 lhs,[In] const ImVec2 rhs)</unmanaged>
        /// <unmanaged-short>igImMul</unmanaged-short>
        public static unsafe void ImMul(DearImguiSharp.ImVec2 outRef, DearImguiSharp.ImVec2 lhs, DearImguiSharp.ImVec2 rhs)
        {
            igImMul_(&outRef, lhs, rhs);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImMul", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igImMul_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "p1">No documentation.</param>
        /// <param name = "p2">No documentation.</param>
        /// <param name = "p3">No documentation.</param>
        /// <param name = "p4">No documentation.</param>
        /// <param name = "t">No documentation.</param>
        /// <unmanaged>void igImBezierCalc([In] ImVec2* pOut,[In] const ImVec2 p1,[In] const ImVec2 p2,[In] const ImVec2 p3,[In] const ImVec2 p4,[In] float t)</unmanaged>
        /// <unmanaged-short>igImBezierCalc</unmanaged-short>
        public static unsafe void ImBezierCalc(DearImguiSharp.ImVec2 outRef, DearImguiSharp.ImVec2 p1, DearImguiSharp.ImVec2 p2, DearImguiSharp.ImVec2 p3, DearImguiSharp.ImVec2 p4, System.Single t)
        {
            igImBezierCalc_(&outRef, p1, p2, p3, p4, t);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImBezierCalc", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igImBezierCalc_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2, DearImguiSharp.ImVec2 param3, DearImguiSharp.ImVec2 param4, float param5);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "p1">No documentation.</param>
        /// <param name = "p2">No documentation.</param>
        /// <param name = "p3">No documentation.</param>
        /// <param name = "p4">No documentation.</param>
        /// <param name = "p">No documentation.</param>
        /// <param name = "numSegments">No documentation.</param>
        /// <unmanaged>void igImBezierClosestPoint([In] ImVec2* pOut,[In] const ImVec2 p1,[In] const ImVec2 p2,[In] const ImVec2 p3,[In] const ImVec2 p4,[In] const ImVec2 p,[In] int num_segments)</unmanaged>
        /// <unmanaged-short>igImBezierClosestPoint</unmanaged-short>
        public static unsafe void ImBezierClosestPoint(DearImguiSharp.ImVec2 outRef, DearImguiSharp.ImVec2 p1, DearImguiSharp.ImVec2 p2, DearImguiSharp.ImVec2 p3, DearImguiSharp.ImVec2 p4, DearImguiSharp.ImVec2 p, System.Int32 numSegments)
        {
            igImBezierClosestPoint_(&outRef, p1, p2, p3, p4, p, numSegments);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImBezierClosestPoint", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igImBezierClosestPoint_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2, DearImguiSharp.ImVec2 param3, DearImguiSharp.ImVec2 param4, DearImguiSharp.ImVec2 param5, int param6);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "p1">No documentation.</param>
        /// <param name = "p2">No documentation.</param>
        /// <param name = "p3">No documentation.</param>
        /// <param name = "p4">No documentation.</param>
        /// <param name = "p">No documentation.</param>
        /// <param name = "tessTol">No documentation.</param>
        /// <unmanaged>void igImBezierClosestPointCasteljau([In] ImVec2* pOut,[In] const ImVec2 p1,[In] const ImVec2 p2,[In] const ImVec2 p3,[In] const ImVec2 p4,[In] const ImVec2 p,[In] float tess_tol)</unmanaged>
        /// <unmanaged-short>igImBezierClosestPointCasteljau</unmanaged-short>
        public static unsafe void ImBezierClosestPointCasteljau(DearImguiSharp.ImVec2 outRef, DearImguiSharp.ImVec2 p1, DearImguiSharp.ImVec2 p2, DearImguiSharp.ImVec2 p3, DearImguiSharp.ImVec2 p4, DearImguiSharp.ImVec2 p, System.Single tessTol)
        {
            igImBezierClosestPointCasteljau_(&outRef, p1, p2, p3, p4, p, tessTol);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImBezierClosestPointCasteljau", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igImBezierClosestPointCasteljau_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2, DearImguiSharp.ImVec2 param3, DearImguiSharp.ImVec2 param4, DearImguiSharp.ImVec2 param5, float param6);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "a">No documentation.</param>
        /// <param name = "b">No documentation.</param>
        /// <param name = "p">No documentation.</param>
        /// <unmanaged>void igImLineClosestPoint([In] ImVec2* pOut,[In] const ImVec2 a,[In] const ImVec2 b,[In] const ImVec2 p)</unmanaged>
        /// <unmanaged-short>igImLineClosestPoint</unmanaged-short>
        public static unsafe void ImLineClosestPoint(DearImguiSharp.ImVec2 outRef, DearImguiSharp.ImVec2 a, DearImguiSharp.ImVec2 b, DearImguiSharp.ImVec2 p)
        {
            igImLineClosestPoint_(&outRef, a, b, p);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImLineClosestPoint", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igImLineClosestPoint_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2, DearImguiSharp.ImVec2 param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "a">No documentation.</param>
        /// <param name = "b">No documentation.</param>
        /// <param name = "c">No documentation.</param>
        /// <param name = "p">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igImTriangleContainsPoint([In] const ImVec2 a,[In] const ImVec2 b,[In] const ImVec2 c,[In] const ImVec2 p)</unmanaged>
        /// <unmanaged-short>igImTriangleContainsPoint</unmanaged-short>
        public static unsafe System.Boolean ImTriangleContainsPoint(DearImguiSharp.ImVec2 a, DearImguiSharp.ImVec2 b, DearImguiSharp.ImVec2 c, DearImguiSharp.ImVec2 p)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igImTriangleContainsPoint_(a, b, c, p);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImTriangleContainsPoint", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igImTriangleContainsPoint_(DearImguiSharp.ImVec2 param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2, DearImguiSharp.ImVec2 param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "a">No documentation.</param>
        /// <param name = "b">No documentation.</param>
        /// <param name = "c">No documentation.</param>
        /// <param name = "p">No documentation.</param>
        /// <unmanaged>void igImTriangleClosestPoint([In] ImVec2* pOut,[In] const ImVec2 a,[In] const ImVec2 b,[In] const ImVec2 c,[In] const ImVec2 p)</unmanaged>
        /// <unmanaged-short>igImTriangleClosestPoint</unmanaged-short>
        public static unsafe void ImTriangleClosestPoint(DearImguiSharp.ImVec2 outRef, DearImguiSharp.ImVec2 a, DearImguiSharp.ImVec2 b, DearImguiSharp.ImVec2 c, DearImguiSharp.ImVec2 p)
        {
            igImTriangleClosestPoint_(&outRef, a, b, c, p);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImTriangleClosestPoint", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igImTriangleClosestPoint_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2, DearImguiSharp.ImVec2 param3, DearImguiSharp.ImVec2 param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "a">No documentation.</param>
        /// <param name = "b">No documentation.</param>
        /// <param name = "c">No documentation.</param>
        /// <param name = "p">No documentation.</param>
        /// <param name = "outU">No documentation.</param>
        /// <param name = "outV">No documentation.</param>
        /// <param name = "outW">No documentation.</param>
        /// <unmanaged>void igImTriangleBarycentricCoords([In] const ImVec2 a,[In] const ImVec2 b,[In] const ImVec2 c,[In] const ImVec2 p,[In] float out_u,[In] float out_v,[In] float out_w)</unmanaged>
        /// <unmanaged-short>igImTriangleBarycentricCoords</unmanaged-short>
        public static unsafe void ImTriangleBarycentricCoords(DearImguiSharp.ImVec2 a, DearImguiSharp.ImVec2 b, DearImguiSharp.ImVec2 c, DearImguiSharp.ImVec2 p, System.Single outU, System.Single outV, System.Single outW)
        {
            igImTriangleBarycentricCoords_(a, b, c, p, outU, outV, outW);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImTriangleBarycentricCoords", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igImTriangleBarycentricCoords_(DearImguiSharp.ImVec2 param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2, DearImguiSharp.ImVec2 param3, float param4, float param5, float param6);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "a">No documentation.</param>
        /// <param name = "b">No documentation.</param>
        /// <param name = "c">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float igImTriangleArea([In] const ImVec2 a,[In] const ImVec2 b,[In] const ImVec2 c)</unmanaged>
        /// <unmanaged-short>igImTriangleArea</unmanaged-short>
        public static unsafe System.Single ImTriangleArea(DearImguiSharp.ImVec2 a, DearImguiSharp.ImVec2 b, DearImguiSharp.ImVec2 c)
        {
            System.Single __result__;
            __result__ = igImTriangleArea_(a, b, c);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImTriangleArea", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float igImTriangleArea_(DearImguiSharp.ImVec2 param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "dx">No documentation.</param>
        /// <param name = "dy">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>int igImGetDirQuadrantFromDelta([In] float dx,[In] float dy)</unmanaged>
        /// <unmanaged-short>igImGetDirQuadrantFromDelta</unmanaged-short>
        public static unsafe System.Int32 ImGetDirQuadrantFromDelta(System.Single dx, System.Single dy)
        {
            System.Int32 __result__;
            __result__ = igImGetDirQuadrantFromDelta_(dx, dy);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImGetDirQuadrantFromDelta", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern int igImGetDirQuadrantFromDelta_(float param0, float param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImBoolVector* ImBoolVector_ImBoolVector()</unmanaged>
        /// <unmanaged-short>ImBoolVector_ImBoolVector</unmanaged-short>
        public static unsafe DearImguiSharp.ImBoolVector ImBoolVectorImBoolVector()
        {
            DearImguiSharp.ImBoolVector __result__;
            ImBoolVector_ImBoolVector_(&__result__);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImBoolVector_ImBoolVector", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImBoolVector_ImBoolVector_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImBoolVector_destroy([In] ImBoolVector* self)</unmanaged>
        /// <unmanaged-short>ImBoolVector_destroy</unmanaged-short>
        public static unsafe void ImBoolVectorDestroy(DearImguiSharp.ImBoolVector self)
        {
            ImBoolVector_destroy_(&self);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImBoolVector_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImBoolVector_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "sz">No documentation.</param>
        /// <unmanaged>void ImBoolVector_Resize([In] ImBoolVector* self,[In] int sz)</unmanaged>
        /// <unmanaged-short>ImBoolVector_Resize</unmanaged-short>
        public static unsafe void ImBoolVectorResize(DearImguiSharp.ImBoolVector self, System.Int32 sz)
        {
            ImBoolVector_Resize_(&self, sz);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImBoolVector_Resize", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImBoolVector_Resize_(void *param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImBoolVector_Clear([In] ImBoolVector* self)</unmanaged>
        /// <unmanaged-short>ImBoolVector_Clear</unmanaged-short>
        public static unsafe void ImBoolVectorClear(DearImguiSharp.ImBoolVector self)
        {
            ImBoolVector_Clear_(&self);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImBoolVector_Clear", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImBoolVector_Clear_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "n">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool ImBoolVector_GetBit([In] ImBoolVector* self,[In] int n)</unmanaged>
        /// <unmanaged-short>ImBoolVector_GetBit</unmanaged-short>
        public static unsafe System.Boolean ImBoolVectorGetBit(DearImguiSharp.ImBoolVector self, System.Int32 n)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = ImBoolVector_GetBit_(&self, n);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImBoolVector_GetBit", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte ImBoolVector_GetBit_(void *param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "n">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <unmanaged>void ImBoolVector_SetBit([In] ImBoolVector* self,[In] int n,[In] bool v)</unmanaged>
        /// <unmanaged-short>ImBoolVector_SetBit</unmanaged-short>
        public static unsafe void ImBoolVectorSetBit(DearImguiSharp.ImBoolVector self, System.Int32 n, System.Boolean v)
        {
            System.Byte v_;
            v_ = (System.Byte)(v ? 1 : 0);
            ImBoolVector_SetBit_(&self, n, v_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImBoolVector_SetBit", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImBoolVector_SetBit_(void *param0, int param1, System.Byte param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImVec1* ImVec1_ImVec1Nil()</unmanaged>
        /// <unmanaged-short>ImVec1_ImVec1Nil</unmanaged-short>
        public static unsafe DearImguiSharp.ImVec1 ImVec1ImVec1Nil()
        {
            DearImguiSharp.ImVec1 __result__;
            __result__ = ImVec1_ImVec1Nil_();
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImVec1_ImVec1Nil", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern DearImguiSharp.ImVec1 ImVec1_ImVec1Nil_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImVec1_destroy([In] ImVec1* self)</unmanaged>
        /// <unmanaged-short>ImVec1_destroy</unmanaged-short>
        public static unsafe void ImVec1Destroy(DearImguiSharp.ImVec1 self)
        {
            ImVec1_destroy_(&self);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImVec1_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImVec1_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "x">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImVec1* ImVec1_ImVec1Float([In] float _x)</unmanaged>
        /// <unmanaged-short>ImVec1_ImVec1Float</unmanaged-short>
        public static unsafe DearImguiSharp.ImVec1 ImVec1ImVec1Float(System.Single x)
        {
            DearImguiSharp.ImVec1 __result__;
            __result__ = ImVec1_ImVec1Float_(x);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImVec1_ImVec1Float", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern DearImguiSharp.ImVec1 ImVec1_ImVec1Float_(float param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImVec2ih* ImVec2ih_ImVec2ihNil()</unmanaged>
        /// <unmanaged-short>ImVec2ih_ImVec2ihNil</unmanaged-short>
        public static unsafe DearImguiSharp.ImVec2ih ImVec2ihImVec2ihNil()
        {
            DearImguiSharp.ImVec2ih __result__;
            __result__ = ImVec2ih_ImVec2ihNil_();
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImVec2ih_ImVec2ihNil", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern DearImguiSharp.ImVec2ih ImVec2ih_ImVec2ihNil_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImVec2ih_destroy([In] ImVec2ih* self)</unmanaged>
        /// <unmanaged-short>ImVec2ih_destroy</unmanaged-short>
        public static unsafe void ImVec2ihDestroy(DearImguiSharp.ImVec2ih self)
        {
            ImVec2ih_destroy_(&self);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImVec2ih_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImVec2ih_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "x">No documentation.</param>
        /// <param name = "y">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImVec2ih* ImVec2ih_ImVec2ihshort([In] short _x,[In] short _y)</unmanaged>
        /// <unmanaged-short>ImVec2ih_ImVec2ihshort</unmanaged-short>
        public static unsafe DearImguiSharp.ImVec2ih ImVec2ihImVec2ihshort(System.Int16 x, System.Int16 y)
        {
            DearImguiSharp.ImVec2ih __result__;
            __result__ = ImVec2ih_ImVec2ihshort_(x, y);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImVec2ih_ImVec2ihshort", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern DearImguiSharp.ImVec2ih ImVec2ih_ImVec2ihshort_(short param0, short param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "rhs">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImVec2ih* ImVec2ih_ImVec2ihVec2([In] const ImVec2 rhs)</unmanaged>
        /// <unmanaged-short>ImVec2ih_ImVec2ihVec2</unmanaged-short>
        public static unsafe DearImguiSharp.ImVec2ih ImVec2ihImVec2ihVec2(DearImguiSharp.ImVec2 rhs)
        {
            DearImguiSharp.ImVec2ih __result__;
            __result__ = ImVec2ih_ImVec2ihVec2_(rhs);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImVec2ih_ImVec2ihVec2", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern DearImguiSharp.ImVec2ih ImVec2ih_ImVec2ihVec2_(DearImguiSharp.ImVec2 param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImRect* ImRect_ImRectNil()</unmanaged>
        /// <unmanaged-short>ImRect_ImRectNil</unmanaged-short>
        public static unsafe DearImguiSharp.ImRect ImRectImRectNil()
        {
            DearImguiSharp.ImRect __result__;
            ImRect_ImRectNil_(&__result__);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImRect_ImRectNil", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImRect_ImRectNil_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImRect_destroy([In] ImRect* self)</unmanaged>
        /// <unmanaged-short>ImRect_destroy</unmanaged-short>
        public static unsafe void ImRectDestroy(DearImguiSharp.ImRect self)
        {
            ImRect_destroy_(&self);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImRect_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImRect_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "min">No documentation.</param>
        /// <param name = "max">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImRect* ImRect_ImRectVec2([In] const ImVec2 min,[In] const ImVec2 max)</unmanaged>
        /// <unmanaged-short>ImRect_ImRectVec2</unmanaged-short>
        public static unsafe DearImguiSharp.ImRect ImRectImRectVec2(DearImguiSharp.ImVec2 min, DearImguiSharp.ImVec2 max)
        {
            DearImguiSharp.ImRect __result__;
            ImRect_ImRectVec2_(&__result__, min, max);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImRect_ImRectVec2", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImRect_ImRectVec2_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "v">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImRect* ImRect_ImRectVec4([In] const ImVec4 v)</unmanaged>
        /// <unmanaged-short>ImRect_ImRectVec4</unmanaged-short>
        public static unsafe DearImguiSharp.ImRect ImRectImRectVec4(DearImguiSharp.ImVec4 v)
        {
            DearImguiSharp.ImRect __result__;
            ImRect_ImRectVec4_(&__result__, v);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImRect_ImRectVec4", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImRect_ImRectVec4_(void *param0, DearImguiSharp.ImVec4 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "x1">No documentation.</param>
        /// <param name = "y1">No documentation.</param>
        /// <param name = "x2">No documentation.</param>
        /// <param name = "y2">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImRect* ImRect_ImRectFloat([In] float x1,[In] float y1,[In] float x2,[In] float y2)</unmanaged>
        /// <unmanaged-short>ImRect_ImRectFloat</unmanaged-short>
        public static unsafe DearImguiSharp.ImRect ImRectImRectFloat(System.Single x1, System.Single y1, System.Single x2, System.Single y2)
        {
            DearImguiSharp.ImRect __result__;
            ImRect_ImRectFloat_(&__result__, x1, y1, x2, y2);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImRect_ImRectFloat", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImRect_ImRectFloat_(void *param0, float param1, float param2, float param3, float param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImRect_GetCenter([In] ImVec2* pOut,[In] ImRect* self)</unmanaged>
        /// <unmanaged-short>ImRect_GetCenter</unmanaged-short>
        public static unsafe void ImRectGetCenter(DearImguiSharp.ImVec2 outRef, DearImguiSharp.ImRect self)
        {
            ImRect_GetCenter_(&outRef, &self);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImRect_GetCenter", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImRect_GetCenter_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImRect_GetSize([In] ImVec2* pOut,[In] ImRect* self)</unmanaged>
        /// <unmanaged-short>ImRect_GetSize</unmanaged-short>
        public static unsafe void ImRectGetSize(DearImguiSharp.ImVec2 outRef, DearImguiSharp.ImRect self)
        {
            ImRect_GetSize_(&outRef, &self);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImRect_GetSize", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImRect_GetSize_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float ImRect_GetWidth([In] ImRect* self)</unmanaged>
        /// <unmanaged-short>ImRect_GetWidth</unmanaged-short>
        public static unsafe System.Single ImRectGetWidth(DearImguiSharp.ImRect self)
        {
            System.Single __result__;
            __result__ = ImRect_GetWidth_(&self);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImRect_GetWidth", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float ImRect_GetWidth_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float ImRect_GetHeight([In] ImRect* self)</unmanaged>
        /// <unmanaged-short>ImRect_GetHeight</unmanaged-short>
        public static unsafe System.Single ImRectGetHeight(DearImguiSharp.ImRect self)
        {
            System.Single __result__;
            __result__ = ImRect_GetHeight_(&self);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImRect_GetHeight", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float ImRect_GetHeight_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImRect_GetTL([In] ImVec2* pOut,[In] ImRect* self)</unmanaged>
        /// <unmanaged-short>ImRect_GetTL</unmanaged-short>
        public static unsafe void ImRectGetTL(DearImguiSharp.ImVec2 outRef, DearImguiSharp.ImRect self)
        {
            ImRect_GetTL_(&outRef, &self);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImRect_GetTL", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImRect_GetTL_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImRect_GetTR([In] ImVec2* pOut,[In] ImRect* self)</unmanaged>
        /// <unmanaged-short>ImRect_GetTR</unmanaged-short>
        public static unsafe void ImRectGetTR(DearImguiSharp.ImVec2 outRef, DearImguiSharp.ImRect self)
        {
            ImRect_GetTR_(&outRef, &self);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImRect_GetTR", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImRect_GetTR_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImRect_GetBL([In] ImVec2* pOut,[In] ImRect* self)</unmanaged>
        /// <unmanaged-short>ImRect_GetBL</unmanaged-short>
        public static unsafe void ImRectGetBL(DearImguiSharp.ImVec2 outRef, DearImguiSharp.ImRect self)
        {
            ImRect_GetBL_(&outRef, &self);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImRect_GetBL", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImRect_GetBL_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImRect_GetBR([In] ImVec2* pOut,[In] ImRect* self)</unmanaged>
        /// <unmanaged-short>ImRect_GetBR</unmanaged-short>
        public static unsafe void ImRectGetBR(DearImguiSharp.ImVec2 outRef, DearImguiSharp.ImRect self)
        {
            ImRect_GetBR_(&outRef, &self);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImRect_GetBR", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImRect_GetBR_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "p">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool ImRect_ContainsVec2([In] ImRect* self,[In] const ImVec2 p)</unmanaged>
        /// <unmanaged-short>ImRect_ContainsVec2</unmanaged-short>
        public static unsafe System.Boolean ImRectContainsVec2(DearImguiSharp.ImRect self, DearImguiSharp.ImVec2 p)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = ImRect_ContainsVec2_(&self, p);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImRect_ContainsVec2", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte ImRect_ContainsVec2_(void *param0, DearImguiSharp.ImVec2 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "r">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool ImRect_ContainsRect([In] ImRect* self,[In] const ImRect r)</unmanaged>
        /// <unmanaged-short>ImRect_ContainsRect</unmanaged-short>
        public static unsafe System.Boolean ImRectContainsRect(DearImguiSharp.ImRect self, DearImguiSharp.ImRect r)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = ImRect_ContainsRect_(&self, r);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImRect_ContainsRect", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte ImRect_ContainsRect_(void *param0, DearImguiSharp.ImRect param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "r">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool ImRect_Overlaps([In] ImRect* self,[In] const ImRect r)</unmanaged>
        /// <unmanaged-short>ImRect_Overlaps</unmanaged-short>
        public static unsafe System.Boolean ImRectOverlaps(DearImguiSharp.ImRect self, DearImguiSharp.ImRect r)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = ImRect_Overlaps_(&self, r);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImRect_Overlaps", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte ImRect_Overlaps_(void *param0, DearImguiSharp.ImRect param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "p">No documentation.</param>
        /// <unmanaged>void ImRect_AddVec2([In] ImRect* self,[In] const ImVec2 p)</unmanaged>
        /// <unmanaged-short>ImRect_AddVec2</unmanaged-short>
        public static unsafe void ImRectAddVec2(DearImguiSharp.ImRect self, DearImguiSharp.ImVec2 p)
        {
            ImRect_AddVec2_(&self, p);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImRect_AddVec2", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImRect_AddVec2_(void *param0, DearImguiSharp.ImVec2 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "r">No documentation.</param>
        /// <unmanaged>void ImRect_AddRect([In] ImRect* self,[In] const ImRect r)</unmanaged>
        /// <unmanaged-short>ImRect_AddRect</unmanaged-short>
        public static unsafe void ImRectAddRect(DearImguiSharp.ImRect self, DearImguiSharp.ImRect r)
        {
            ImRect_AddRect_(&self, r);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImRect_AddRect", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImRect_AddRect_(void *param0, DearImguiSharp.ImRect param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "amount">No documentation.</param>
        /// <unmanaged>void ImRect_ExpandFloat([In] ImRect* self,[In] const float amount)</unmanaged>
        /// <unmanaged-short>ImRect_ExpandFloat</unmanaged-short>
        public static unsafe void ImRectExpandFloat(DearImguiSharp.ImRect self, System.Single amount)
        {
            ImRect_ExpandFloat_(&self, amount);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImRect_ExpandFloat", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImRect_ExpandFloat_(void *param0, float param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "amount">No documentation.</param>
        /// <unmanaged>void ImRect_ExpandVec2([In] ImRect* self,[In] const ImVec2 amount)</unmanaged>
        /// <unmanaged-short>ImRect_ExpandVec2</unmanaged-short>
        public static unsafe void ImRectExpandVec2(DearImguiSharp.ImRect self, DearImguiSharp.ImVec2 amount)
        {
            ImRect_ExpandVec2_(&self, amount);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImRect_ExpandVec2", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImRect_ExpandVec2_(void *param0, DearImguiSharp.ImVec2 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "d">No documentation.</param>
        /// <unmanaged>void ImRect_Translate([In] ImRect* self,[In] const ImVec2 d)</unmanaged>
        /// <unmanaged-short>ImRect_Translate</unmanaged-short>
        public static unsafe void ImRectTranslate(DearImguiSharp.ImRect self, DearImguiSharp.ImVec2 d)
        {
            ImRect_Translate_(&self, d);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImRect_Translate", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImRect_Translate_(void *param0, DearImguiSharp.ImVec2 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "dx">No documentation.</param>
        /// <unmanaged>void ImRect_TranslateX([In] ImRect* self,[In] float dx)</unmanaged>
        /// <unmanaged-short>ImRect_TranslateX</unmanaged-short>
        public static unsafe void ImRectTranslateX(DearImguiSharp.ImRect self, System.Single dx)
        {
            ImRect_TranslateX_(&self, dx);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImRect_TranslateX", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImRect_TranslateX_(void *param0, float param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "dy">No documentation.</param>
        /// <unmanaged>void ImRect_TranslateY([In] ImRect* self,[In] float dy)</unmanaged>
        /// <unmanaged-short>ImRect_TranslateY</unmanaged-short>
        public static unsafe void ImRectTranslateY(DearImguiSharp.ImRect self, System.Single dy)
        {
            ImRect_TranslateY_(&self, dy);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImRect_TranslateY", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImRect_TranslateY_(void *param0, float param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "r">No documentation.</param>
        /// <unmanaged>void ImRect_ClipWith([In] ImRect* self,[In] const ImRect r)</unmanaged>
        /// <unmanaged-short>ImRect_ClipWith</unmanaged-short>
        public static unsafe void ImRectClipWith(DearImguiSharp.ImRect self, DearImguiSharp.ImRect r)
        {
            ImRect_ClipWith_(&self, r);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImRect_ClipWith", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImRect_ClipWith_(void *param0, DearImguiSharp.ImRect param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "r">No documentation.</param>
        /// <unmanaged>void ImRect_ClipWithFull([In] ImRect* self,[In] const ImRect r)</unmanaged>
        /// <unmanaged-short>ImRect_ClipWithFull</unmanaged-short>
        public static unsafe void ImRectClipWithFull(DearImguiSharp.ImRect self, DearImguiSharp.ImRect r)
        {
            ImRect_ClipWithFull_(&self, r);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImRect_ClipWithFull", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImRect_ClipWithFull_(void *param0, DearImguiSharp.ImRect param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImRect_Floor([In] ImRect* self)</unmanaged>
        /// <unmanaged-short>ImRect_Floor</unmanaged-short>
        public static unsafe void ImRectFloor(DearImguiSharp.ImRect self)
        {
            ImRect_Floor_(&self);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImRect_Floor", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImRect_Floor_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool ImRect_IsInverted([In] ImRect* self)</unmanaged>
        /// <unmanaged-short>ImRect_IsInverted</unmanaged-short>
        public static unsafe System.Boolean ImRectIsInverted(DearImguiSharp.ImRect self)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = ImRect_IsInverted_(&self);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImRect_IsInverted", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte ImRect_IsInverted_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "idx">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiStyleMod* ImGuiStyleMod_ImGuiStyleModInt([In] int idx,[In] int v)</unmanaged>
        /// <unmanaged-short>ImGuiStyleMod_ImGuiStyleModInt</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiStyleMod ImGuiStyleModImGuiStyleModInt(System.Int32 idx, System.Int32 v)
        {
            DearImguiSharp.ImGuiStyleMod __result__;
            DearImguiSharp.ImGuiStyleMod.__Native __result__native = default (DearImguiSharp.ImGuiStyleMod.__Native);
            __result__ = default (DearImguiSharp.ImGuiStyleMod);
            __result__native = ImGuiStyleMod_ImGuiStyleModInt_(idx, v);
            __result__.__MarshalFrom(ref __result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiStyleMod_ImGuiStyleModInt", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern DearImguiSharp.ImGuiStyleMod.__Native ImGuiStyleMod_ImGuiStyleModInt_(int param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiStyleMod_destroy([In] ImGuiStyleMod* self)</unmanaged>
        /// <unmanaged-short>ImGuiStyleMod_destroy</unmanaged-short>
        public static unsafe void ImGuiStyleModDestroy(ref DearImguiSharp.ImGuiStyleMod self)
        {
            DearImguiSharp.ImGuiStyleMod.__Native self_ = default (DearImguiSharp.ImGuiStyleMod.__Native);
            self.__MarshalTo(ref self_);
            ImGuiStyleMod_destroy_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiStyleMod_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiStyleMod_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "idx">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiStyleMod* ImGuiStyleMod_ImGuiStyleModFloat([In] int idx,[In] float v)</unmanaged>
        /// <unmanaged-short>ImGuiStyleMod_ImGuiStyleModFloat</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiStyleMod ImGuiStyleModImGuiStyleModFloat(System.Int32 idx, System.Single v)
        {
            DearImguiSharp.ImGuiStyleMod __result__;
            DearImguiSharp.ImGuiStyleMod.__Native __result__native = default (DearImguiSharp.ImGuiStyleMod.__Native);
            __result__ = default (DearImguiSharp.ImGuiStyleMod);
            __result__native = ImGuiStyleMod_ImGuiStyleModFloat_(idx, v);
            __result__.__MarshalFrom(ref __result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiStyleMod_ImGuiStyleModFloat", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern DearImguiSharp.ImGuiStyleMod.__Native ImGuiStyleMod_ImGuiStyleModFloat_(int param0, float param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "idx">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiStyleMod* ImGuiStyleMod_ImGuiStyleModVec2([In] int idx,[In] ImVec2 v)</unmanaged>
        /// <unmanaged-short>ImGuiStyleMod_ImGuiStyleModVec2</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiStyleMod ImGuiStyleModImGuiStyleModVec2(System.Int32 idx, DearImguiSharp.ImVec2 v)
        {
            DearImguiSharp.ImGuiStyleMod __result__;
            DearImguiSharp.ImGuiStyleMod.__Native __result__native = default (DearImguiSharp.ImGuiStyleMod.__Native);
            __result__ = default (DearImguiSharp.ImGuiStyleMod);
            __result__native = ImGuiStyleMod_ImGuiStyleModVec2_(idx, v);
            __result__.__MarshalFrom(ref __result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiStyleMod_ImGuiStyleModVec2", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern DearImguiSharp.ImGuiStyleMod.__Native ImGuiStyleMod_ImGuiStyleModVec2_(int param0, DearImguiSharp.ImVec2 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiMenuColumns* ImGuiMenuColumns_ImGuiMenuColumns()</unmanaged>
        /// <unmanaged-short>ImGuiMenuColumns_ImGuiMenuColumns</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiMenuColumns ImGuiMenuColumnsImGuiMenuColumns()
        {
            DearImguiSharp.ImGuiMenuColumns __result__;
            DearImguiSharp.ImGuiMenuColumns.__Native __result__native = default (DearImguiSharp.ImGuiMenuColumns.__Native);
            __result__ = default (DearImguiSharp.ImGuiMenuColumns);
            ImGuiMenuColumns_ImGuiMenuColumns_(&__result__native);
            __result__.__MarshalFrom(ref __result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiMenuColumns_ImGuiMenuColumns", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImGuiMenuColumns_ImGuiMenuColumns_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiMenuColumns_destroy([In] ImGuiMenuColumns* self)</unmanaged>
        /// <unmanaged-short>ImGuiMenuColumns_destroy</unmanaged-short>
        public static unsafe void ImGuiMenuColumnsDestroy(ref DearImguiSharp.ImGuiMenuColumns self)
        {
            DearImguiSharp.ImGuiMenuColumns.__Native self_ = default (DearImguiSharp.ImGuiMenuColumns.__Native);
            self.__MarshalTo(ref self_);
            ImGuiMenuColumns_destroy_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiMenuColumns_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiMenuColumns_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "count">No documentation.</param>
        /// <param name = "spacing">No documentation.</param>
        /// <param name = "clear">No documentation.</param>
        /// <unmanaged>void ImGuiMenuColumns_Update([In] ImGuiMenuColumns* self,[In] int count,[In] float spacing,[In] bool clear)</unmanaged>
        /// <unmanaged-short>ImGuiMenuColumns_Update</unmanaged-short>
        public static unsafe void ImGuiMenuColumnsUpdate(ref DearImguiSharp.ImGuiMenuColumns self, System.Int32 count, System.Single spacing, System.Boolean clear)
        {
            DearImguiSharp.ImGuiMenuColumns.__Native self_ = default (DearImguiSharp.ImGuiMenuColumns.__Native);
            System.Byte clear_;
            self.__MarshalTo(ref self_);
            clear_ = (System.Byte)(clear ? 1 : 0);
            ImGuiMenuColumns_Update_(&self_, count, spacing, clear_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiMenuColumns_Update", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiMenuColumns_Update_(void *param0, int param1, float param2, System.Byte param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "w0">No documentation.</param>
        /// <param name = "w1">No documentation.</param>
        /// <param name = "w2">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float ImGuiMenuColumns_DeclColumns([In] ImGuiMenuColumns* self,[In] float w0,[In] float w1,[In] float w2)</unmanaged>
        /// <unmanaged-short>ImGuiMenuColumns_DeclColumns</unmanaged-short>
        public static unsafe System.Single ImGuiMenuColumnsDeclColumns(ref DearImguiSharp.ImGuiMenuColumns self, System.Single w0, System.Single w1, System.Single w2)
        {
            DearImguiSharp.ImGuiMenuColumns.__Native self_ = default (DearImguiSharp.ImGuiMenuColumns.__Native);
            System.Single __result__;
            self.__MarshalTo(ref self_);
            __result__ = ImGuiMenuColumns_DeclColumns_(&self_, w0, w1, w2);
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiMenuColumns_DeclColumns", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float ImGuiMenuColumns_DeclColumns_(void *param0, float param1, float param2, float param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "availW">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float ImGuiMenuColumns_CalcExtraSpace([In] ImGuiMenuColumns* self,[In] float avail_w)</unmanaged>
        /// <unmanaged-short>ImGuiMenuColumns_CalcExtraSpace</unmanaged-short>
        public static unsafe System.Single ImGuiMenuColumnsCalcExtraSpace(ref DearImguiSharp.ImGuiMenuColumns self, System.Single availW)
        {
            DearImguiSharp.ImGuiMenuColumns.__Native self_ = default (DearImguiSharp.ImGuiMenuColumns.__Native);
            System.Single __result__;
            self.__MarshalTo(ref self_);
            __result__ = ImGuiMenuColumns_CalcExtraSpace_(&self_, availW);
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiMenuColumns_CalcExtraSpace", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float ImGuiMenuColumns_CalcExtraSpace_(void *param0, float param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiInputTextState* ImGuiInputTextState_ImGuiInputTextState()</unmanaged>
        /// <unmanaged-short>ImGuiInputTextState_ImGuiInputTextState</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiInputTextState ImGuiInputTextStateImGuiInputTextState()
        {
            DearImguiSharp.ImGuiInputTextState __result__;
            DearImguiSharp.ImGuiInputTextState.__Native __result__native = default (DearImguiSharp.ImGuiInputTextState.__Native);
            __result__ = default (DearImguiSharp.ImGuiInputTextState);
            ImGuiInputTextState_ImGuiInputTextState_(&__result__native);
            __result__.__MarshalFrom(ref __result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiInputTextState_ImGuiInputTextState", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImGuiInputTextState_ImGuiInputTextState_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiInputTextState_destroy([In] ImGuiInputTextState* self)</unmanaged>
        /// <unmanaged-short>ImGuiInputTextState_destroy</unmanaged-short>
        public static unsafe void ImGuiInputTextStateDestroy(ref DearImguiSharp.ImGuiInputTextState self)
        {
            DearImguiSharp.ImGuiInputTextState.__Native self_ = default (DearImguiSharp.ImGuiInputTextState.__Native);
            self.__MarshalTo(ref self_);
            ImGuiInputTextState_destroy_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiInputTextState_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiInputTextState_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiInputTextState_ClearText([In] ImGuiInputTextState* self)</unmanaged>
        /// <unmanaged-short>ImGuiInputTextState_ClearText</unmanaged-short>
        public static unsafe void ImGuiInputTextStateClearText(ref DearImguiSharp.ImGuiInputTextState self)
        {
            DearImguiSharp.ImGuiInputTextState.__Native self_ = default (DearImguiSharp.ImGuiInputTextState.__Native);
            self.__MarshalTo(ref self_);
            ImGuiInputTextState_ClearText_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiInputTextState_ClearText", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiInputTextState_ClearText_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiInputTextState_ClearFreeMemory([In] ImGuiInputTextState* self)</unmanaged>
        /// <unmanaged-short>ImGuiInputTextState_ClearFreeMemory</unmanaged-short>
        public static unsafe void ImGuiInputTextStateClearFreeMemory(ref DearImguiSharp.ImGuiInputTextState self)
        {
            DearImguiSharp.ImGuiInputTextState.__Native self_ = default (DearImguiSharp.ImGuiInputTextState.__Native);
            self.__MarshalTo(ref self_);
            ImGuiInputTextState_ClearFreeMemory_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiInputTextState_ClearFreeMemory", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiInputTextState_ClearFreeMemory_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>int ImGuiInputTextState_GetUndoAvailCount([In] ImGuiInputTextState* self)</unmanaged>
        /// <unmanaged-short>ImGuiInputTextState_GetUndoAvailCount</unmanaged-short>
        public static unsafe System.Int32 ImGuiInputTextStateGetUndoAvailCount(ref DearImguiSharp.ImGuiInputTextState self)
        {
            DearImguiSharp.ImGuiInputTextState.__Native self_ = default (DearImguiSharp.ImGuiInputTextState.__Native);
            System.Int32 __result__;
            self.__MarshalTo(ref self_);
            __result__ = ImGuiInputTextState_GetUndoAvailCount_(&self_);
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiInputTextState_GetUndoAvailCount", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern int ImGuiInputTextState_GetUndoAvailCount_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>int ImGuiInputTextState_GetRedoAvailCount([In] ImGuiInputTextState* self)</unmanaged>
        /// <unmanaged-short>ImGuiInputTextState_GetRedoAvailCount</unmanaged-short>
        public static unsafe System.Int32 ImGuiInputTextStateGetRedoAvailCount(ref DearImguiSharp.ImGuiInputTextState self)
        {
            DearImguiSharp.ImGuiInputTextState.__Native self_ = default (DearImguiSharp.ImGuiInputTextState.__Native);
            System.Int32 __result__;
            self.__MarshalTo(ref self_);
            __result__ = ImGuiInputTextState_GetRedoAvailCount_(&self_);
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiInputTextState_GetRedoAvailCount", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern int ImGuiInputTextState_GetRedoAvailCount_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "key">No documentation.</param>
        /// <unmanaged>void ImGuiInputTextState_OnKeyPressed([In] ImGuiInputTextState* self,[In] int key)</unmanaged>
        /// <unmanaged-short>ImGuiInputTextState_OnKeyPressed</unmanaged-short>
        public static unsafe void ImGuiInputTextStateOnKeyPressed(ref DearImguiSharp.ImGuiInputTextState self, System.Int32 key)
        {
            DearImguiSharp.ImGuiInputTextState.__Native self_ = default (DearImguiSharp.ImGuiInputTextState.__Native);
            self.__MarshalTo(ref self_);
            ImGuiInputTextState_OnKeyPressed_(&self_, key);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiInputTextState_OnKeyPressed", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiInputTextState_OnKeyPressed_(void *param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiInputTextState_CursorAnimReset([In] ImGuiInputTextState* self)</unmanaged>
        /// <unmanaged-short>ImGuiInputTextState_CursorAnimReset</unmanaged-short>
        public static unsafe void ImGuiInputTextStateCursorAnimReset(ref DearImguiSharp.ImGuiInputTextState self)
        {
            DearImguiSharp.ImGuiInputTextState.__Native self_ = default (DearImguiSharp.ImGuiInputTextState.__Native);
            self.__MarshalTo(ref self_);
            ImGuiInputTextState_CursorAnimReset_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiInputTextState_CursorAnimReset", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiInputTextState_CursorAnimReset_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiInputTextState_CursorClamp([In] ImGuiInputTextState* self)</unmanaged>
        /// <unmanaged-short>ImGuiInputTextState_CursorClamp</unmanaged-short>
        public static unsafe void ImGuiInputTextStateCursorClamp(ref DearImguiSharp.ImGuiInputTextState self)
        {
            DearImguiSharp.ImGuiInputTextState.__Native self_ = default (DearImguiSharp.ImGuiInputTextState.__Native);
            self.__MarshalTo(ref self_);
            ImGuiInputTextState_CursorClamp_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiInputTextState_CursorClamp", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiInputTextState_CursorClamp_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool ImGuiInputTextState_HasSelection([In] ImGuiInputTextState* self)</unmanaged>
        /// <unmanaged-short>ImGuiInputTextState_HasSelection</unmanaged-short>
        public static unsafe System.Boolean ImGuiInputTextStateHasSelection(ref DearImguiSharp.ImGuiInputTextState self)
        {
            DearImguiSharp.ImGuiInputTextState.__Native self_ = default (DearImguiSharp.ImGuiInputTextState.__Native);
            System.Boolean __result__;
            System.Byte __result__native;
            self.__MarshalTo(ref self_);
            __result__native = ImGuiInputTextState_HasSelection_(&self_);
            __result__ = __result__native != 0;
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiInputTextState_HasSelection", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte ImGuiInputTextState_HasSelection_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiInputTextState_ClearSelection([In] ImGuiInputTextState* self)</unmanaged>
        /// <unmanaged-short>ImGuiInputTextState_ClearSelection</unmanaged-short>
        public static unsafe void ImGuiInputTextStateClearSelection(ref DearImguiSharp.ImGuiInputTextState self)
        {
            DearImguiSharp.ImGuiInputTextState.__Native self_ = default (DearImguiSharp.ImGuiInputTextState.__Native);
            self.__MarshalTo(ref self_);
            ImGuiInputTextState_ClearSelection_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiInputTextState_ClearSelection", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiInputTextState_ClearSelection_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiInputTextState_SelectAll([In] ImGuiInputTextState* self)</unmanaged>
        /// <unmanaged-short>ImGuiInputTextState_SelectAll</unmanaged-short>
        public static unsafe void ImGuiInputTextStateSelectAll(ref DearImguiSharp.ImGuiInputTextState self)
        {
            DearImguiSharp.ImGuiInputTextState.__Native self_ = default (DearImguiSharp.ImGuiInputTextState.__Native);
            self.__MarshalTo(ref self_);
            ImGuiInputTextState_SelectAll_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiInputTextState_SelectAll", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiInputTextState_SelectAll_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiWindowSettings* ImGuiWindowSettings_ImGuiWindowSettings()</unmanaged>
        /// <unmanaged-short>ImGuiWindowSettings_ImGuiWindowSettings</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiWindowSettings ImGuiWindowSettingsImGuiWindowSettings()
        {
            DearImguiSharp.ImGuiWindowSettings __result__;
            ImGuiWindowSettings_ImGuiWindowSettings_(&__result__);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiWindowSettings_ImGuiWindowSettings", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImGuiWindowSettings_ImGuiWindowSettings_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiWindowSettings_destroy([In] ImGuiWindowSettings* self)</unmanaged>
        /// <unmanaged-short>ImGuiWindowSettings_destroy</unmanaged-short>
        public static unsafe void ImGuiWindowSettingsDestroy(DearImguiSharp.ImGuiWindowSettings self)
        {
            ImGuiWindowSettings_destroy_(&self);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiWindowSettings_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiWindowSettings_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>char* ImGuiWindowSettings_GetName([In] ImGuiWindowSettings* self)</unmanaged>
        /// <unmanaged-short>ImGuiWindowSettings_GetName</unmanaged-short>
        public static unsafe System.String ImGuiWindowSettingsGetName(DearImguiSharp.ImGuiWindowSettings self)
        {
            System.String __result__;
            System.IntPtr __result__native;
            __result__native = ImGuiWindowSettings_GetName_(&self);
            __result__ = System.Runtime.InteropServices.Marshal.PtrToStringAnsi(__result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiWindowSettings_GetName", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.IntPtr ImGuiWindowSettings_GetName_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiSettingsHandler* ImGuiSettingsHandler_ImGuiSettingsHandler()</unmanaged>
        /// <unmanaged-short>ImGuiSettingsHandler_ImGuiSettingsHandler</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiSettingsHandler ImGuiSettingsHandlerImGuiSettingsHandler()
        {
            DearImguiSharp.ImGuiSettingsHandler __result__;
            DearImguiSharp.ImGuiSettingsHandler.__Native __result__native = default (DearImguiSharp.ImGuiSettingsHandler.__Native);
            __result__ = default (DearImguiSharp.ImGuiSettingsHandler);
            ImGuiSettingsHandler_ImGuiSettingsHandler_(&__result__native);
            __result__.__MarshalFrom(ref __result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiSettingsHandler_ImGuiSettingsHandler", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImGuiSettingsHandler_ImGuiSettingsHandler_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiSettingsHandler_destroy([In] ImGuiSettingsHandler* self)</unmanaged>
        /// <unmanaged-short>ImGuiSettingsHandler_destroy</unmanaged-short>
        public static unsafe void ImGuiSettingsHandlerDestroy(ref DearImguiSharp.ImGuiSettingsHandler self)
        {
            DearImguiSharp.ImGuiSettingsHandler.__Native self_ = default (DearImguiSharp.ImGuiSettingsHandler.__Native);
            self.__MarshalTo(ref self_);
            ImGuiSettingsHandler_destroy_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiSettingsHandler_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiSettingsHandler_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiPopupData* ImGuiPopupData_ImGuiPopupData()</unmanaged>
        /// <unmanaged-short>ImGuiPopupData_ImGuiPopupData</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiPopupData ImGuiPopupDataImGuiPopupData()
        {
            DearImguiSharp.ImGuiPopupData __result__;
            ImGuiPopupData_ImGuiPopupData_(&__result__);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiPopupData_ImGuiPopupData", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImGuiPopupData_ImGuiPopupData_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiPopupData_destroy([In] ImGuiPopupData* self)</unmanaged>
        /// <unmanaged-short>ImGuiPopupData_destroy</unmanaged-short>
        public static unsafe void ImGuiPopupDataDestroy(ref DearImguiSharp.ImGuiPopupData self)
        {
            fixed (void *self_ = &self)
                ImGuiPopupData_destroy_(self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiPopupData_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiPopupData_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiColumnData* ImGuiColumnData_ImGuiColumnData()</unmanaged>
        /// <unmanaged-short>ImGuiColumnData_ImGuiColumnData</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiColumnData ImGuiColumnDataImGuiColumnData()
        {
            DearImguiSharp.ImGuiColumnData __result__;
            ImGuiColumnData_ImGuiColumnData_(&__result__);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiColumnData_ImGuiColumnData", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImGuiColumnData_ImGuiColumnData_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiColumnData_destroy([In] ImGuiColumnData* self)</unmanaged>
        /// <unmanaged-short>ImGuiColumnData_destroy</unmanaged-short>
        public static unsafe void ImGuiColumnDataDestroy(ref DearImguiSharp.ImGuiColumnData self)
        {
            fixed (void *self_ = &self)
                ImGuiColumnData_destroy_(self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiColumnData_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiColumnData_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiColumns* ImGuiColumns_ImGuiColumns()</unmanaged>
        /// <unmanaged-short>ImGuiColumns_ImGuiColumns</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiColumns ImGuiColumnsImGuiColumns()
        {
            DearImguiSharp.ImGuiColumns __result__;
            ImGuiColumns_ImGuiColumns_(&__result__);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiColumns_ImGuiColumns", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImGuiColumns_ImGuiColumns_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiColumns_destroy([In] ImGuiColumns* self)</unmanaged>
        /// <unmanaged-short>ImGuiColumns_destroy</unmanaged-short>
        public static unsafe void ImGuiColumnsDestroy(ref DearImguiSharp.ImGuiColumns self)
        {
            fixed (void *self_ = &self)
                ImGuiColumns_destroy_(self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiColumns_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiColumns_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiColumns_Clear([In] ImGuiColumns* self)</unmanaged>
        /// <unmanaged-short>ImGuiColumns_Clear</unmanaged-short>
        public static unsafe void ImGuiColumnsClear(ref DearImguiSharp.ImGuiColumns self)
        {
            fixed (void *self_ = &self)
                ImGuiColumns_Clear_(self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiColumns_Clear", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiColumns_Clear_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImDrawListSharedData* ImDrawListSharedData_ImDrawListSharedData()</unmanaged>
        /// <unmanaged-short>ImDrawListSharedData_ImDrawListSharedData</unmanaged-short>
        public static unsafe DearImguiSharp.ImDrawListSharedData ImDrawListSharedDataImDrawListSharedData()
        {
            DearImguiSharp.ImDrawListSharedData __result__;
            DearImguiSharp.ImDrawListSharedData.__Native __result__native = default (DearImguiSharp.ImDrawListSharedData.__Native);
            __result__ = default (DearImguiSharp.ImDrawListSharedData);
            ImDrawListSharedData_ImDrawListSharedData_(&__result__native);
            __result__.__MarshalFrom(ref __result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawListSharedData_ImDrawListSharedData", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImDrawListSharedData_ImDrawListSharedData_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImDrawListSharedData_destroy([In] ImDrawListSharedData* self)</unmanaged>
        /// <unmanaged-short>ImDrawListSharedData_destroy</unmanaged-short>
        public static unsafe void ImDrawListSharedDataDestroy(ref DearImguiSharp.ImDrawListSharedData self)
        {
            DearImguiSharp.ImDrawListSharedData.__Native self_ = default (DearImguiSharp.ImDrawListSharedData.__Native);
            self.__MarshalTo(ref self_);
            ImDrawListSharedData_destroy_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawListSharedData_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawListSharedData_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "maxError">No documentation.</param>
        /// <unmanaged>void ImDrawListSharedData_SetCircleSegmentMaxError([In] ImDrawListSharedData* self,[In] float max_error)</unmanaged>
        /// <unmanaged-short>ImDrawListSharedData_SetCircleSegmentMaxError</unmanaged-short>
        public static unsafe void ImDrawListSharedDataSetCircleSegmentMaxError(ref DearImguiSharp.ImDrawListSharedData self, System.Single maxError)
        {
            DearImguiSharp.ImDrawListSharedData.__Native self_ = default (DearImguiSharp.ImDrawListSharedData.__Native);
            self.__MarshalTo(ref self_);
            ImDrawListSharedData_SetCircleSegmentMaxError_(&self_, maxError);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawListSharedData_SetCircleSegmentMaxError", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawListSharedData_SetCircleSegmentMaxError_(void *param0, float param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImDrawDataBuilder_Clear([In] ImDrawDataBuilder* self)</unmanaged>
        /// <unmanaged-short>ImDrawDataBuilder_Clear</unmanaged-short>
        public static unsafe void ImDrawDataBuilderClear(ref DearImguiSharp.ImDrawDataBuilder self)
        {
            DearImguiSharp.ImDrawDataBuilder.__Native self_ = default (DearImguiSharp.ImDrawDataBuilder.__Native);
            self.__MarshalTo(ref self_);
            ImDrawDataBuilder_Clear_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawDataBuilder_Clear", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawDataBuilder_Clear_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImDrawDataBuilder_ClearFreeMemory([In] ImDrawDataBuilder* self)</unmanaged>
        /// <unmanaged-short>ImDrawDataBuilder_ClearFreeMemory</unmanaged-short>
        public static unsafe void ImDrawDataBuilderClearFreeMemory(ref DearImguiSharp.ImDrawDataBuilder self)
        {
            DearImguiSharp.ImDrawDataBuilder.__Native self_ = default (DearImguiSharp.ImDrawDataBuilder.__Native);
            self.__MarshalTo(ref self_);
            ImDrawDataBuilder_ClearFreeMemory_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawDataBuilder_ClearFreeMemory", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawDataBuilder_ClearFreeMemory_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImDrawDataBuilder_FlattenIntoSingleLayer([In] ImDrawDataBuilder* self)</unmanaged>
        /// <unmanaged-short>ImDrawDataBuilder_FlattenIntoSingleLayer</unmanaged-short>
        public static unsafe void ImDrawDataBuilderFlattenIntoSingleLayer(ref DearImguiSharp.ImDrawDataBuilder self)
        {
            DearImguiSharp.ImDrawDataBuilder.__Native self_ = default (DearImguiSharp.ImDrawDataBuilder.__Native);
            self.__MarshalTo(ref self_);
            ImDrawDataBuilder_FlattenIntoSingleLayer_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImDrawDataBuilder_FlattenIntoSingleLayer", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImDrawDataBuilder_FlattenIntoSingleLayer_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiNavMoveResult* ImGuiNavMoveResult_ImGuiNavMoveResult()</unmanaged>
        /// <unmanaged-short>ImGuiNavMoveResult_ImGuiNavMoveResult</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiNavMoveResult ImGuiNavMoveResultImGuiNavMoveResult()
        {
            DearImguiSharp.ImGuiNavMoveResult __result__;
            ImGuiNavMoveResult_ImGuiNavMoveResult_(&__result__);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiNavMoveResult_ImGuiNavMoveResult", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImGuiNavMoveResult_ImGuiNavMoveResult_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiNavMoveResult_destroy([In] ImGuiNavMoveResult* self)</unmanaged>
        /// <unmanaged-short>ImGuiNavMoveResult_destroy</unmanaged-short>
        public static unsafe void ImGuiNavMoveResultDestroy(ref DearImguiSharp.ImGuiNavMoveResult self)
        {
            fixed (void *self_ = &self)
                ImGuiNavMoveResult_destroy_(self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiNavMoveResult_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiNavMoveResult_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiNavMoveResult_Clear([In] ImGuiNavMoveResult* self)</unmanaged>
        /// <unmanaged-short>ImGuiNavMoveResult_Clear</unmanaged-short>
        public static unsafe void ImGuiNavMoveResultClear(ref DearImguiSharp.ImGuiNavMoveResult self)
        {
            fixed (void *self_ = &self)
                ImGuiNavMoveResult_Clear_(self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiNavMoveResult_Clear", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiNavMoveResult_Clear_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiNextWindowData* ImGuiNextWindowData_ImGuiNextWindowData()</unmanaged>
        /// <unmanaged-short>ImGuiNextWindowData_ImGuiNextWindowData</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiNextWindowData ImGuiNextWindowDataImGuiNextWindowData()
        {
            DearImguiSharp.ImGuiNextWindowData __result__;
            ImGuiNextWindowData_ImGuiNextWindowData_(&__result__);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiNextWindowData_ImGuiNextWindowData", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImGuiNextWindowData_ImGuiNextWindowData_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiNextWindowData_destroy([In] ImGuiNextWindowData* self)</unmanaged>
        /// <unmanaged-short>ImGuiNextWindowData_destroy</unmanaged-short>
        public static unsafe void ImGuiNextWindowDataDestroy(ref DearImguiSharp.ImGuiNextWindowData self)
        {
            fixed (void *self_ = &self)
                ImGuiNextWindowData_destroy_(self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiNextWindowData_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiNextWindowData_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiNextWindowData_ClearFlags([In] ImGuiNextWindowData* self)</unmanaged>
        /// <unmanaged-short>ImGuiNextWindowData_ClearFlags</unmanaged-short>
        public static unsafe void ImGuiNextWindowDataClearFlags(ref DearImguiSharp.ImGuiNextWindowData self)
        {
            fixed (void *self_ = &self)
                ImGuiNextWindowData_ClearFlags_(self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiNextWindowData_ClearFlags", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiNextWindowData_ClearFlags_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiNextItemData* ImGuiNextItemData_ImGuiNextItemData()</unmanaged>
        /// <unmanaged-short>ImGuiNextItemData_ImGuiNextItemData</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiNextItemData ImGuiNextItemDataImGuiNextItemData()
        {
            DearImguiSharp.ImGuiNextItemData __result__;
            ImGuiNextItemData_ImGuiNextItemData_(&__result__);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiNextItemData_ImGuiNextItemData", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImGuiNextItemData_ImGuiNextItemData_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiNextItemData_destroy([In] ImGuiNextItemData* self)</unmanaged>
        /// <unmanaged-short>ImGuiNextItemData_destroy</unmanaged-short>
        public static unsafe void ImGuiNextItemDataDestroy(ref DearImguiSharp.ImGuiNextItemData self)
        {
            fixed (void *self_ = &self)
                ImGuiNextItemData_destroy_(self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiNextItemData_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiNextItemData_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiNextItemData_ClearFlags([In] ImGuiNextItemData* self)</unmanaged>
        /// <unmanaged-short>ImGuiNextItemData_ClearFlags</unmanaged-short>
        public static unsafe void ImGuiNextItemDataClearFlags(ref DearImguiSharp.ImGuiNextItemData self)
        {
            fixed (void *self_ = &self)
                ImGuiNextItemData_ClearFlags_(self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiNextItemData_ClearFlags", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiNextItemData_ClearFlags_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "trRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiPtrOrIndex* ImGuiPtrOrIndex_ImGuiPtrOrIndexPtr([In] void* ptr)</unmanaged>
        /// <unmanaged-short>ImGuiPtrOrIndex_ImGuiPtrOrIndexPtr</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiPtrOrIndex ImGuiPtrOrIndexImGuiPtrOrIndexPtr(System.IntPtr trRef)
        {
            DearImguiSharp.ImGuiPtrOrIndex __result__;
            ImGuiPtrOrIndex_ImGuiPtrOrIndexPtr_(&__result__, (void *)trRef);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiPtrOrIndex_ImGuiPtrOrIndexPtr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImGuiPtrOrIndex_ImGuiPtrOrIndexPtr_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiPtrOrIndex_destroy([In] ImGuiPtrOrIndex* self)</unmanaged>
        /// <unmanaged-short>ImGuiPtrOrIndex_destroy</unmanaged-short>
        public static unsafe void ImGuiPtrOrIndexDestroy(DearImguiSharp.ImGuiPtrOrIndex self)
        {
            ImGuiPtrOrIndex_destroy_(&self);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiPtrOrIndex_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiPtrOrIndex_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "index">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiPtrOrIndex* ImGuiPtrOrIndex_ImGuiPtrOrIndexInt([In] int index)</unmanaged>
        /// <unmanaged-short>ImGuiPtrOrIndex_ImGuiPtrOrIndexInt</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiPtrOrIndex ImGuiPtrOrIndexImGuiPtrOrIndexInt(System.Int32 index)
        {
            DearImguiSharp.ImGuiPtrOrIndex __result__;
            ImGuiPtrOrIndex_ImGuiPtrOrIndexInt_(&__result__, index);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiPtrOrIndex_ImGuiPtrOrIndexInt", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImGuiPtrOrIndex_ImGuiPtrOrIndexInt_(void *param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "sharedFontAtlas">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiContext* ImGuiContext_ImGuiContext([In] ImFontAtlas* shared_font_atlas)</unmanaged>
        /// <unmanaged-short>ImGuiContext_ImGuiContext</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiContext ImGuiContextImGuiContext(ref DearImguiSharp.ImFontAtlas sharedFontAtlas)
        {
            DearImguiSharp.ImFontAtlas.__Native sharedFontAtlas_ = default (DearImguiSharp.ImFontAtlas.__Native);
            DearImguiSharp.ImGuiContext __result__;
            DearImguiSharp.ImGuiContext.__Native __result__native = default (DearImguiSharp.ImGuiContext.__Native);
            __result__ = default (DearImguiSharp.ImGuiContext);
            sharedFontAtlas.__MarshalTo(ref sharedFontAtlas_);
            ImGuiContext_ImGuiContext_(&__result__native, &sharedFontAtlas_);
            __result__.__MarshalFrom(ref __result__native);
            sharedFontAtlas.__MarshalFree(ref sharedFontAtlas_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiContext_ImGuiContext", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImGuiContext_ImGuiContext_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiContext_destroy([In] ImGuiContext* self)</unmanaged>
        /// <unmanaged-short>ImGuiContext_destroy</unmanaged-short>
        public static unsafe void ImGuiContextDestroy(ref DearImguiSharp.ImGuiContext self)
        {
            DearImguiSharp.ImGuiContext.__Native self_ = default (DearImguiSharp.ImGuiContext.__Native);
            self.__MarshalTo(ref self_);
            ImGuiContext_destroy_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiContext_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiContext_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiWindowTempData* ImGuiWindowTempData_ImGuiWindowTempData()</unmanaged>
        /// <unmanaged-short>ImGuiWindowTempData_ImGuiWindowTempData</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiWindowTempData ImGuiWindowTempDataImGuiWindowTempData()
        {
            DearImguiSharp.ImGuiWindowTempData __result__;
            DearImguiSharp.ImGuiWindowTempData.__Native __result__native = default (DearImguiSharp.ImGuiWindowTempData.__Native);
            __result__ = default (DearImguiSharp.ImGuiWindowTempData);
            ImGuiWindowTempData_ImGuiWindowTempData_(&__result__native);
            __result__.__MarshalFrom(ref __result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiWindowTempData_ImGuiWindowTempData", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImGuiWindowTempData_ImGuiWindowTempData_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiWindowTempData_destroy([In] ImGuiWindowTempData* self)</unmanaged>
        /// <unmanaged-short>ImGuiWindowTempData_destroy</unmanaged-short>
        public static unsafe void ImGuiWindowTempDataDestroy(ref DearImguiSharp.ImGuiWindowTempData self)
        {
            DearImguiSharp.ImGuiWindowTempData.__Native self_ = default (DearImguiSharp.ImGuiWindowTempData.__Native);
            self.__MarshalTo(ref self_);
            ImGuiWindowTempData_destroy_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiWindowTempData_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiWindowTempData_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "context">No documentation.</param>
        /// <param name = "name">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiWindow* ImGuiWindow_ImGuiWindow([In] ImGuiContext* context,[In] const char* name)</unmanaged>
        /// <unmanaged-short>ImGuiWindow_ImGuiWindow</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiWindow ImGuiWindowImGuiWindow(ref DearImguiSharp.ImGuiContext context, System.String name)
        {
            DearImguiSharp.ImGuiContext.__Native context_ = default (DearImguiSharp.ImGuiContext.__Native);
            System.IntPtr name_;
            DearImguiSharp.ImGuiWindow __result__;
            DearImguiSharp.ImGuiWindow.__Native __result__native = default (DearImguiSharp.ImGuiWindow.__Native);
            __result__ = default (DearImguiSharp.ImGuiWindow);
            context.__MarshalTo(ref context_);
            name_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(name);
            ImGuiWindow_ImGuiWindow_(&__result__native, &context_, (void *)name_);
            __result__.__MarshalFrom(ref __result__native);
            context.__MarshalFree(ref context_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(name_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiWindow_ImGuiWindow", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImGuiWindow_ImGuiWindow_(void *param0, void *param1, void *param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiWindow_destroy([In] ImGuiWindow* self)</unmanaged>
        /// <unmanaged-short>ImGuiWindow_destroy</unmanaged-short>
        public static unsafe void ImGuiWindowDestroy(ref DearImguiSharp.ImGuiWindow self)
        {
            DearImguiSharp.ImGuiWindow.__Native self_ = default (DearImguiSharp.ImGuiWindow.__Native);
            self.__MarshalTo(ref self_);
            ImGuiWindow_destroy_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiWindow_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiWindow_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "str">No documentation.</param>
        /// <param name = "strEnd">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>unsigned int ImGuiWindow_GetIDStr([In] ImGuiWindow* self,[In] const char* str,[In] const char* str_end)</unmanaged>
        /// <unmanaged-short>ImGuiWindow_GetIDStr</unmanaged-short>
        public static unsafe System.UInt32 ImGuiWindowGetIDStr(ref DearImguiSharp.ImGuiWindow self, System.String str, System.String strEnd)
        {
            DearImguiSharp.ImGuiWindow.__Native self_ = default (DearImguiSharp.ImGuiWindow.__Native);
            System.IntPtr str_;
            System.IntPtr strEnd_;
            System.UInt32 __result__;
            self.__MarshalTo(ref self_);
            str_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(str);
            strEnd_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(strEnd);
            __result__ = ImGuiWindow_GetIDStr_(&self_, (void *)str_, (void *)strEnd_);
            self.__MarshalFree(ref self_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(str_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(strEnd_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiWindow_GetIDStr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt32 ImGuiWindow_GetIDStr_(void *param0, void *param1, void *param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "trRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>unsigned int ImGuiWindow_GetIDPtr([In] ImGuiWindow* self,[In] const void* ptr)</unmanaged>
        /// <unmanaged-short>ImGuiWindow_GetIDPtr</unmanaged-short>
        public static unsafe System.UInt32 ImGuiWindowGetIDPtr(ref DearImguiSharp.ImGuiWindow self, System.IntPtr trRef)
        {
            DearImguiSharp.ImGuiWindow.__Native self_ = default (DearImguiSharp.ImGuiWindow.__Native);
            System.UInt32 __result__;
            self.__MarshalTo(ref self_);
            __result__ = ImGuiWindow_GetIDPtr_(&self_, (void *)trRef);
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiWindow_GetIDPtr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt32 ImGuiWindow_GetIDPtr_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "n">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>unsigned int ImGuiWindow_GetIDInt([In] ImGuiWindow* self,[In] int n)</unmanaged>
        /// <unmanaged-short>ImGuiWindow_GetIDInt</unmanaged-short>
        public static unsafe System.UInt32 ImGuiWindowGetIDInt(ref DearImguiSharp.ImGuiWindow self, System.Int32 n)
        {
            DearImguiSharp.ImGuiWindow.__Native self_ = default (DearImguiSharp.ImGuiWindow.__Native);
            System.UInt32 __result__;
            self.__MarshalTo(ref self_);
            __result__ = ImGuiWindow_GetIDInt_(&self_, n);
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiWindow_GetIDInt", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt32 ImGuiWindow_GetIDInt_(void *param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "str">No documentation.</param>
        /// <param name = "strEnd">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>unsigned int ImGuiWindow_GetIDNoKeepAliveStr([In] ImGuiWindow* self,[In] const char* str,[In] const char* str_end)</unmanaged>
        /// <unmanaged-short>ImGuiWindow_GetIDNoKeepAliveStr</unmanaged-short>
        public static unsafe System.UInt32 ImGuiWindowGetIDNoKeepAliveStr(ref DearImguiSharp.ImGuiWindow self, System.String str, System.String strEnd)
        {
            DearImguiSharp.ImGuiWindow.__Native self_ = default (DearImguiSharp.ImGuiWindow.__Native);
            System.IntPtr str_;
            System.IntPtr strEnd_;
            System.UInt32 __result__;
            self.__MarshalTo(ref self_);
            str_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(str);
            strEnd_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(strEnd);
            __result__ = ImGuiWindow_GetIDNoKeepAliveStr_(&self_, (void *)str_, (void *)strEnd_);
            self.__MarshalFree(ref self_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(str_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(strEnd_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiWindow_GetIDNoKeepAliveStr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt32 ImGuiWindow_GetIDNoKeepAliveStr_(void *param0, void *param1, void *param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "trRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>unsigned int ImGuiWindow_GetIDNoKeepAlivePtr([In] ImGuiWindow* self,[In] const void* ptr)</unmanaged>
        /// <unmanaged-short>ImGuiWindow_GetIDNoKeepAlivePtr</unmanaged-short>
        public static unsafe System.UInt32 ImGuiWindowGetIDNoKeepAlivePtr(ref DearImguiSharp.ImGuiWindow self, System.IntPtr trRef)
        {
            DearImguiSharp.ImGuiWindow.__Native self_ = default (DearImguiSharp.ImGuiWindow.__Native);
            System.UInt32 __result__;
            self.__MarshalTo(ref self_);
            __result__ = ImGuiWindow_GetIDNoKeepAlivePtr_(&self_, (void *)trRef);
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiWindow_GetIDNoKeepAlivePtr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt32 ImGuiWindow_GetIDNoKeepAlivePtr_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "n">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>unsigned int ImGuiWindow_GetIDNoKeepAliveInt([In] ImGuiWindow* self,[In] int n)</unmanaged>
        /// <unmanaged-short>ImGuiWindow_GetIDNoKeepAliveInt</unmanaged-short>
        public static unsafe System.UInt32 ImGuiWindowGetIDNoKeepAliveInt(ref DearImguiSharp.ImGuiWindow self, System.Int32 n)
        {
            DearImguiSharp.ImGuiWindow.__Native self_ = default (DearImguiSharp.ImGuiWindow.__Native);
            System.UInt32 __result__;
            self.__MarshalTo(ref self_);
            __result__ = ImGuiWindow_GetIDNoKeepAliveInt_(&self_, n);
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiWindow_GetIDNoKeepAliveInt", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt32 ImGuiWindow_GetIDNoKeepAliveInt_(void *param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "rAbs">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>unsigned int ImGuiWindow_GetIDFromRectangle([In] ImGuiWindow* self,[In] const ImRect r_abs)</unmanaged>
        /// <unmanaged-short>ImGuiWindow_GetIDFromRectangle</unmanaged-short>
        public static unsafe System.UInt32 ImGuiWindowGetIDFromRectangle(ref DearImguiSharp.ImGuiWindow self, DearImguiSharp.ImRect rAbs)
        {
            DearImguiSharp.ImGuiWindow.__Native self_ = default (DearImguiSharp.ImGuiWindow.__Native);
            System.UInt32 __result__;
            self.__MarshalTo(ref self_);
            __result__ = ImGuiWindow_GetIDFromRectangle_(&self_, rAbs);
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiWindow_GetIDFromRectangle", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt32 ImGuiWindow_GetIDFromRectangle_(void *param0, DearImguiSharp.ImRect param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiWindow_Rect([In] ImRect* pOut,[In] ImGuiWindow* self)</unmanaged>
        /// <unmanaged-short>ImGuiWindow_Rect</unmanaged-short>
        public static unsafe void ImGuiWindowRect(DearImguiSharp.ImRect outRef, ref DearImguiSharp.ImGuiWindow self)
        {
            DearImguiSharp.ImGuiWindow.__Native self_ = default (DearImguiSharp.ImGuiWindow.__Native);
            self.__MarshalTo(ref self_);
            ImGuiWindow_Rect_(&outRef, &self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiWindow_Rect", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiWindow_Rect_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float ImGuiWindow_CalcFontSize([In] ImGuiWindow* self)</unmanaged>
        /// <unmanaged-short>ImGuiWindow_CalcFontSize</unmanaged-short>
        public static unsafe System.Single ImGuiWindowCalcFontSize(ref DearImguiSharp.ImGuiWindow self)
        {
            DearImguiSharp.ImGuiWindow.__Native self_ = default (DearImguiSharp.ImGuiWindow.__Native);
            System.Single __result__;
            self.__MarshalTo(ref self_);
            __result__ = ImGuiWindow_CalcFontSize_(&self_);
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiWindow_CalcFontSize", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float ImGuiWindow_CalcFontSize_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float ImGuiWindow_TitleBarHeight([In] ImGuiWindow* self)</unmanaged>
        /// <unmanaged-short>ImGuiWindow_TitleBarHeight</unmanaged-short>
        public static unsafe System.Single ImGuiWindowTitleBarHeight(ref DearImguiSharp.ImGuiWindow self)
        {
            DearImguiSharp.ImGuiWindow.__Native self_ = default (DearImguiSharp.ImGuiWindow.__Native);
            System.Single __result__;
            self.__MarshalTo(ref self_);
            __result__ = ImGuiWindow_TitleBarHeight_(&self_);
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiWindow_TitleBarHeight", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float ImGuiWindow_TitleBarHeight_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiWindow_TitleBarRect([In] ImRect* pOut,[In] ImGuiWindow* self)</unmanaged>
        /// <unmanaged-short>ImGuiWindow_TitleBarRect</unmanaged-short>
        public static unsafe void ImGuiWindowTitleBarRect(DearImguiSharp.ImRect outRef, ref DearImguiSharp.ImGuiWindow self)
        {
            DearImguiSharp.ImGuiWindow.__Native self_ = default (DearImguiSharp.ImGuiWindow.__Native);
            self.__MarshalTo(ref self_);
            ImGuiWindow_TitleBarRect_(&outRef, &self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiWindow_TitleBarRect", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiWindow_TitleBarRect_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float ImGuiWindow_MenuBarHeight([In] ImGuiWindow* self)</unmanaged>
        /// <unmanaged-short>ImGuiWindow_MenuBarHeight</unmanaged-short>
        public static unsafe System.Single ImGuiWindowMenuBarHeight(ref DearImguiSharp.ImGuiWindow self)
        {
            DearImguiSharp.ImGuiWindow.__Native self_ = default (DearImguiSharp.ImGuiWindow.__Native);
            System.Single __result__;
            self.__MarshalTo(ref self_);
            __result__ = ImGuiWindow_MenuBarHeight_(&self_);
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiWindow_MenuBarHeight", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float ImGuiWindow_MenuBarHeight_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiWindow_MenuBarRect([In] ImRect* pOut,[In] ImGuiWindow* self)</unmanaged>
        /// <unmanaged-short>ImGuiWindow_MenuBarRect</unmanaged-short>
        public static unsafe void ImGuiWindowMenuBarRect(DearImguiSharp.ImRect outRef, ref DearImguiSharp.ImGuiWindow self)
        {
            DearImguiSharp.ImGuiWindow.__Native self_ = default (DearImguiSharp.ImGuiWindow.__Native);
            self.__MarshalTo(ref self_);
            ImGuiWindow_MenuBarRect_(&outRef, &self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiWindow_MenuBarRect", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiWindow_MenuBarRect_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiItemHoveredDataBackup* ImGuiItemHoveredDataBackup_ImGuiItemHoveredDataBackup()</unmanaged>
        /// <unmanaged-short>ImGuiItemHoveredDataBackup_ImGuiItemHoveredDataBackup</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiItemHoveredDataBackup ImGuiItemHoveredDataBackupImGuiItemHoveredDataBackup()
        {
            DearImguiSharp.ImGuiItemHoveredDataBackup __result__;
            ImGuiItemHoveredDataBackup_ImGuiItemHoveredDataBackup_(&__result__);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiItemHoveredDataBackup_ImGuiItemHoveredDataBackup", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImGuiItemHoveredDataBackup_ImGuiItemHoveredDataBackup_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiItemHoveredDataBackup_destroy([In] ImGuiItemHoveredDataBackup* self)</unmanaged>
        /// <unmanaged-short>ImGuiItemHoveredDataBackup_destroy</unmanaged-short>
        public static unsafe void ImGuiItemHoveredDataBackupDestroy(ref DearImguiSharp.ImGuiItemHoveredDataBackup self)
        {
            fixed (void *self_ = &self)
                ImGuiItemHoveredDataBackup_destroy_(self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiItemHoveredDataBackup_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiItemHoveredDataBackup_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiItemHoveredDataBackup_Backup([In] ImGuiItemHoveredDataBackup* self)</unmanaged>
        /// <unmanaged-short>ImGuiItemHoveredDataBackup_Backup</unmanaged-short>
        public static unsafe void ImGuiItemHoveredDataBackupBackup(ref DearImguiSharp.ImGuiItemHoveredDataBackup self)
        {
            fixed (void *self_ = &self)
                ImGuiItemHoveredDataBackup_Backup_(self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiItemHoveredDataBackup_Backup", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiItemHoveredDataBackup_Backup_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiItemHoveredDataBackup_Restore([In] ImGuiItemHoveredDataBackup* self)</unmanaged>
        /// <unmanaged-short>ImGuiItemHoveredDataBackup_Restore</unmanaged-short>
        public static unsafe void ImGuiItemHoveredDataBackupRestore(ref DearImguiSharp.ImGuiItemHoveredDataBackup self)
        {
            fixed (void *self_ = &self)
                ImGuiItemHoveredDataBackup_Restore_(self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiItemHoveredDataBackup_Restore", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiItemHoveredDataBackup_Restore_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiTabItem* ImGuiTabItem_ImGuiTabItem()</unmanaged>
        /// <unmanaged-short>ImGuiTabItem_ImGuiTabItem</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiTabItem ImGuiTabItemImGuiTabItem()
        {
            DearImguiSharp.ImGuiTabItem __result__;
            ImGuiTabItem_ImGuiTabItem_(&__result__);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiTabItem_ImGuiTabItem", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImGuiTabItem_ImGuiTabItem_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiTabItem_destroy([In] ImGuiTabItem* self)</unmanaged>
        /// <unmanaged-short>ImGuiTabItem_destroy</unmanaged-short>
        public static unsafe void ImGuiTabItemDestroy(ref DearImguiSharp.ImGuiTabItem self)
        {
            fixed (void *self_ = &self)
                ImGuiTabItem_destroy_(self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiTabItem_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiTabItem_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiTabBar* ImGuiTabBar_ImGuiTabBar()</unmanaged>
        /// <unmanaged-short>ImGuiTabBar_ImGuiTabBar</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiTabBar ImGuiTabBarImGuiTabBar()
        {
            DearImguiSharp.ImGuiTabBar __result__;
            DearImguiSharp.ImGuiTabBar.__Native __result__native = default (DearImguiSharp.ImGuiTabBar.__Native);
            __result__ = default (DearImguiSharp.ImGuiTabBar);
            ImGuiTabBar_ImGuiTabBar_(&__result__native);
            __result__.__MarshalFrom(ref __result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiTabBar_ImGuiTabBar", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImGuiTabBar_ImGuiTabBar_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImGuiTabBar_destroy([In] ImGuiTabBar* self)</unmanaged>
        /// <unmanaged-short>ImGuiTabBar_destroy</unmanaged-short>
        public static unsafe void ImGuiTabBarDestroy(ref DearImguiSharp.ImGuiTabBar self)
        {
            DearImguiSharp.ImGuiTabBar.__Native self_ = default (DearImguiSharp.ImGuiTabBar.__Native);
            self.__MarshalTo(ref self_);
            ImGuiTabBar_destroy_(&self_);
            self.__MarshalFree(ref self_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiTabBar_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiTabBar_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "tab">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>int ImGuiTabBar_GetTabOrder([In] ImGuiTabBar* self,[In] const ImGuiTabItem* tab)</unmanaged>
        /// <unmanaged-short>ImGuiTabBar_GetTabOrder</unmanaged-short>
        public static unsafe System.Int32 ImGuiTabBarGetTabOrder(ref DearImguiSharp.ImGuiTabBar self, ref DearImguiSharp.ImGuiTabItem tab)
        {
            DearImguiSharp.ImGuiTabBar.__Native self_ = default (DearImguiSharp.ImGuiTabBar.__Native);
            System.Int32 __result__;
            self.__MarshalTo(ref self_);
            fixed (void *tab_ = &tab)
                __result__ = ImGuiTabBar_GetTabOrder_(&self_, tab_);
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiTabBar_GetTabOrder", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern int ImGuiTabBar_GetTabOrder_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <param name = "tab">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>const char* ImGuiTabBar_GetTabName([In] ImGuiTabBar* self,[In] const ImGuiTabItem* tab)</unmanaged>
        /// <unmanaged-short>ImGuiTabBar_GetTabName</unmanaged-short>
        public static unsafe System.String ImGuiTabBarGetTabName(ref DearImguiSharp.ImGuiTabBar self, ref DearImguiSharp.ImGuiTabItem tab)
        {
            DearImguiSharp.ImGuiTabBar.__Native self_ = default (DearImguiSharp.ImGuiTabBar.__Native);
            System.String __result__;
            System.IntPtr __result__native;
            self.__MarshalTo(ref self_);
            fixed (void *tab_ = &tab)
                __result__native = ImGuiTabBar_GetTabName_(&self_, tab_);
            __result__ = System.Runtime.InteropServices.Marshal.PtrToStringAnsi(__result__native);
            self.__MarshalFree(ref self_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiTabBar_GetTabName", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.IntPtr ImGuiTabBar_GetTabName_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiWindow* igGetCurrentWindowRead()</unmanaged>
        /// <unmanaged-short>igGetCurrentWindowRead</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiWindow GetCurrentWindowRead()
        {
            DearImguiSharp.ImGuiWindow __result__;
            DearImguiSharp.ImGuiWindow.__Native __result__native = default (DearImguiSharp.ImGuiWindow.__Native);
            __result__ = default (DearImguiSharp.ImGuiWindow);
            igGetCurrentWindowRead_(&__result__native);
            __result__.__MarshalFrom(ref __result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetCurrentWindowRead", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *igGetCurrentWindowRead_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiWindow* igGetCurrentWindow()</unmanaged>
        /// <unmanaged-short>igGetCurrentWindow</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiWindow GetCurrentWindow()
        {
            DearImguiSharp.ImGuiWindow __result__;
            DearImguiSharp.ImGuiWindow.__Native __result__native = default (DearImguiSharp.ImGuiWindow.__Native);
            __result__ = default (DearImguiSharp.ImGuiWindow);
            igGetCurrentWindow_(&__result__native);
            __result__.__MarshalFrom(ref __result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetCurrentWindow", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *igGetCurrentWindow_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "id">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiWindow* igFindWindowByID([In] unsigned int id)</unmanaged>
        /// <unmanaged-short>igFindWindowByID</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiWindow FindWindowByID(System.UInt32 id)
        {
            DearImguiSharp.ImGuiWindow __result__;
            DearImguiSharp.ImGuiWindow.__Native __result__native = default (DearImguiSharp.ImGuiWindow.__Native);
            __result__ = default (DearImguiSharp.ImGuiWindow);
            igFindWindowByID_(&__result__native, id);
            __result__.__MarshalFrom(ref __result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igFindWindowByID", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *igFindWindowByID_(void *param0, System.UInt32 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "name">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiWindow* igFindWindowByName([In] const char* name)</unmanaged>
        /// <unmanaged-short>igFindWindowByName</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiWindow FindWindowByName(System.String name)
        {
            System.IntPtr name_;
            DearImguiSharp.ImGuiWindow __result__;
            DearImguiSharp.ImGuiWindow.__Native __result__native = default (DearImguiSharp.ImGuiWindow.__Native);
            __result__ = default (DearImguiSharp.ImGuiWindow);
            name_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(name);
            igFindWindowByName_(&__result__native, (void *)name_);
            __result__.__MarshalFrom(ref __result__native);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(name_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igFindWindowByName", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *igFindWindowByName_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "window">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <param name = "arentWindowRef">No documentation.</param>
        /// <unmanaged>void igUpdateWindowParentAndRootLinks([In] ImGuiWindow* window,[In] int flags,[In] ImGuiWindow* parent_window)</unmanaged>
        /// <unmanaged-short>igUpdateWindowParentAndRootLinks</unmanaged-short>
        public static unsafe void UpdateWindowParentAndRootLinks(ref DearImguiSharp.ImGuiWindow window, System.Int32 flags, ref DearImguiSharp.ImGuiWindow arentWindowRef)
        {
            DearImguiSharp.ImGuiWindow.__Native window_ = default (DearImguiSharp.ImGuiWindow.__Native);
            DearImguiSharp.ImGuiWindow.__Native arentWindowRef_ = default (DearImguiSharp.ImGuiWindow.__Native);
            window.__MarshalTo(ref window_);
            arentWindowRef.__MarshalTo(ref arentWindowRef_);
            igUpdateWindowParentAndRootLinks_(&window_, flags, &arentWindowRef_);
            window.__MarshalFree(ref window_);
            arentWindowRef.__MarshalFree(ref arentWindowRef_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igUpdateWindowParentAndRootLinks", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igUpdateWindowParentAndRootLinks_(void *param0, int param1, void *param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "window">No documentation.</param>
        /// <unmanaged>void igCalcWindowExpectedSize([In] ImVec2* pOut,[In] ImGuiWindow* window)</unmanaged>
        /// <unmanaged-short>igCalcWindowExpectedSize</unmanaged-short>
        public static unsafe void CalcWindowExpectedSize(DearImguiSharp.ImVec2 outRef, ref DearImguiSharp.ImGuiWindow window)
        {
            DearImguiSharp.ImGuiWindow.__Native window_ = default (DearImguiSharp.ImGuiWindow.__Native);
            window.__MarshalTo(ref window_);
            igCalcWindowExpectedSize_(&outRef, &window_);
            window.__MarshalFree(ref window_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igCalcWindowExpectedSize", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igCalcWindowExpectedSize_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "window">No documentation.</param>
        /// <param name = "otentialParentRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsWindowChildOf([In] ImGuiWindow* window,[In] ImGuiWindow* potential_parent)</unmanaged>
        /// <unmanaged-short>igIsWindowChildOf</unmanaged-short>
        public static unsafe System.Boolean IsWindowChildOf(ref DearImguiSharp.ImGuiWindow window, ref DearImguiSharp.ImGuiWindow otentialParentRef)
        {
            DearImguiSharp.ImGuiWindow.__Native window_ = default (DearImguiSharp.ImGuiWindow.__Native);
            DearImguiSharp.ImGuiWindow.__Native otentialParentRef_ = default (DearImguiSharp.ImGuiWindow.__Native);
            System.Boolean __result__;
            System.Byte __result__native;
            window.__MarshalTo(ref window_);
            otentialParentRef.__MarshalTo(ref otentialParentRef_);
            __result__native = igIsWindowChildOf_(&window_, &otentialParentRef_);
            __result__ = __result__native != 0;
            window.__MarshalFree(ref window_);
            otentialParentRef.__MarshalFree(ref otentialParentRef_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsWindowChildOf", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsWindowChildOf_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "window">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsWindowNavFocusable([In] ImGuiWindow* window)</unmanaged>
        /// <unmanaged-short>igIsWindowNavFocusable</unmanaged-short>
        public static unsafe System.Boolean IsWindowNavFocusable(ref DearImguiSharp.ImGuiWindow window)
        {
            DearImguiSharp.ImGuiWindow.__Native window_ = default (DearImguiSharp.ImGuiWindow.__Native);
            System.Boolean __result__;
            System.Byte __result__native;
            window.__MarshalTo(ref window_);
            __result__native = igIsWindowNavFocusable_(&window_);
            __result__ = __result__native != 0;
            window.__MarshalFree(ref window_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsWindowNavFocusable", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsWindowNavFocusable_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "window">No documentation.</param>
        /// <unmanaged>void igGetWindowAllowedExtentRect([In] ImRect* pOut,[In] ImGuiWindow* window)</unmanaged>
        /// <unmanaged-short>igGetWindowAllowedExtentRect</unmanaged-short>
        public static unsafe void GetWindowAllowedExtentRect(DearImguiSharp.ImRect outRef, ref DearImguiSharp.ImGuiWindow window)
        {
            DearImguiSharp.ImGuiWindow.__Native window_ = default (DearImguiSharp.ImGuiWindow.__Native);
            window.__MarshalTo(ref window_);
            igGetWindowAllowedExtentRect_(&outRef, &window_);
            window.__MarshalFree(ref window_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetWindowAllowedExtentRect", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igGetWindowAllowedExtentRect_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "window">No documentation.</param>
        /// <param name = "pos">No documentation.</param>
        /// <param name = "cond">No documentation.</param>
        /// <unmanaged>void igSetWindowPosWindowPtr([In] ImGuiWindow* window,[In] const ImVec2 pos,[In] int cond)</unmanaged>
        /// <unmanaged-short>igSetWindowPosWindowPtr</unmanaged-short>
        public static unsafe void SetWindowPosWindowPtr(ref DearImguiSharp.ImGuiWindow window, DearImguiSharp.ImVec2 pos, System.Int32 cond)
        {
            DearImguiSharp.ImGuiWindow.__Native window_ = default (DearImguiSharp.ImGuiWindow.__Native);
            window.__MarshalTo(ref window_);
            igSetWindowPosWindowPtr_(&window_, pos, cond);
            window.__MarshalFree(ref window_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetWindowPosWindowPtr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetWindowPosWindowPtr_(void *param0, DearImguiSharp.ImVec2 param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "window">No documentation.</param>
        /// <param name = "size">No documentation.</param>
        /// <param name = "cond">No documentation.</param>
        /// <unmanaged>void igSetWindowSizeWindowPtr([In] ImGuiWindow* window,[In] const ImVec2 size,[In] int cond)</unmanaged>
        /// <unmanaged-short>igSetWindowSizeWindowPtr</unmanaged-short>
        public static unsafe void SetWindowSizeWindowPtr(ref DearImguiSharp.ImGuiWindow window, DearImguiSharp.ImVec2 size, System.Int32 cond)
        {
            DearImguiSharp.ImGuiWindow.__Native window_ = default (DearImguiSharp.ImGuiWindow.__Native);
            window.__MarshalTo(ref window_);
            igSetWindowSizeWindowPtr_(&window_, size, cond);
            window.__MarshalFree(ref window_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetWindowSizeWindowPtr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetWindowSizeWindowPtr_(void *param0, DearImguiSharp.ImVec2 param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "window">No documentation.</param>
        /// <param name = "collapsed">No documentation.</param>
        /// <param name = "cond">No documentation.</param>
        /// <unmanaged>void igSetWindowCollapsedWindowPtr([In] ImGuiWindow* window,[In] bool collapsed,[In] int cond)</unmanaged>
        /// <unmanaged-short>igSetWindowCollapsedWindowPtr</unmanaged-short>
        public static unsafe void SetWindowCollapsedWindowPtr(ref DearImguiSharp.ImGuiWindow window, System.Boolean collapsed, System.Int32 cond)
        {
            DearImguiSharp.ImGuiWindow.__Native window_ = default (DearImguiSharp.ImGuiWindow.__Native);
            System.Byte collapsed_;
            window.__MarshalTo(ref window_);
            collapsed_ = (System.Byte)(collapsed ? 1 : 0);
            igSetWindowCollapsedWindowPtr_(&window_, collapsed_, cond);
            window.__MarshalFree(ref window_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetWindowCollapsedWindowPtr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetWindowCollapsedWindowPtr_(void *param0, System.Byte param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "window">No documentation.</param>
        /// <unmanaged>void igFocusWindow([In] ImGuiWindow* window)</unmanaged>
        /// <unmanaged-short>igFocusWindow</unmanaged-short>
        public static unsafe void FocusWindow(ref DearImguiSharp.ImGuiWindow window)
        {
            DearImguiSharp.ImGuiWindow.__Native window_ = default (DearImguiSharp.ImGuiWindow.__Native);
            window.__MarshalTo(ref window_);
            igFocusWindow_(&window_);
            window.__MarshalFree(ref window_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igFocusWindow", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igFocusWindow_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "underThisWindow">No documentation.</param>
        /// <param name = "ignoreWindow">No documentation.</param>
        /// <unmanaged>void igFocusTopMostWindowUnderOne([In] ImGuiWindow* under_this_window,[In] ImGuiWindow* ignore_window)</unmanaged>
        /// <unmanaged-short>igFocusTopMostWindowUnderOne</unmanaged-short>
        public static unsafe void FocusTopMostWindowUnderOne(ref DearImguiSharp.ImGuiWindow underThisWindow, ref DearImguiSharp.ImGuiWindow ignoreWindow)
        {
            DearImguiSharp.ImGuiWindow.__Native underThisWindow_ = default (DearImguiSharp.ImGuiWindow.__Native);
            DearImguiSharp.ImGuiWindow.__Native ignoreWindow_ = default (DearImguiSharp.ImGuiWindow.__Native);
            underThisWindow.__MarshalTo(ref underThisWindow_);
            ignoreWindow.__MarshalTo(ref ignoreWindow_);
            igFocusTopMostWindowUnderOne_(&underThisWindow_, &ignoreWindow_);
            underThisWindow.__MarshalFree(ref underThisWindow_);
            ignoreWindow.__MarshalFree(ref ignoreWindow_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igFocusTopMostWindowUnderOne", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igFocusTopMostWindowUnderOne_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "window">No documentation.</param>
        /// <unmanaged>void igBringWindowToFocusFront([In] ImGuiWindow* window)</unmanaged>
        /// <unmanaged-short>igBringWindowToFocusFront</unmanaged-short>
        public static unsafe void BringWindowToFocusFront(ref DearImguiSharp.ImGuiWindow window)
        {
            DearImguiSharp.ImGuiWindow.__Native window_ = default (DearImguiSharp.ImGuiWindow.__Native);
            window.__MarshalTo(ref window_);
            igBringWindowToFocusFront_(&window_);
            window.__MarshalFree(ref window_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igBringWindowToFocusFront", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igBringWindowToFocusFront_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "window">No documentation.</param>
        /// <unmanaged>void igBringWindowToDisplayFront([In] ImGuiWindow* window)</unmanaged>
        /// <unmanaged-short>igBringWindowToDisplayFront</unmanaged-short>
        public static unsafe void BringWindowToDisplayFront(ref DearImguiSharp.ImGuiWindow window)
        {
            DearImguiSharp.ImGuiWindow.__Native window_ = default (DearImguiSharp.ImGuiWindow.__Native);
            window.__MarshalTo(ref window_);
            igBringWindowToDisplayFront_(&window_);
            window.__MarshalFree(ref window_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igBringWindowToDisplayFront", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igBringWindowToDisplayFront_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "window">No documentation.</param>
        /// <unmanaged>void igBringWindowToDisplayBack([In] ImGuiWindow* window)</unmanaged>
        /// <unmanaged-short>igBringWindowToDisplayBack</unmanaged-short>
        public static unsafe void BringWindowToDisplayBack(ref DearImguiSharp.ImGuiWindow window)
        {
            DearImguiSharp.ImGuiWindow.__Native window_ = default (DearImguiSharp.ImGuiWindow.__Native);
            window.__MarshalTo(ref window_);
            igBringWindowToDisplayBack_(&window_);
            window.__MarshalFree(ref window_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igBringWindowToDisplayBack", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igBringWindowToDisplayBack_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "font">No documentation.</param>
        /// <unmanaged>void igSetCurrentFont([In] ImFont* font)</unmanaged>
        /// <unmanaged-short>igSetCurrentFont</unmanaged-short>
        public static unsafe void SetCurrentFont(ref DearImguiSharp.ImFont font)
        {
            fixed (void *font_ = &font)
                igSetCurrentFont_(font_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetCurrentFont", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetCurrentFont_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImFont* igGetDefaultFont()</unmanaged>
        /// <unmanaged-short>igGetDefaultFont</unmanaged-short>
        public static unsafe DearImguiSharp.ImFont GetDefaultFont()
        {
            DearImguiSharp.ImFont __result__;
            igGetDefaultFont_(&__result__);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetDefaultFont", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *igGetDefaultFont_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "window">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImDrawList* igGetForegroundDrawListWindowPtr([In] ImGuiWindow* window)</unmanaged>
        /// <unmanaged-short>igGetForegroundDrawListWindowPtr</unmanaged-short>
        public static unsafe DearImguiSharp.ImDrawList GetForegroundDrawListWindowPtr(ref DearImguiSharp.ImGuiWindow window)
        {
            DearImguiSharp.ImGuiWindow.__Native window_ = default (DearImguiSharp.ImGuiWindow.__Native);
            DearImguiSharp.ImDrawList __result__;
            DearImguiSharp.ImDrawList.__Native __result__native = default (DearImguiSharp.ImDrawList.__Native);
            __result__ = default (DearImguiSharp.ImDrawList);
            window.__MarshalTo(ref window_);
            igGetForegroundDrawListWindowPtr_(&__result__native, &window_);
            __result__.__MarshalFrom(ref __result__native);
            window.__MarshalFree(ref window_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetForegroundDrawListWindowPtr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *igGetForegroundDrawListWindowPtr_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "context">No documentation.</param>
        /// <unmanaged>void igInitialize([In] ImGuiContext* context)</unmanaged>
        /// <unmanaged-short>igInitialize</unmanaged-short>
        public static unsafe void Initialize(ref DearImguiSharp.ImGuiContext context)
        {
            DearImguiSharp.ImGuiContext.__Native context_ = default (DearImguiSharp.ImGuiContext.__Native);
            context.__MarshalTo(ref context_);
            igInitialize_(&context_);
            context.__MarshalFree(ref context_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igInitialize", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igInitialize_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "context">No documentation.</param>
        /// <unmanaged>void igShutdown([In] ImGuiContext* context)</unmanaged>
        /// <unmanaged-short>igShutdown</unmanaged-short>
        public static unsafe void Shutdown(ref DearImguiSharp.ImGuiContext context)
        {
            DearImguiSharp.ImGuiContext.__Native context_ = default (DearImguiSharp.ImGuiContext.__Native);
            context.__MarshalTo(ref context_);
            igShutdown_(&context_);
            context.__MarshalFree(ref context_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igShutdown", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igShutdown_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igUpdateHoveredWindowAndCaptureFlags()</unmanaged>
        /// <unmanaged-short>igUpdateHoveredWindowAndCaptureFlags</unmanaged-short>
        public static unsafe void UpdateHoveredWindowAndCaptureFlags()
        {
            igUpdateHoveredWindowAndCaptureFlags_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igUpdateHoveredWindowAndCaptureFlags", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igUpdateHoveredWindowAndCaptureFlags_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "window">No documentation.</param>
        /// <unmanaged>void igStartMouseMovingWindow([In] ImGuiWindow* window)</unmanaged>
        /// <unmanaged-short>igStartMouseMovingWindow</unmanaged-short>
        public static unsafe void StartMouseMovingWindow(ref DearImguiSharp.ImGuiWindow window)
        {
            DearImguiSharp.ImGuiWindow.__Native window_ = default (DearImguiSharp.ImGuiWindow.__Native);
            window.__MarshalTo(ref window_);
            igStartMouseMovingWindow_(&window_);
            window.__MarshalFree(ref window_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igStartMouseMovingWindow", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igStartMouseMovingWindow_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igUpdateMouseMovingWindowNewFrame()</unmanaged>
        /// <unmanaged-short>igUpdateMouseMovingWindowNewFrame</unmanaged-short>
        public static unsafe void UpdateMouseMovingWindowNewFrame()
        {
            igUpdateMouseMovingWindowNewFrame_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igUpdateMouseMovingWindowNewFrame", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igUpdateMouseMovingWindowNewFrame_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igUpdateMouseMovingWindowEndFrame()</unmanaged>
        /// <unmanaged-short>igUpdateMouseMovingWindowEndFrame</unmanaged-short>
        public static unsafe void UpdateMouseMovingWindowEndFrame()
        {
            igUpdateMouseMovingWindowEndFrame_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igUpdateMouseMovingWindowEndFrame", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igUpdateMouseMovingWindowEndFrame_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igMarkIniSettingsDirtyNil()</unmanaged>
        /// <unmanaged-short>igMarkIniSettingsDirtyNil</unmanaged-short>
        public static unsafe void MarkIniSettingsDirtyNil()
        {
            igMarkIniSettingsDirtyNil_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igMarkIniSettingsDirtyNil", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igMarkIniSettingsDirtyNil_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "window">No documentation.</param>
        /// <unmanaged>void igMarkIniSettingsDirtyWindowPtr([In] ImGuiWindow* window)</unmanaged>
        /// <unmanaged-short>igMarkIniSettingsDirtyWindowPtr</unmanaged-short>
        public static unsafe void MarkIniSettingsDirtyWindowPtr(ref DearImguiSharp.ImGuiWindow window)
        {
            DearImguiSharp.ImGuiWindow.__Native window_ = default (DearImguiSharp.ImGuiWindow.__Native);
            window.__MarshalTo(ref window_);
            igMarkIniSettingsDirtyWindowPtr_(&window_);
            window.__MarshalFree(ref window_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igMarkIniSettingsDirtyWindowPtr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igMarkIniSettingsDirtyWindowPtr_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "name">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiWindowSettings* igCreateNewWindowSettings([In] const char* name)</unmanaged>
        /// <unmanaged-short>igCreateNewWindowSettings</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiWindowSettings CreateNewWindowSettings(System.String name)
        {
            System.IntPtr name_;
            DearImguiSharp.ImGuiWindowSettings __result__;
            name_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(name);
            igCreateNewWindowSettings_(&__result__, (void *)name_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(name_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igCreateNewWindowSettings", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *igCreateNewWindowSettings_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "id">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiWindowSettings* igFindWindowSettings([In] unsigned int id)</unmanaged>
        /// <unmanaged-short>igFindWindowSettings</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiWindowSettings FindWindowSettings(System.UInt32 id)
        {
            DearImguiSharp.ImGuiWindowSettings __result__;
            igFindWindowSettings_(&__result__, id);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igFindWindowSettings", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *igFindWindowSettings_(void *param0, System.UInt32 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "name">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiWindowSettings* igFindOrCreateWindowSettings([In] const char* name)</unmanaged>
        /// <unmanaged-short>igFindOrCreateWindowSettings</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiWindowSettings FindOrCreateWindowSettings(System.String name)
        {
            System.IntPtr name_;
            DearImguiSharp.ImGuiWindowSettings __result__;
            name_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(name);
            igFindOrCreateWindowSettings_(&__result__, (void *)name_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(name_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igFindOrCreateWindowSettings", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *igFindOrCreateWindowSettings_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "typeName">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiSettingsHandler* igFindSettingsHandler([In] const char* type_name)</unmanaged>
        /// <unmanaged-short>igFindSettingsHandler</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiSettingsHandler FindSettingsHandler(System.String typeName)
        {
            System.IntPtr typeName_;
            DearImguiSharp.ImGuiSettingsHandler __result__;
            DearImguiSharp.ImGuiSettingsHandler.__Native __result__native = default (DearImguiSharp.ImGuiSettingsHandler.__Native);
            __result__ = default (DearImguiSharp.ImGuiSettingsHandler);
            typeName_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(typeName);
            igFindSettingsHandler_(&__result__native, (void *)typeName_);
            __result__.__MarshalFrom(ref __result__native);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(typeName_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igFindSettingsHandler", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *igFindSettingsHandler_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "window">No documentation.</param>
        /// <param name = "newScrollX">No documentation.</param>
        /// <unmanaged>void igSetScrollXWindowPtr([In] ImGuiWindow* window,[In] float new_scroll_x)</unmanaged>
        /// <unmanaged-short>igSetScrollXWindowPtr</unmanaged-short>
        public static unsafe void SetScrollXWindowPtr(ref DearImguiSharp.ImGuiWindow window, System.Single newScrollX)
        {
            DearImguiSharp.ImGuiWindow.__Native window_ = default (DearImguiSharp.ImGuiWindow.__Native);
            window.__MarshalTo(ref window_);
            igSetScrollXWindowPtr_(&window_, newScrollX);
            window.__MarshalFree(ref window_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetScrollXWindowPtr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetScrollXWindowPtr_(void *param0, float param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "window">No documentation.</param>
        /// <param name = "newScrollY">No documentation.</param>
        /// <unmanaged>void igSetScrollYWindowPtr([In] ImGuiWindow* window,[In] float new_scroll_y)</unmanaged>
        /// <unmanaged-short>igSetScrollYWindowPtr</unmanaged-short>
        public static unsafe void SetScrollYWindowPtr(ref DearImguiSharp.ImGuiWindow window, System.Single newScrollY)
        {
            DearImguiSharp.ImGuiWindow.__Native window_ = default (DearImguiSharp.ImGuiWindow.__Native);
            window.__MarshalTo(ref window_);
            igSetScrollYWindowPtr_(&window_, newScrollY);
            window.__MarshalFree(ref window_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetScrollYWindowPtr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetScrollYWindowPtr_(void *param0, float param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "window">No documentation.</param>
        /// <param name = "localX">No documentation.</param>
        /// <param name = "centerXRatio">No documentation.</param>
        /// <unmanaged>void igSetScrollFromPosXWindowPtr([In] ImGuiWindow* window,[In] float local_x,[In] float center_x_ratio)</unmanaged>
        /// <unmanaged-short>igSetScrollFromPosXWindowPtr</unmanaged-short>
        public static unsafe void SetScrollFromPosXWindowPtr(ref DearImguiSharp.ImGuiWindow window, System.Single localX, System.Single centerXRatio)
        {
            DearImguiSharp.ImGuiWindow.__Native window_ = default (DearImguiSharp.ImGuiWindow.__Native);
            window.__MarshalTo(ref window_);
            igSetScrollFromPosXWindowPtr_(&window_, localX, centerXRatio);
            window.__MarshalFree(ref window_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetScrollFromPosXWindowPtr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetScrollFromPosXWindowPtr_(void *param0, float param1, float param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "window">No documentation.</param>
        /// <param name = "localY">No documentation.</param>
        /// <param name = "centerYRatio">No documentation.</param>
        /// <unmanaged>void igSetScrollFromPosYWindowPtr([In] ImGuiWindow* window,[In] float local_y,[In] float center_y_ratio)</unmanaged>
        /// <unmanaged-short>igSetScrollFromPosYWindowPtr</unmanaged-short>
        public static unsafe void SetScrollFromPosYWindowPtr(ref DearImguiSharp.ImGuiWindow window, System.Single localY, System.Single centerYRatio)
        {
            DearImguiSharp.ImGuiWindow.__Native window_ = default (DearImguiSharp.ImGuiWindow.__Native);
            window.__MarshalTo(ref window_);
            igSetScrollFromPosYWindowPtr_(&window_, localY, centerYRatio);
            window.__MarshalFree(ref window_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetScrollFromPosYWindowPtr", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetScrollFromPosYWindowPtr_(void *param0, float param1, float param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "window">No documentation.</param>
        /// <param name = "itemRect">No documentation.</param>
        /// <unmanaged>void igScrollToBringRectIntoView([In] ImVec2* pOut,[In] ImGuiWindow* window,[In] const ImRect item_rect)</unmanaged>
        /// <unmanaged-short>igScrollToBringRectIntoView</unmanaged-short>
        public static unsafe void ScrollToBringRectIntoView(DearImguiSharp.ImVec2 outRef, ref DearImguiSharp.ImGuiWindow window, DearImguiSharp.ImRect itemRect)
        {
            DearImguiSharp.ImGuiWindow.__Native window_ = default (DearImguiSharp.ImGuiWindow.__Native);
            window.__MarshalTo(ref window_);
            igScrollToBringRectIntoView_(&outRef, &window_, itemRect);
            window.__MarshalFree(ref window_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igScrollToBringRectIntoView", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igScrollToBringRectIntoView_(void *param0, void *param1, DearImguiSharp.ImRect param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>unsigned int igGetItemID()</unmanaged>
        /// <unmanaged-short>igGetItemID</unmanaged-short>
        public static unsafe System.UInt32 GetItemID()
        {
            System.UInt32 __result__;
            __result__ = igGetItemID_();
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetItemID", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt32 igGetItemID_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>int igGetItemStatusFlags()</unmanaged>
        /// <unmanaged-short>igGetItemStatusFlags</unmanaged-short>
        public static unsafe System.Int32 GetItemStatusFlags()
        {
            System.Int32 __result__;
            __result__ = igGetItemStatusFlags_();
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetItemStatusFlags", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern int igGetItemStatusFlags_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>unsigned int igGetActiveID()</unmanaged>
        /// <unmanaged-short>igGetActiveID</unmanaged-short>
        public static unsafe System.UInt32 GetActiveID()
        {
            System.UInt32 __result__;
            __result__ = igGetActiveID_();
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetActiveID", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt32 igGetActiveID_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>unsigned int igGetFocusID()</unmanaged>
        /// <unmanaged-short>igGetFocusID</unmanaged-short>
        public static unsafe System.UInt32 GetFocusID()
        {
            System.UInt32 __result__;
            __result__ = igGetFocusID_();
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetFocusID", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt32 igGetFocusID_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "id">No documentation.</param>
        /// <param name = "window">No documentation.</param>
        /// <unmanaged>void igSetActiveID([In] unsigned int id,[In] ImGuiWindow* window)</unmanaged>
        /// <unmanaged-short>igSetActiveID</unmanaged-short>
        public static unsafe void SetActiveID(System.UInt32 id, ref DearImguiSharp.ImGuiWindow window)
        {
            DearImguiSharp.ImGuiWindow.__Native window_ = default (DearImguiSharp.ImGuiWindow.__Native);
            window.__MarshalTo(ref window_);
            igSetActiveID_(id, &window_);
            window.__MarshalFree(ref window_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetActiveID", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetActiveID_(System.UInt32 param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "id">No documentation.</param>
        /// <param name = "window">No documentation.</param>
        /// <unmanaged>void igSetFocusID([In] unsigned int id,[In] ImGuiWindow* window)</unmanaged>
        /// <unmanaged-short>igSetFocusID</unmanaged-short>
        public static unsafe void SetFocusID(System.UInt32 id, ref DearImguiSharp.ImGuiWindow window)
        {
            DearImguiSharp.ImGuiWindow.__Native window_ = default (DearImguiSharp.ImGuiWindow.__Native);
            window.__MarshalTo(ref window_);
            igSetFocusID_(id, &window_);
            window.__MarshalFree(ref window_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetFocusID", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetFocusID_(System.UInt32 param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igClearActiveID()</unmanaged>
        /// <unmanaged-short>igClearActiveID</unmanaged-short>
        public static unsafe void ClearActiveID()
        {
            igClearActiveID_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igClearActiveID", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igClearActiveID_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>unsigned int igGetHoveredID()</unmanaged>
        /// <unmanaged-short>igGetHoveredID</unmanaged-short>
        public static unsafe System.UInt32 GetHoveredID()
        {
            System.UInt32 __result__;
            __result__ = igGetHoveredID_();
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetHoveredID", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt32 igGetHoveredID_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "id">No documentation.</param>
        /// <unmanaged>void igSetHoveredID([In] unsigned int id)</unmanaged>
        /// <unmanaged-short>igSetHoveredID</unmanaged-short>
        public static unsafe void SetHoveredID(System.UInt32 id)
        {
            igSetHoveredID_(id);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetHoveredID", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetHoveredID_(System.UInt32 param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "id">No documentation.</param>
        /// <unmanaged>void igKeepAliveID([In] unsigned int id)</unmanaged>
        /// <unmanaged-short>igKeepAliveID</unmanaged-short>
        public static unsafe void KeepAliveID(System.UInt32 id)
        {
            igKeepAliveID_(id);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igKeepAliveID", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igKeepAliveID_(System.UInt32 param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "id">No documentation.</param>
        /// <unmanaged>void igMarkItemEdited([In] unsigned int id)</unmanaged>
        /// <unmanaged-short>igMarkItemEdited</unmanaged-short>
        public static unsafe void MarkItemEdited(System.UInt32 id)
        {
            igMarkItemEdited_(id);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igMarkItemEdited", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igMarkItemEdited_(System.UInt32 param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "id">No documentation.</param>
        /// <unmanaged>void igPushOverrideID([In] unsigned int id)</unmanaged>
        /// <unmanaged-short>igPushOverrideID</unmanaged-short>
        public static unsafe void PushOverrideID(System.UInt32 id)
        {
            igPushOverrideID_(id);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPushOverrideID", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPushOverrideID_(System.UInt32 param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "size">No documentation.</param>
        /// <param name = "textBaselineY">No documentation.</param>
        /// <unmanaged>void igItemSizeVec2([In] const ImVec2 size,[In] float text_baseline_y)</unmanaged>
        /// <unmanaged-short>igItemSizeVec2</unmanaged-short>
        public static unsafe void ItemSizeVec2(DearImguiSharp.ImVec2 size, System.Single textBaselineY)
        {
            igItemSizeVec2_(size, textBaselineY);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igItemSizeVec2", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igItemSizeVec2_(DearImguiSharp.ImVec2 param0, float param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "bb">No documentation.</param>
        /// <param name = "textBaselineY">No documentation.</param>
        /// <unmanaged>void igItemSizeRect([In] const ImRect bb,[In] float text_baseline_y)</unmanaged>
        /// <unmanaged-short>igItemSizeRect</unmanaged-short>
        public static unsafe void ItemSizeRect(DearImguiSharp.ImRect bb, System.Single textBaselineY)
        {
            igItemSizeRect_(bb, textBaselineY);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igItemSizeRect", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igItemSizeRect_(DearImguiSharp.ImRect param0, float param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "bb">No documentation.</param>
        /// <param name = "id">No documentation.</param>
        /// <param name = "navBb">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igItemAdd([In] const ImRect bb,[In] unsigned int id,[In] const ImRect* nav_bb)</unmanaged>
        /// <unmanaged-short>igItemAdd</unmanaged-short>
        public static unsafe System.Boolean ItemAdd(DearImguiSharp.ImRect bb, System.UInt32 id, DearImguiSharp.ImRect navBb)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igItemAdd_(bb, id, &navBb);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igItemAdd", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igItemAdd_(DearImguiSharp.ImRect param0, System.UInt32 param1, void *param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "bb">No documentation.</param>
        /// <param name = "id">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igItemHoverable([In] const ImRect bb,[In] unsigned int id)</unmanaged>
        /// <unmanaged-short>igItemHoverable</unmanaged-short>
        public static unsafe System.Boolean ItemHoverable(DearImguiSharp.ImRect bb, System.UInt32 id)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igItemHoverable_(bb, id);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igItemHoverable", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igItemHoverable_(DearImguiSharp.ImRect param0, System.UInt32 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "bb">No documentation.</param>
        /// <param name = "id">No documentation.</param>
        /// <param name = "clipEvenWhenLogged">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsClippedEx([In] const ImRect bb,[In] unsigned int id,[In] bool clip_even_when_logged)</unmanaged>
        /// <unmanaged-short>igIsClippedEx</unmanaged-short>
        public static unsafe System.Boolean IsClippedEx(DearImguiSharp.ImRect bb, System.UInt32 id, System.Boolean clipEvenWhenLogged)
        {
            System.Byte clipEvenWhenLogged_;
            System.Boolean __result__;
            System.Byte __result__native;
            clipEvenWhenLogged_ = (System.Byte)(clipEvenWhenLogged ? 1 : 0);
            __result__native = igIsClippedEx_(bb, id, clipEvenWhenLogged_);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsClippedEx", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsClippedEx_(DearImguiSharp.ImRect param0, System.UInt32 param1, System.Byte param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "window">No documentation.</param>
        /// <param name = "id">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igFocusableItemRegister([In] ImGuiWindow* window,[In] unsigned int id)</unmanaged>
        /// <unmanaged-short>igFocusableItemRegister</unmanaged-short>
        public static unsafe System.Boolean FocusableItemRegister(ref DearImguiSharp.ImGuiWindow window, System.UInt32 id)
        {
            DearImguiSharp.ImGuiWindow.__Native window_ = default (DearImguiSharp.ImGuiWindow.__Native);
            System.Boolean __result__;
            System.Byte __result__native;
            window.__MarshalTo(ref window_);
            __result__native = igFocusableItemRegister_(&window_, id);
            __result__ = __result__native != 0;
            window.__MarshalFree(ref window_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igFocusableItemRegister", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igFocusableItemRegister_(void *param0, System.UInt32 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "window">No documentation.</param>
        /// <unmanaged>void igFocusableItemUnregister([In] ImGuiWindow* window)</unmanaged>
        /// <unmanaged-short>igFocusableItemUnregister</unmanaged-short>
        public static unsafe void FocusableItemUnregister(ref DearImguiSharp.ImGuiWindow window)
        {
            DearImguiSharp.ImGuiWindow.__Native window_ = default (DearImguiSharp.ImGuiWindow.__Native);
            window.__MarshalTo(ref window_);
            igFocusableItemUnregister_(&window_);
            window.__MarshalFree(ref window_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igFocusableItemUnregister", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igFocusableItemUnregister_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "size">No documentation.</param>
        /// <param name = "defaultW">No documentation.</param>
        /// <param name = "defaultH">No documentation.</param>
        /// <unmanaged>void igCalcItemSize([In] ImVec2* pOut,[In] ImVec2 size,[In] float default_w,[In] float default_h)</unmanaged>
        /// <unmanaged-short>igCalcItemSize</unmanaged-short>
        public static unsafe void CalcItemSize(DearImguiSharp.ImVec2 outRef, DearImguiSharp.ImVec2 size, System.Single defaultW, System.Single defaultH)
        {
            igCalcItemSize_(&outRef, size, defaultW, defaultH);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igCalcItemSize", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igCalcItemSize_(void *param0, DearImguiSharp.ImVec2 param1, float param2, float param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "pos">No documentation.</param>
        /// <param name = "wrapPosX">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float igCalcWrapWidthForPos([In] const ImVec2 pos,[In] float wrap_pos_x)</unmanaged>
        /// <unmanaged-short>igCalcWrapWidthForPos</unmanaged-short>
        public static unsafe System.Single CalcWrapWidthForPos(DearImguiSharp.ImVec2 pos, System.Single wrapPosX)
        {
            System.Single __result__;
            __result__ = igCalcWrapWidthForPos_(pos, wrapPosX);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igCalcWrapWidthForPos", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float igCalcWrapWidthForPos_(DearImguiSharp.ImVec2 param0, float param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "components">No documentation.</param>
        /// <param name = "widthFull">No documentation.</param>
        /// <unmanaged>void igPushMultiItemsWidths([In] int components,[In] float width_full)</unmanaged>
        /// <unmanaged-short>igPushMultiItemsWidths</unmanaged-short>
        public static unsafe void PushMultiItemsWidths(System.Int32 components, System.Single widthFull)
        {
            igPushMultiItemsWidths_(components, widthFull);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPushMultiItemsWidths", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPushMultiItemsWidths_(int param0, float param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "option">No documentation.</param>
        /// <param name = "enabled">No documentation.</param>
        /// <unmanaged>void igPushItemFlag([In] int option,[In] bool enabled)</unmanaged>
        /// <unmanaged-short>igPushItemFlag</unmanaged-short>
        public static unsafe void PushItemFlag(System.Int32 option, System.Boolean enabled)
        {
            System.Byte enabled_;
            enabled_ = (System.Byte)(enabled ? 1 : 0);
            igPushItemFlag_(option, enabled_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPushItemFlag", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPushItemFlag_(int param0, System.Byte param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igPopItemFlag()</unmanaged>
        /// <unmanaged-short>igPopItemFlag</unmanaged-short>
        public static unsafe void PopItemFlag()
        {
            igPopItemFlag_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPopItemFlag", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPopItemFlag_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsItemToggledSelection()</unmanaged>
        /// <unmanaged-short>igIsItemToggledSelection</unmanaged-short>
        public static unsafe System.Boolean IsItemToggledSelection()
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsItemToggledSelection_();
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsItemToggledSelection", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsItemToggledSelection_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <unmanaged>void igGetContentRegionMaxAbs([In] ImVec2* pOut)</unmanaged>
        /// <unmanaged-short>igGetContentRegionMaxAbs</unmanaged-short>
        public static unsafe void GetContentRegionMaxAbs(DearImguiSharp.ImVec2 outRef)
        {
            igGetContentRegionMaxAbs_(&outRef);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetContentRegionMaxAbs", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igGetContentRegionMaxAbs_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "items">No documentation.</param>
        /// <param name = "count">No documentation.</param>
        /// <param name = "widthExcess">No documentation.</param>
        /// <unmanaged>void igShrinkWidths([In] ImGuiShrinkWidthItem* items,[In] int count,[In] float width_excess)</unmanaged>
        /// <unmanaged-short>igShrinkWidths</unmanaged-short>
        public static unsafe void ShrinkWidths(DearImguiSharp.ImGuiShrinkWidthItem items, System.Int32 count, System.Single widthExcess)
        {
            igShrinkWidths_(&items, count, widthExcess);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igShrinkWidths", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igShrinkWidths_(void *param0, int param1, float param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "type">No documentation.</param>
        /// <param name = "autoOpenDepth">No documentation.</param>
        /// <unmanaged>void igLogBegin([In] ImGuiLogType type,[In] int auto_open_depth)</unmanaged>
        /// <unmanaged-short>igLogBegin</unmanaged-short>
        public static unsafe void LogBegin(DearImguiSharp.ImGuiLogType type, System.Int32 autoOpenDepth)
        {
            igLogBegin_(unchecked ((System.Int32)type), autoOpenDepth);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igLogBegin", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igLogBegin_(int param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "autoOpenDepth">No documentation.</param>
        /// <unmanaged>void igLogToBuffer([In] int auto_open_depth)</unmanaged>
        /// <unmanaged-short>igLogToBuffer</unmanaged-short>
        public static unsafe void LogToBuffer(System.Int32 autoOpenDepth)
        {
            igLogToBuffer_(autoOpenDepth);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igLogToBuffer", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igLogToBuffer_(int param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "name">No documentation.</param>
        /// <param name = "id">No documentation.</param>
        /// <param name = "sizeArg">No documentation.</param>
        /// <param name = "border">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igBeginChildEx([In] const char* name,[In] unsigned int id,[In] const ImVec2 size_arg,[In] bool border,[In] int flags)</unmanaged>
        /// <unmanaged-short>igBeginChildEx</unmanaged-short>
        public static unsafe System.Boolean BeginChildEx(System.String name, System.UInt32 id, DearImguiSharp.ImVec2 sizeArg, System.Boolean border, System.Int32 flags)
        {
            System.IntPtr name_;
            System.Byte border_;
            System.Boolean __result__;
            System.Byte __result__native;
            name_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(name);
            border_ = (System.Byte)(border ? 1 : 0);
            __result__native = igBeginChildEx_((void *)name_, id, sizeArg, border_, flags);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(name_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igBeginChildEx", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igBeginChildEx_(void *param0, System.UInt32 param1, DearImguiSharp.ImVec2 param2, System.Byte param3, int param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "id">No documentation.</param>
        /// <unmanaged>void igOpenPopupEx([In] unsigned int id)</unmanaged>
        /// <unmanaged-short>igOpenPopupEx</unmanaged-short>
        public static unsafe void OpenPopupEx(System.UInt32 id)
        {
            igOpenPopupEx_(id);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igOpenPopupEx", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igOpenPopupEx_(System.UInt32 param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "remaining">No documentation.</param>
        /// <param name = "restoreFocusToWindowUnderPopup">No documentation.</param>
        /// <unmanaged>void igClosePopupToLevel([In] int remaining,[In] bool restore_focus_to_window_under_popup)</unmanaged>
        /// <unmanaged-short>igClosePopupToLevel</unmanaged-short>
        public static unsafe void ClosePopupToLevel(System.Int32 remaining, System.Boolean restoreFocusToWindowUnderPopup)
        {
            System.Byte restoreFocusToWindowUnderPopup_;
            restoreFocusToWindowUnderPopup_ = (System.Byte)(restoreFocusToWindowUnderPopup ? 1 : 0);
            igClosePopupToLevel_(remaining, restoreFocusToWindowUnderPopup_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igClosePopupToLevel", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igClosePopupToLevel_(int param0, System.Byte param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "refWindow">No documentation.</param>
        /// <param name = "restoreFocusToWindowUnderPopup">No documentation.</param>
        /// <unmanaged>void igClosePopupsOverWindow([In] ImGuiWindow* ref_window,[In] bool restore_focus_to_window_under_popup)</unmanaged>
        /// <unmanaged-short>igClosePopupsOverWindow</unmanaged-short>
        public static unsafe void ClosePopupsOverWindow(ref DearImguiSharp.ImGuiWindow refWindow, System.Boolean restoreFocusToWindowUnderPopup)
        {
            DearImguiSharp.ImGuiWindow.__Native refWindow_ = default (DearImguiSharp.ImGuiWindow.__Native);
            System.Byte restoreFocusToWindowUnderPopup_;
            refWindow.__MarshalTo(ref refWindow_);
            restoreFocusToWindowUnderPopup_ = (System.Byte)(restoreFocusToWindowUnderPopup ? 1 : 0);
            igClosePopupsOverWindow_(&refWindow_, restoreFocusToWindowUnderPopup_);
            refWindow.__MarshalFree(ref refWindow_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igClosePopupsOverWindow", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igClosePopupsOverWindow_(void *param0, System.Byte param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "id">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsPopupOpenID([In] unsigned int id)</unmanaged>
        /// <unmanaged-short>igIsPopupOpenID</unmanaged-short>
        public static unsafe System.Boolean IsPopupOpenID(System.UInt32 id)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsPopupOpenID_(id);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsPopupOpenID", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsPopupOpenID_(System.UInt32 param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "id">No documentation.</param>
        /// <param name = "extraFlags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igBeginPopupEx([In] unsigned int id,[In] int extra_flags)</unmanaged>
        /// <unmanaged-short>igBeginPopupEx</unmanaged-short>
        public static unsafe System.Boolean BeginPopupEx(System.UInt32 id, System.Int32 extraFlags)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igBeginPopupEx_(id, extraFlags);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igBeginPopupEx", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igBeginPopupEx_(System.UInt32 param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "extraFlags">No documentation.</param>
        /// <param name = "tooltipFlags">No documentation.</param>
        /// <unmanaged>void igBeginTooltipEx([In] int extra_flags,[In] int tooltip_flags)</unmanaged>
        /// <unmanaged-short>igBeginTooltipEx</unmanaged-short>
        public static unsafe void BeginTooltipEx(System.Int32 extraFlags, System.Int32 tooltipFlags)
        {
            igBeginTooltipEx_(extraFlags, tooltipFlags);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igBeginTooltipEx", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igBeginTooltipEx_(int param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiWindow* igGetTopMostPopupModal()</unmanaged>
        /// <unmanaged-short>igGetTopMostPopupModal</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiWindow GetTopMostPopupModal()
        {
            DearImguiSharp.ImGuiWindow __result__;
            DearImguiSharp.ImGuiWindow.__Native __result__native = default (DearImguiSharp.ImGuiWindow.__Native);
            __result__ = default (DearImguiSharp.ImGuiWindow);
            igGetTopMostPopupModal_(&__result__native);
            __result__.__MarshalFrom(ref __result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetTopMostPopupModal", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *igGetTopMostPopupModal_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "window">No documentation.</param>
        /// <unmanaged>void igFindBestWindowPosForPopup([In] ImVec2* pOut,[In] ImGuiWindow* window)</unmanaged>
        /// <unmanaged-short>igFindBestWindowPosForPopup</unmanaged-short>
        public static unsafe void FindBestWindowPosForPopup(DearImguiSharp.ImVec2 outRef, ref DearImguiSharp.ImGuiWindow window)
        {
            DearImguiSharp.ImGuiWindow.__Native window_ = default (DearImguiSharp.ImGuiWindow.__Native);
            window.__MarshalTo(ref window_);
            igFindBestWindowPosForPopup_(&outRef, &window_);
            window.__MarshalFree(ref window_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igFindBestWindowPosForPopup", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igFindBestWindowPosForPopup_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "refPos">No documentation.</param>
        /// <param name = "size">No documentation.</param>
        /// <param name = "lastDir">No documentation.</param>
        /// <param name = "rOuter">No documentation.</param>
        /// <param name = "rAvoid">No documentation.</param>
        /// <param name = "policy">No documentation.</param>
        /// <unmanaged>void igFindBestWindowPosForPopupEx([In] ImVec2* pOut,[In] const ImVec2 ref_pos,[In] const ImVec2 size,[In] int* last_dir,[In] const ImRect r_outer,[In] const ImRect r_avoid,[In] ImGuiPopupPositionPolicy policy)</unmanaged>
        /// <unmanaged-short>igFindBestWindowPosForPopupEx</unmanaged-short>
        public static unsafe void FindBestWindowPosForPopupEx(DearImguiSharp.ImVec2 outRef, DearImguiSharp.ImVec2 refPos, DearImguiSharp.ImVec2 size, System.Int32 lastDir, DearImguiSharp.ImRect rOuter, DearImguiSharp.ImRect rAvoid, DearImguiSharp.ImGuiPopupPositionPolicy policy)
        {
            igFindBestWindowPosForPopupEx_(&outRef, refPos, size, &lastDir, rOuter, rAvoid, unchecked ((System.Int32)policy));
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igFindBestWindowPosForPopupEx", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igFindBestWindowPosForPopupEx_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2, void *param3, DearImguiSharp.ImRect param4, DearImguiSharp.ImRect param5, int param6);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "window">No documentation.</param>
        /// <param name = "forceReinit">No documentation.</param>
        /// <unmanaged>void igNavInitWindow([In] ImGuiWindow* window,[In] bool force_reinit)</unmanaged>
        /// <unmanaged-short>igNavInitWindow</unmanaged-short>
        public static unsafe void NavInitWindow(ref DearImguiSharp.ImGuiWindow window, System.Boolean forceReinit)
        {
            DearImguiSharp.ImGuiWindow.__Native window_ = default (DearImguiSharp.ImGuiWindow.__Native);
            System.Byte forceReinit_;
            window.__MarshalTo(ref window_);
            forceReinit_ = (System.Byte)(forceReinit ? 1 : 0);
            igNavInitWindow_(&window_, forceReinit_);
            window.__MarshalFree(ref window_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igNavInitWindow", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igNavInitWindow_(void *param0, System.Byte param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igNavMoveRequestButNoResultYet()</unmanaged>
        /// <unmanaged-short>igNavMoveRequestButNoResultYet</unmanaged-short>
        public static unsafe System.Boolean NavMoveRequestButNoResultYet()
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igNavMoveRequestButNoResultYet_();
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igNavMoveRequestButNoResultYet", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igNavMoveRequestButNoResultYet_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igNavMoveRequestCancel()</unmanaged>
        /// <unmanaged-short>igNavMoveRequestCancel</unmanaged-short>
        public static unsafe void NavMoveRequestCancel()
        {
            igNavMoveRequestCancel_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igNavMoveRequestCancel", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igNavMoveRequestCancel_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "moveDir">No documentation.</param>
        /// <param name = "clipDir">No documentation.</param>
        /// <param name = "bbRel">No documentation.</param>
        /// <param name = "moveFlags">No documentation.</param>
        /// <unmanaged>void igNavMoveRequestForward([In] int move_dir,[In] int clip_dir,[In] const ImRect bb_rel,[In] int move_flags)</unmanaged>
        /// <unmanaged-short>igNavMoveRequestForward</unmanaged-short>
        public static unsafe void NavMoveRequestForward(System.Int32 moveDir, System.Int32 clipDir, DearImguiSharp.ImRect bbRel, System.Int32 moveFlags)
        {
            igNavMoveRequestForward_(moveDir, clipDir, bbRel, moveFlags);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igNavMoveRequestForward", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igNavMoveRequestForward_(int param0, int param1, DearImguiSharp.ImRect param2, int param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "window">No documentation.</param>
        /// <param name = "moveFlags">No documentation.</param>
        /// <unmanaged>void igNavMoveRequestTryWrapping([In] ImGuiWindow* window,[In] int move_flags)</unmanaged>
        /// <unmanaged-short>igNavMoveRequestTryWrapping</unmanaged-short>
        public static unsafe void NavMoveRequestTryWrapping(ref DearImguiSharp.ImGuiWindow window, System.Int32 moveFlags)
        {
            DearImguiSharp.ImGuiWindow.__Native window_ = default (DearImguiSharp.ImGuiWindow.__Native);
            window.__MarshalTo(ref window_);
            igNavMoveRequestTryWrapping_(&window_, moveFlags);
            window.__MarshalFree(ref window_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igNavMoveRequestTryWrapping", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igNavMoveRequestTryWrapping_(void *param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "n">No documentation.</param>
        /// <param name = "mode">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float igGetNavInputAmount([In] int n,[In] ImGuiInputReadMode mode)</unmanaged>
        /// <unmanaged-short>igGetNavInputAmount</unmanaged-short>
        public static unsafe System.Single GetNavInputAmount(System.Int32 n, DearImguiSharp.ImGuiInputReadMode mode)
        {
            System.Single __result__;
            __result__ = igGetNavInputAmount_(n, unchecked ((System.Int32)mode));
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetNavInputAmount", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float igGetNavInputAmount_(int param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "dirSources">No documentation.</param>
        /// <param name = "mode">No documentation.</param>
        /// <param name = "slowFactor">No documentation.</param>
        /// <param name = "fastFactor">No documentation.</param>
        /// <unmanaged>void igGetNavInputAmount2d([In] ImVec2* pOut,[In] int dir_sources,[In] ImGuiInputReadMode mode,[In] float slow_factor,[In] float fast_factor)</unmanaged>
        /// <unmanaged-short>igGetNavInputAmount2d</unmanaged-short>
        public static unsafe void GetNavInputAmount2d(DearImguiSharp.ImVec2 outRef, System.Int32 dirSources, DearImguiSharp.ImGuiInputReadMode mode, System.Single slowFactor, System.Single fastFactor)
        {
            igGetNavInputAmount2d_(&outRef, dirSources, unchecked ((System.Int32)mode), slowFactor, fastFactor);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetNavInputAmount2d", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igGetNavInputAmount2d_(void *param0, int param1, int param2, float param3, float param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "t0">No documentation.</param>
        /// <param name = "t1">No documentation.</param>
        /// <param name = "repeatDelay">No documentation.</param>
        /// <param name = "repeatRate">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>int igCalcTypematicRepeatAmount([In] float t0,[In] float t1,[In] float repeat_delay,[In] float repeat_rate)</unmanaged>
        /// <unmanaged-short>igCalcTypematicRepeatAmount</unmanaged-short>
        public static unsafe System.Int32 CalcTypematicRepeatAmount(System.Single t0, System.Single t1, System.Single repeatDelay, System.Single repeatRate)
        {
            System.Int32 __result__;
            __result__ = igCalcTypematicRepeatAmount_(t0, t1, repeatDelay, repeatRate);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igCalcTypematicRepeatAmount", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern int igCalcTypematicRepeatAmount_(float param0, float param1, float param2, float param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "id">No documentation.</param>
        /// <unmanaged>void igActivateItem([In] unsigned int id)</unmanaged>
        /// <unmanaged-short>igActivateItem</unmanaged-short>
        public static unsafe void ActivateItem(System.UInt32 id)
        {
            igActivateItem_(id);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igActivateItem", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igActivateItem_(System.UInt32 param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "id">No documentation.</param>
        /// <param name = "navLayer">No documentation.</param>
        /// <param name = "focusScopeId">No documentation.</param>
        /// <unmanaged>void igSetNavID([In] unsigned int id,[In] int nav_layer,[In] unsigned int focus_scope_id)</unmanaged>
        /// <unmanaged-short>igSetNavID</unmanaged-short>
        public static unsafe void SetNavID(System.UInt32 id, System.Int32 navLayer, System.UInt32 focusScopeId)
        {
            igSetNavID_(id, navLayer, focusScopeId);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetNavID", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetNavID_(System.UInt32 param0, int param1, System.UInt32 param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "id">No documentation.</param>
        /// <param name = "navLayer">No documentation.</param>
        /// <param name = "focusScopeId">No documentation.</param>
        /// <param name = "rectRel">No documentation.</param>
        /// <unmanaged>void igSetNavIDWithRectRel([In] unsigned int id,[In] int nav_layer,[In] unsigned int focus_scope_id,[In] const ImRect rect_rel)</unmanaged>
        /// <unmanaged-short>igSetNavIDWithRectRel</unmanaged-short>
        public static unsafe void SetNavIDWithRectRel(System.UInt32 id, System.Int32 navLayer, System.UInt32 focusScopeId, DearImguiSharp.ImRect rectRel)
        {
            igSetNavIDWithRectRel_(id, navLayer, focusScopeId, rectRel);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSetNavIDWithRectRel", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSetNavIDWithRectRel_(System.UInt32 param0, int param1, System.UInt32 param2, DearImguiSharp.ImRect param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "id">No documentation.</param>
        /// <unmanaged>void igPushFocusScope([In] unsigned int id)</unmanaged>
        /// <unmanaged-short>igPushFocusScope</unmanaged-short>
        public static unsafe void PushFocusScope(System.UInt32 id)
        {
            igPushFocusScope_(id);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPushFocusScope", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPushFocusScope_(System.UInt32 param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igPopFocusScope()</unmanaged>
        /// <unmanaged-short>igPopFocusScope</unmanaged-short>
        public static unsafe void PopFocusScope()
        {
            igPopFocusScope_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPopFocusScope", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPopFocusScope_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>unsigned int igGetFocusScopeID()</unmanaged>
        /// <unmanaged-short>igGetFocusScopeID</unmanaged-short>
        public static unsafe System.UInt32 GetFocusScopeID()
        {
            System.UInt32 __result__;
            __result__ = igGetFocusScopeID_();
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetFocusScopeID", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt32 igGetFocusScopeID_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "dir">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsActiveIdUsingNavDir([In] int dir)</unmanaged>
        /// <unmanaged-short>igIsActiveIdUsingNavDir</unmanaged-short>
        public static unsafe System.Boolean IsActiveIdUsingNavDir(System.Int32 dir)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsActiveIdUsingNavDir_(dir);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsActiveIdUsingNavDir", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsActiveIdUsingNavDir_(int param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "input">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsActiveIdUsingNavInput([In] int input)</unmanaged>
        /// <unmanaged-short>igIsActiveIdUsingNavInput</unmanaged-short>
        public static unsafe System.Boolean IsActiveIdUsingNavInput(System.Int32 input)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsActiveIdUsingNavInput_(input);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsActiveIdUsingNavInput", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsActiveIdUsingNavInput_(int param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "key">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsActiveIdUsingKey([In] int key)</unmanaged>
        /// <unmanaged-short>igIsActiveIdUsingKey</unmanaged-short>
        public static unsafe System.Boolean IsActiveIdUsingKey(System.Int32 key)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsActiveIdUsingKey_(key);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsActiveIdUsingKey", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsActiveIdUsingKey_(int param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "button">No documentation.</param>
        /// <param name = "lockThreshold">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsMouseDragPastThreshold([In] int button,[In] float lock_threshold)</unmanaged>
        /// <unmanaged-short>igIsMouseDragPastThreshold</unmanaged-short>
        public static unsafe System.Boolean IsMouseDragPastThreshold(System.Int32 button, System.Single lockThreshold)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsMouseDragPastThreshold_(button, lockThreshold);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsMouseDragPastThreshold", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsMouseDragPastThreshold_(int param0, float param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "key">No documentation.</param>
        /// <param name = "repeat">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsKeyPressedMap([In] int key,[In] bool repeat)</unmanaged>
        /// <unmanaged-short>igIsKeyPressedMap</unmanaged-short>
        public static unsafe System.Boolean IsKeyPressedMap(System.Int32 key, System.Boolean repeat)
        {
            System.Byte repeat_;
            System.Boolean __result__;
            System.Byte __result__native;
            repeat_ = (System.Byte)(repeat ? 1 : 0);
            __result__native = igIsKeyPressedMap_(key, repeat_);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsKeyPressedMap", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsKeyPressedMap_(int param0, System.Byte param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "n">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsNavInputDown([In] int n)</unmanaged>
        /// <unmanaged-short>igIsNavInputDown</unmanaged-short>
        public static unsafe System.Boolean IsNavInputDown(System.Int32 n)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsNavInputDown_(n);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsNavInputDown", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsNavInputDown_(int param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "n">No documentation.</param>
        /// <param name = "rm">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsNavInputTest([In] int n,[In] ImGuiInputReadMode rm)</unmanaged>
        /// <unmanaged-short>igIsNavInputTest</unmanaged-short>
        public static unsafe System.Boolean IsNavInputTest(System.Int32 n, DearImguiSharp.ImGuiInputReadMode rm)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsNavInputTest_(n, unchecked ((System.Int32)rm));
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsNavInputTest", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsNavInputTest_(int param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "bb">No documentation.</param>
        /// <param name = "id">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igBeginDragDropTargetCustom([In] const ImRect bb,[In] unsigned int id)</unmanaged>
        /// <unmanaged-short>igBeginDragDropTargetCustom</unmanaged-short>
        public static unsafe System.Boolean BeginDragDropTargetCustom(DearImguiSharp.ImRect bb, System.UInt32 id)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igBeginDragDropTargetCustom_(bb, id);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igBeginDragDropTargetCustom", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igBeginDragDropTargetCustom_(DearImguiSharp.ImRect param0, System.UInt32 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igClearDragDrop()</unmanaged>
        /// <unmanaged-short>igClearDragDrop</unmanaged-short>
        public static unsafe void ClearDragDrop()
        {
            igClearDragDrop_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igClearDragDrop", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igClearDragDrop_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igIsDragDropPayloadBeingAccepted()</unmanaged>
        /// <unmanaged-short>igIsDragDropPayloadBeingAccepted</unmanaged-short>
        public static unsafe System.Boolean IsDragDropPayloadBeingAccepted()
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igIsDragDropPayloadBeingAccepted_();
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igIsDragDropPayloadBeingAccepted", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igIsDragDropPayloadBeingAccepted_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "strId">No documentation.</param>
        /// <param name = "count">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <unmanaged>void igBeginColumns([In] const char* str_id,[In] int count,[In] int flags)</unmanaged>
        /// <unmanaged-short>igBeginColumns</unmanaged-short>
        public static unsafe void BeginColumns(System.String strId, System.Int32 count, System.Int32 flags)
        {
            System.IntPtr strId_;
            strId_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(strId);
            igBeginColumns_((void *)strId_, count, flags);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(strId_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igBeginColumns", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igBeginColumns_(void *param0, int param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igEndColumns()</unmanaged>
        /// <unmanaged-short>igEndColumns</unmanaged-short>
        public static unsafe void EndColumns()
        {
            igEndColumns_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igEndColumns", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igEndColumns_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "columnIndex">No documentation.</param>
        /// <unmanaged>void igPushColumnClipRect([In] int column_index)</unmanaged>
        /// <unmanaged-short>igPushColumnClipRect</unmanaged-short>
        public static unsafe void PushColumnClipRect(System.Int32 columnIndex)
        {
            igPushColumnClipRect_(columnIndex);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPushColumnClipRect", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPushColumnClipRect_(int param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igPushColumnsBackground()</unmanaged>
        /// <unmanaged-short>igPushColumnsBackground</unmanaged-short>
        public static unsafe void PushColumnsBackground()
        {
            igPushColumnsBackground_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPushColumnsBackground", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPushColumnsBackground_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igPopColumnsBackground()</unmanaged>
        /// <unmanaged-short>igPopColumnsBackground</unmanaged-short>
        public static unsafe void PopColumnsBackground()
        {
            igPopColumnsBackground_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPopColumnsBackground", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPopColumnsBackground_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "strId">No documentation.</param>
        /// <param name = "count">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>unsigned int igGetColumnsID([In] const char* str_id,[In] int count)</unmanaged>
        /// <unmanaged-short>igGetColumnsID</unmanaged-short>
        public static unsafe System.UInt32 GetColumnsID(System.String strId, System.Int32 count)
        {
            System.IntPtr strId_;
            System.UInt32 __result__;
            strId_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(strId);
            __result__ = igGetColumnsID_((void *)strId_, count);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(strId_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetColumnsID", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt32 igGetColumnsID_(void *param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "window">No documentation.</param>
        /// <param name = "id">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiColumns* igFindOrCreateColumns([In] ImGuiWindow* window,[In] unsigned int id)</unmanaged>
        /// <unmanaged-short>igFindOrCreateColumns</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiColumns FindOrCreateColumns(ref DearImguiSharp.ImGuiWindow window, System.UInt32 id)
        {
            DearImguiSharp.ImGuiWindow.__Native window_ = default (DearImguiSharp.ImGuiWindow.__Native);
            DearImguiSharp.ImGuiColumns __result__;
            window.__MarshalTo(ref window_);
            igFindOrCreateColumns_(&__result__, &window_, id);
            window.__MarshalFree(ref window_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igFindOrCreateColumns", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *igFindOrCreateColumns_(void *param0, void *param1, System.UInt32 param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "columns">No documentation.</param>
        /// <param name = "offsetNorm">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float igGetColumnOffsetFromNorm([In] const ImGuiColumns* columns,[In] float offset_norm)</unmanaged>
        /// <unmanaged-short>igGetColumnOffsetFromNorm</unmanaged-short>
        public static unsafe System.Single GetColumnOffsetFromNorm(ref DearImguiSharp.ImGuiColumns columns, System.Single offsetNorm)
        {
            System.Single __result__;
            fixed (void *columns_ = &columns)
                __result__ = igGetColumnOffsetFromNorm_(columns_, offsetNorm);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetColumnOffsetFromNorm", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float igGetColumnOffsetFromNorm_(void *param0, float param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "columns">No documentation.</param>
        /// <param name = "offset">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float igGetColumnNormFromOffset([In] const ImGuiColumns* columns,[In] float offset)</unmanaged>
        /// <unmanaged-short>igGetColumnNormFromOffset</unmanaged-short>
        public static unsafe System.Single GetColumnNormFromOffset(ref DearImguiSharp.ImGuiColumns columns, System.Single offset)
        {
            System.Single __result__;
            fixed (void *columns_ = &columns)
                __result__ = igGetColumnNormFromOffset_(columns_, offset);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetColumnNormFromOffset", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float igGetColumnNormFromOffset_(void *param0, float param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "tabBar">No documentation.</param>
        /// <param name = "bb">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igBeginTabBarEx([In] ImGuiTabBar* tab_bar,[In] const ImRect bb,[In] int flags)</unmanaged>
        /// <unmanaged-short>igBeginTabBarEx</unmanaged-short>
        public static unsafe System.Boolean BeginTabBarEx(ref DearImguiSharp.ImGuiTabBar tabBar, DearImguiSharp.ImRect bb, System.Int32 flags)
        {
            DearImguiSharp.ImGuiTabBar.__Native tabBar_ = default (DearImguiSharp.ImGuiTabBar.__Native);
            System.Boolean __result__;
            System.Byte __result__native;
            tabBar.__MarshalTo(ref tabBar_);
            __result__native = igBeginTabBarEx_(&tabBar_, bb, flags);
            __result__ = __result__native != 0;
            tabBar.__MarshalFree(ref tabBar_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igBeginTabBarEx", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igBeginTabBarEx_(void *param0, DearImguiSharp.ImRect param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "tabBar">No documentation.</param>
        /// <param name = "tabId">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImGuiTabItem* igTabBarFindTabByID([In] ImGuiTabBar* tab_bar,[In] unsigned int tab_id)</unmanaged>
        /// <unmanaged-short>igTabBarFindTabByID</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiTabItem TabBarFindTabByID(ref DearImguiSharp.ImGuiTabBar tabBar, System.UInt32 tabId)
        {
            DearImguiSharp.ImGuiTabBar.__Native tabBar_ = default (DearImguiSharp.ImGuiTabBar.__Native);
            DearImguiSharp.ImGuiTabItem __result__;
            tabBar.__MarshalTo(ref tabBar_);
            igTabBarFindTabByID_(&__result__, &tabBar_, tabId);
            tabBar.__MarshalFree(ref tabBar_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTabBarFindTabByID", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *igTabBarFindTabByID_(void *param0, void *param1, System.UInt32 param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "tabBar">No documentation.</param>
        /// <param name = "tabId">No documentation.</param>
        /// <unmanaged>void igTabBarRemoveTab([In] ImGuiTabBar* tab_bar,[In] unsigned int tab_id)</unmanaged>
        /// <unmanaged-short>igTabBarRemoveTab</unmanaged-short>
        public static unsafe void TabBarRemoveTab(ref DearImguiSharp.ImGuiTabBar tabBar, System.UInt32 tabId)
        {
            DearImguiSharp.ImGuiTabBar.__Native tabBar_ = default (DearImguiSharp.ImGuiTabBar.__Native);
            tabBar.__MarshalTo(ref tabBar_);
            igTabBarRemoveTab_(&tabBar_, tabId);
            tabBar.__MarshalFree(ref tabBar_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTabBarRemoveTab", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igTabBarRemoveTab_(void *param0, System.UInt32 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "tabBar">No documentation.</param>
        /// <param name = "tab">No documentation.</param>
        /// <unmanaged>void igTabBarCloseTab([In] ImGuiTabBar* tab_bar,[In] ImGuiTabItem* tab)</unmanaged>
        /// <unmanaged-short>igTabBarCloseTab</unmanaged-short>
        public static unsafe void TabBarCloseTab(ref DearImguiSharp.ImGuiTabBar tabBar, ref DearImguiSharp.ImGuiTabItem tab)
        {
            DearImguiSharp.ImGuiTabBar.__Native tabBar_ = default (DearImguiSharp.ImGuiTabBar.__Native);
            tabBar.__MarshalTo(ref tabBar_);
            fixed (void *tab_ = &tab)
                igTabBarCloseTab_(&tabBar_, tab_);
            tabBar.__MarshalFree(ref tabBar_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTabBarCloseTab", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igTabBarCloseTab_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "tabBar">No documentation.</param>
        /// <param name = "tab">No documentation.</param>
        /// <param name = "dir">No documentation.</param>
        /// <unmanaged>void igTabBarQueueChangeTabOrder([In] ImGuiTabBar* tab_bar,[In] const ImGuiTabItem* tab,[In] int dir)</unmanaged>
        /// <unmanaged-short>igTabBarQueueChangeTabOrder</unmanaged-short>
        public static unsafe void TabBarQueueChangeTabOrder(ref DearImguiSharp.ImGuiTabBar tabBar, ref DearImguiSharp.ImGuiTabItem tab, System.Int32 dir)
        {
            DearImguiSharp.ImGuiTabBar.__Native tabBar_ = default (DearImguiSharp.ImGuiTabBar.__Native);
            tabBar.__MarshalTo(ref tabBar_);
            fixed (void *tab_ = &tab)
                igTabBarQueueChangeTabOrder_(&tabBar_, tab_, dir);
            tabBar.__MarshalFree(ref tabBar_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTabBarQueueChangeTabOrder", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igTabBarQueueChangeTabOrder_(void *param0, void *param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "tabBar">No documentation.</param>
        /// <param name = "label">No documentation.</param>
        /// <param name = "openRef">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igTabItemEx([In] ImGuiTabBar* tab_bar,[In] const char* label,[In] bool* p_open,[In] int flags)</unmanaged>
        /// <unmanaged-short>igTabItemEx</unmanaged-short>
        public static unsafe System.Boolean TabItemEx(ref DearImguiSharp.ImGuiTabBar tabBar, System.String label, System.Boolean openRef, System.Int32 flags)
        {
            DearImguiSharp.ImGuiTabBar.__Native tabBar_ = default (DearImguiSharp.ImGuiTabBar.__Native);
            System.IntPtr label_;
            System.Byte openRef_;
            System.Boolean __result__;
            System.Byte __result__native;
            tabBar.__MarshalTo(ref tabBar_);
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            openRef_ = (System.Byte)(openRef ? 1 : 0);
            __result__native = igTabItemEx_(&tabBar_, (void *)label_, &openRef_, flags);
            __result__ = __result__native != 0;
            tabBar.__MarshalFree(ref tabBar_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTabItemEx", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igTabItemEx_(void *param0, void *param1, void *param2, int param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outRef">No documentation.</param>
        /// <param name = "label">No documentation.</param>
        /// <param name = "hasCloseButton">No documentation.</param>
        /// <unmanaged>void igTabItemCalcSize([In] ImVec2* pOut,[In] const char* label,[In] bool has_close_button)</unmanaged>
        /// <unmanaged-short>igTabItemCalcSize</unmanaged-short>
        public static unsafe void TabItemCalcSize(DearImguiSharp.ImVec2 outRef, System.String label, System.Boolean hasCloseButton)
        {
            System.IntPtr label_;
            System.Byte hasCloseButton_;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            hasCloseButton_ = (System.Byte)(hasCloseButton ? 1 : 0);
            igTabItemCalcSize_(&outRef, (void *)label_, hasCloseButton_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTabItemCalcSize", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igTabItemCalcSize_(void *param0, void *param1, System.Byte param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "drawList">No documentation.</param>
        /// <param name = "bb">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <unmanaged>void igTabItemBackground([In] ImDrawList* draw_list,[In] const ImRect bb,[In] int flags,[In] unsigned int col)</unmanaged>
        /// <unmanaged-short>igTabItemBackground</unmanaged-short>
        public static unsafe void TabItemBackground(ref DearImguiSharp.ImDrawList drawList, DearImguiSharp.ImRect bb, System.Int32 flags, System.UInt32 col)
        {
            DearImguiSharp.ImDrawList.__Native drawList_ = default (DearImguiSharp.ImDrawList.__Native);
            drawList.__MarshalTo(ref drawList_);
            igTabItemBackground_(&drawList_, bb, flags, col);
            drawList.__MarshalFree(ref drawList_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTabItemBackground", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igTabItemBackground_(void *param0, DearImguiSharp.ImRect param1, int param2, System.UInt32 param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "drawList">No documentation.</param>
        /// <param name = "bb">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <param name = "framePadding">No documentation.</param>
        /// <param name = "label">No documentation.</param>
        /// <param name = "tabId">No documentation.</param>
        /// <param name = "closeButtonId">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igTabItemLabelAndCloseButton([In] ImDrawList* draw_list,[In] const ImRect bb,[In] int flags,[In] ImVec2 frame_padding,[In] const char* label,[In] unsigned int tab_id,[In] unsigned int close_button_id)</unmanaged>
        /// <unmanaged-short>igTabItemLabelAndCloseButton</unmanaged-short>
        public static unsafe System.Boolean TabItemLabelAndCloseButton(ref DearImguiSharp.ImDrawList drawList, DearImguiSharp.ImRect bb, System.Int32 flags, DearImguiSharp.ImVec2 framePadding, System.String label, System.UInt32 tabId, System.UInt32 closeButtonId)
        {
            DearImguiSharp.ImDrawList.__Native drawList_ = default (DearImguiSharp.ImDrawList.__Native);
            System.IntPtr label_;
            System.Boolean __result__;
            System.Byte __result__native;
            drawList.__MarshalTo(ref drawList_);
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            __result__native = igTabItemLabelAndCloseButton_(&drawList_, bb, flags, framePadding, (void *)label_, tabId, closeButtonId);
            __result__ = __result__native != 0;
            drawList.__MarshalFree(ref drawList_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTabItemLabelAndCloseButton", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igTabItemLabelAndCloseButton_(void *param0, DearImguiSharp.ImRect param1, int param2, DearImguiSharp.ImVec2 param3, void *param4, System.UInt32 param5, System.UInt32 param6);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "pos">No documentation.</param>
        /// <param name = "text">No documentation.</param>
        /// <param name = "textEnd">No documentation.</param>
        /// <param name = "hideTextAfterHash">No documentation.</param>
        /// <unmanaged>void igRenderText([In] ImVec2 pos,[In] const char* text,[In] const char* text_end,[In] bool hide_text_after_hash)</unmanaged>
        /// <unmanaged-short>igRenderText</unmanaged-short>
        public static unsafe void RenderText(DearImguiSharp.ImVec2 pos, System.String text, System.String textEnd, System.Boolean hideTextAfterHash)
        {
            System.IntPtr text_;
            System.IntPtr textEnd_;
            System.Byte hideTextAfterHash_;
            text_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(text);
            textEnd_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(textEnd);
            hideTextAfterHash_ = (System.Byte)(hideTextAfterHash ? 1 : 0);
            igRenderText_(pos, (void *)text_, (void *)textEnd_, hideTextAfterHash_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(text_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(textEnd_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igRenderText", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igRenderText_(DearImguiSharp.ImVec2 param0, void *param1, void *param2, System.Byte param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "pos">No documentation.</param>
        /// <param name = "text">No documentation.</param>
        /// <param name = "textEnd">No documentation.</param>
        /// <param name = "wrapWidth">No documentation.</param>
        /// <unmanaged>void igRenderTextWrapped([In] ImVec2 pos,[In] const char* text,[In] const char* text_end,[In] float wrap_width)</unmanaged>
        /// <unmanaged-short>igRenderTextWrapped</unmanaged-short>
        public static unsafe void RenderTextWrapped(DearImguiSharp.ImVec2 pos, System.String text, System.String textEnd, System.Single wrapWidth)
        {
            System.IntPtr text_;
            System.IntPtr textEnd_;
            text_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(text);
            textEnd_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(textEnd);
            igRenderTextWrapped_(pos, (void *)text_, (void *)textEnd_, wrapWidth);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(text_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(textEnd_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igRenderTextWrapped", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igRenderTextWrapped_(DearImguiSharp.ImVec2 param0, void *param1, void *param2, float param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "posMin">No documentation.</param>
        /// <param name = "posMax">No documentation.</param>
        /// <param name = "text">No documentation.</param>
        /// <param name = "textEnd">No documentation.</param>
        /// <param name = "textSizeIfKnown">No documentation.</param>
        /// <param name = "align">No documentation.</param>
        /// <param name = "clipRect">No documentation.</param>
        /// <unmanaged>void igRenderTextClipped([In] const ImVec2 pos_min,[In] const ImVec2 pos_max,[In] const char* text,[In] const char* text_end,[In] const ImVec2* text_size_if_known,[In] const ImVec2 align,[In] const ImRect* clip_rect)</unmanaged>
        /// <unmanaged-short>igRenderTextClipped</unmanaged-short>
        public static unsafe void RenderTextClipped(DearImguiSharp.ImVec2 posMin, DearImguiSharp.ImVec2 posMax, System.String text, System.String textEnd, DearImguiSharp.ImVec2 textSizeIfKnown, DearImguiSharp.ImVec2 align, DearImguiSharp.ImRect clipRect)
        {
            System.IntPtr text_;
            System.IntPtr textEnd_;
            text_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(text);
            textEnd_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(textEnd);
            igRenderTextClipped_(posMin, posMax, (void *)text_, (void *)textEnd_, &textSizeIfKnown, align, &clipRect);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(text_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(textEnd_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igRenderTextClipped", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igRenderTextClipped_(DearImguiSharp.ImVec2 param0, DearImguiSharp.ImVec2 param1, void *param2, void *param3, void *param4, DearImguiSharp.ImVec2 param5, void *param6);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "drawList">No documentation.</param>
        /// <param name = "posMin">No documentation.</param>
        /// <param name = "posMax">No documentation.</param>
        /// <param name = "text">No documentation.</param>
        /// <param name = "textEnd">No documentation.</param>
        /// <param name = "textSizeIfKnown">No documentation.</param>
        /// <param name = "align">No documentation.</param>
        /// <param name = "clipRect">No documentation.</param>
        /// <unmanaged>void igRenderTextClippedEx([In] ImDrawList* draw_list,[In] const ImVec2 pos_min,[In] const ImVec2 pos_max,[In] const char* text,[In] const char* text_end,[In] const ImVec2* text_size_if_known,[In] const ImVec2 align,[In] const ImRect* clip_rect)</unmanaged>
        /// <unmanaged-short>igRenderTextClippedEx</unmanaged-short>
        public static unsafe void RenderTextClippedEx(ref DearImguiSharp.ImDrawList drawList, DearImguiSharp.ImVec2 posMin, DearImguiSharp.ImVec2 posMax, System.String text, System.String textEnd, DearImguiSharp.ImVec2 textSizeIfKnown, DearImguiSharp.ImVec2 align, DearImguiSharp.ImRect clipRect)
        {
            DearImguiSharp.ImDrawList.__Native drawList_ = default (DearImguiSharp.ImDrawList.__Native);
            System.IntPtr text_;
            System.IntPtr textEnd_;
            drawList.__MarshalTo(ref drawList_);
            text_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(text);
            textEnd_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(textEnd);
            igRenderTextClippedEx_(&drawList_, posMin, posMax, (void *)text_, (void *)textEnd_, &textSizeIfKnown, align, &clipRect);
            drawList.__MarshalFree(ref drawList_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(text_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(textEnd_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igRenderTextClippedEx", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igRenderTextClippedEx_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2, void *param3, void *param4, void *param5, DearImguiSharp.ImVec2 param6, void *param7);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "drawList">No documentation.</param>
        /// <param name = "posMin">No documentation.</param>
        /// <param name = "posMax">No documentation.</param>
        /// <param name = "clipMaxX">No documentation.</param>
        /// <param name = "ellipsisMaxX">No documentation.</param>
        /// <param name = "text">No documentation.</param>
        /// <param name = "textEnd">No documentation.</param>
        /// <param name = "textSizeIfKnown">No documentation.</param>
        /// <unmanaged>void igRenderTextEllipsis([In] ImDrawList* draw_list,[In] const ImVec2 pos_min,[In] const ImVec2 pos_max,[In] float clip_max_x,[In] float ellipsis_max_x,[In] const char* text,[In] const char* text_end,[In] const ImVec2* text_size_if_known)</unmanaged>
        /// <unmanaged-short>igRenderTextEllipsis</unmanaged-short>
        public static unsafe void RenderTextEllipsis(ref DearImguiSharp.ImDrawList drawList, DearImguiSharp.ImVec2 posMin, DearImguiSharp.ImVec2 posMax, System.Single clipMaxX, System.Single ellipsisMaxX, System.String text, System.String textEnd, DearImguiSharp.ImVec2 textSizeIfKnown)
        {
            DearImguiSharp.ImDrawList.__Native drawList_ = default (DearImguiSharp.ImDrawList.__Native);
            System.IntPtr text_;
            System.IntPtr textEnd_;
            drawList.__MarshalTo(ref drawList_);
            text_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(text);
            textEnd_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(textEnd);
            igRenderTextEllipsis_(&drawList_, posMin, posMax, clipMaxX, ellipsisMaxX, (void *)text_, (void *)textEnd_, &textSizeIfKnown);
            drawList.__MarshalFree(ref drawList_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(text_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(textEnd_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igRenderTextEllipsis", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igRenderTextEllipsis_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2, float param3, float param4, void *param5, void *param6, void *param7);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "pMin">No documentation.</param>
        /// <param name = "pMax">No documentation.</param>
        /// <param name = "fillCol">No documentation.</param>
        /// <param name = "border">No documentation.</param>
        /// <param name = "rounding">No documentation.</param>
        /// <unmanaged>void igRenderFrame([In] ImVec2 p_min,[In] ImVec2 p_max,[In] unsigned int fill_col,[In] bool border,[In] float rounding)</unmanaged>
        /// <unmanaged-short>igRenderFrame</unmanaged-short>
        public static unsafe void RenderFrame(DearImguiSharp.ImVec2 pMin, DearImguiSharp.ImVec2 pMax, System.UInt32 fillCol, System.Boolean border, System.Single rounding)
        {
            System.Byte border_;
            border_ = (System.Byte)(border ? 1 : 0);
            igRenderFrame_(pMin, pMax, fillCol, border_, rounding);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igRenderFrame", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igRenderFrame_(DearImguiSharp.ImVec2 param0, DearImguiSharp.ImVec2 param1, System.UInt32 param2, System.Byte param3, float param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "pMin">No documentation.</param>
        /// <param name = "pMax">No documentation.</param>
        /// <param name = "rounding">No documentation.</param>
        /// <unmanaged>void igRenderFrameBorder([In] ImVec2 p_min,[In] ImVec2 p_max,[In] float rounding)</unmanaged>
        /// <unmanaged-short>igRenderFrameBorder</unmanaged-short>
        public static unsafe void RenderFrameBorder(DearImguiSharp.ImVec2 pMin, DearImguiSharp.ImVec2 pMax, System.Single rounding)
        {
            igRenderFrameBorder_(pMin, pMax, rounding);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igRenderFrameBorder", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igRenderFrameBorder_(DearImguiSharp.ImVec2 param0, DearImguiSharp.ImVec2 param1, float param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "pMin">No documentation.</param>
        /// <param name = "pMax">No documentation.</param>
        /// <param name = "fillCol">No documentation.</param>
        /// <param name = "gridStep">No documentation.</param>
        /// <param name = "gridOff">No documentation.</param>
        /// <param name = "rounding">No documentation.</param>
        /// <param name = "roundingCornersFlags">No documentation.</param>
        /// <unmanaged>void igRenderColorRectWithAlphaCheckerboard([In] ImVec2 p_min,[In] ImVec2 p_max,[In] unsigned int fill_col,[In] float grid_step,[In] ImVec2 grid_off,[In] float rounding,[In] int rounding_corners_flags)</unmanaged>
        /// <unmanaged-short>igRenderColorRectWithAlphaCheckerboard</unmanaged-short>
        public static unsafe void RenderColorRectWithAlphaCheckerboard(DearImguiSharp.ImVec2 pMin, DearImguiSharp.ImVec2 pMax, System.UInt32 fillCol, System.Single gridStep, DearImguiSharp.ImVec2 gridOff, System.Single rounding, System.Int32 roundingCornersFlags)
        {
            igRenderColorRectWithAlphaCheckerboard_(pMin, pMax, fillCol, gridStep, gridOff, rounding, roundingCornersFlags);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igRenderColorRectWithAlphaCheckerboard", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igRenderColorRectWithAlphaCheckerboard_(DearImguiSharp.ImVec2 param0, DearImguiSharp.ImVec2 param1, System.UInt32 param2, float param3, DearImguiSharp.ImVec2 param4, float param5, int param6);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "pos">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <param name = "sz">No documentation.</param>
        /// <unmanaged>void igRenderCheckMark([In] ImVec2 pos,[In] unsigned int col,[In] float sz)</unmanaged>
        /// <unmanaged-short>igRenderCheckMark</unmanaged-short>
        public static unsafe void RenderCheckMark(DearImguiSharp.ImVec2 pos, System.UInt32 col, System.Single sz)
        {
            igRenderCheckMark_(pos, col, sz);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igRenderCheckMark", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igRenderCheckMark_(DearImguiSharp.ImVec2 param0, System.UInt32 param1, float param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "bb">No documentation.</param>
        /// <param name = "id">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <unmanaged>void igRenderNavHighlight([In] const ImRect bb,[In] unsigned int id,[In] int flags)</unmanaged>
        /// <unmanaged-short>igRenderNavHighlight</unmanaged-short>
        public static unsafe void RenderNavHighlight(DearImguiSharp.ImRect bb, System.UInt32 id, System.Int32 flags)
        {
            igRenderNavHighlight_(bb, id, flags);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igRenderNavHighlight", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igRenderNavHighlight_(DearImguiSharp.ImRect param0, System.UInt32 param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "text">No documentation.</param>
        /// <param name = "textEnd">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>const char* igFindRenderedTextEnd([In] const char* text,[In] const char* text_end)</unmanaged>
        /// <unmanaged-short>igFindRenderedTextEnd</unmanaged-short>
        public static unsafe System.String FindRenderedTextEnd(System.String text, System.String textEnd)
        {
            System.IntPtr text_;
            System.IntPtr textEnd_;
            System.String __result__;
            System.IntPtr __result__native;
            text_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(text);
            textEnd_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(textEnd);
            __result__native = igFindRenderedTextEnd_((void *)text_, (void *)textEnd_);
            __result__ = System.Runtime.InteropServices.Marshal.PtrToStringAnsi(__result__native);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(text_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(textEnd_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igFindRenderedTextEnd", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.IntPtr igFindRenderedTextEnd_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "refPos">No documentation.</param>
        /// <param name = "text">No documentation.</param>
        /// <param name = "textEnd">No documentation.</param>
        /// <unmanaged>void igLogRenderedText([In] const ImVec2* ref_pos,[In] const char* text,[In] const char* text_end)</unmanaged>
        /// <unmanaged-short>igLogRenderedText</unmanaged-short>
        public static unsafe void LogRenderedText(DearImguiSharp.ImVec2 refPos, System.String text, System.String textEnd)
        {
            System.IntPtr text_;
            System.IntPtr textEnd_;
            text_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(text);
            textEnd_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(textEnd);
            igLogRenderedText_(&refPos, (void *)text_, (void *)textEnd_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(text_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(textEnd_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igLogRenderedText", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igLogRenderedText_(void *param0, void *param1, void *param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "drawList">No documentation.</param>
        /// <param name = "pos">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <param name = "dir">No documentation.</param>
        /// <param name = "scale">No documentation.</param>
        /// <unmanaged>void igRenderArrow([In] ImDrawList* draw_list,[In] ImVec2 pos,[In] unsigned int col,[In] int dir,[In] float scale)</unmanaged>
        /// <unmanaged-short>igRenderArrow</unmanaged-short>
        public static unsafe void RenderArrow(ref DearImguiSharp.ImDrawList drawList, DearImguiSharp.ImVec2 pos, System.UInt32 col, System.Int32 dir, System.Single scale)
        {
            DearImguiSharp.ImDrawList.__Native drawList_ = default (DearImguiSharp.ImDrawList.__Native);
            drawList.__MarshalTo(ref drawList_);
            igRenderArrow_(&drawList_, pos, col, dir, scale);
            drawList.__MarshalFree(ref drawList_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igRenderArrow", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igRenderArrow_(void *param0, DearImguiSharp.ImVec2 param1, System.UInt32 param2, int param3, float param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "drawList">No documentation.</param>
        /// <param name = "pos">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <unmanaged>void igRenderBullet([In] ImDrawList* draw_list,[In] ImVec2 pos,[In] unsigned int col)</unmanaged>
        /// <unmanaged-short>igRenderBullet</unmanaged-short>
        public static unsafe void RenderBullet(ref DearImguiSharp.ImDrawList drawList, DearImguiSharp.ImVec2 pos, System.UInt32 col)
        {
            DearImguiSharp.ImDrawList.__Native drawList_ = default (DearImguiSharp.ImDrawList.__Native);
            drawList.__MarshalTo(ref drawList_);
            igRenderBullet_(&drawList_, pos, col);
            drawList.__MarshalFree(ref drawList_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igRenderBullet", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igRenderBullet_(void *param0, DearImguiSharp.ImVec2 param1, System.UInt32 param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "drawList">No documentation.</param>
        /// <param name = "pos">No documentation.</param>
        /// <param name = "scale">No documentation.</param>
        /// <param name = "mouseCursor">No documentation.</param>
        /// <param name = "colFill">No documentation.</param>
        /// <param name = "colBorder">No documentation.</param>
        /// <param name = "colShadow">No documentation.</param>
        /// <unmanaged>void igRenderMouseCursor([In] ImDrawList* draw_list,[In] ImVec2 pos,[In] float scale,[In] int mouse_cursor,[In] unsigned int col_fill,[In] unsigned int col_border,[In] unsigned int col_shadow)</unmanaged>
        /// <unmanaged-short>igRenderMouseCursor</unmanaged-short>
        public static unsafe void RenderMouseCursor(ref DearImguiSharp.ImDrawList drawList, DearImguiSharp.ImVec2 pos, System.Single scale, System.Int32 mouseCursor, System.UInt32 colFill, System.UInt32 colBorder, System.UInt32 colShadow)
        {
            DearImguiSharp.ImDrawList.__Native drawList_ = default (DearImguiSharp.ImDrawList.__Native);
            drawList.__MarshalTo(ref drawList_);
            igRenderMouseCursor_(&drawList_, pos, scale, mouseCursor, colFill, colBorder, colShadow);
            drawList.__MarshalFree(ref drawList_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igRenderMouseCursor", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igRenderMouseCursor_(void *param0, DearImguiSharp.ImVec2 param1, float param2, int param3, System.UInt32 param4, System.UInt32 param5, System.UInt32 param6);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "drawList">No documentation.</param>
        /// <param name = "pos">No documentation.</param>
        /// <param name = "halfSz">No documentation.</param>
        /// <param name = "direction">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <unmanaged>void igRenderArrowPointingAt([In] ImDrawList* draw_list,[In] ImVec2 pos,[In] ImVec2 half_sz,[In] int direction,[In] unsigned int col)</unmanaged>
        /// <unmanaged-short>igRenderArrowPointingAt</unmanaged-short>
        public static unsafe void RenderArrowPointingAt(ref DearImguiSharp.ImDrawList drawList, DearImguiSharp.ImVec2 pos, DearImguiSharp.ImVec2 halfSz, System.Int32 direction, System.UInt32 col)
        {
            DearImguiSharp.ImDrawList.__Native drawList_ = default (DearImguiSharp.ImDrawList.__Native);
            drawList.__MarshalTo(ref drawList_);
            igRenderArrowPointingAt_(&drawList_, pos, halfSz, direction, col);
            drawList.__MarshalFree(ref drawList_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igRenderArrowPointingAt", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igRenderArrowPointingAt_(void *param0, DearImguiSharp.ImVec2 param1, DearImguiSharp.ImVec2 param2, int param3, System.UInt32 param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "drawList">No documentation.</param>
        /// <param name = "rect">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <param name = "xStartNorm">No documentation.</param>
        /// <param name = "xEndNorm">No documentation.</param>
        /// <param name = "rounding">No documentation.</param>
        /// <unmanaged>void igRenderRectFilledRangeH([In] ImDrawList* draw_list,[In] const ImRect rect,[In] unsigned int col,[In] float x_start_norm,[In] float x_end_norm,[In] float rounding)</unmanaged>
        /// <unmanaged-short>igRenderRectFilledRangeH</unmanaged-short>
        public static unsafe void RenderRectFilledRangeH(ref DearImguiSharp.ImDrawList drawList, DearImguiSharp.ImRect rect, System.UInt32 col, System.Single xStartNorm, System.Single xEndNorm, System.Single rounding)
        {
            DearImguiSharp.ImDrawList.__Native drawList_ = default (DearImguiSharp.ImDrawList.__Native);
            drawList.__MarshalTo(ref drawList_);
            igRenderRectFilledRangeH_(&drawList_, rect, col, xStartNorm, xEndNorm, rounding);
            drawList.__MarshalFree(ref drawList_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igRenderRectFilledRangeH", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igRenderRectFilledRangeH_(void *param0, DearImguiSharp.ImRect param1, System.UInt32 param2, float param3, float param4, float param5);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "text">No documentation.</param>
        /// <param name = "textEnd">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <unmanaged>void igTextEx([In] const char* text,[In] const char* text_end,[In] int flags)</unmanaged>
        /// <unmanaged-short>igTextEx</unmanaged-short>
        public static unsafe void TextEx(System.String text, System.String textEnd, System.Int32 flags)
        {
            System.IntPtr text_;
            System.IntPtr textEnd_;
            text_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(text);
            textEnd_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(textEnd);
            igTextEx_((void *)text_, (void *)textEnd_, flags);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(text_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(textEnd_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTextEx", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igTextEx_(void *param0, void *param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "sizeArg">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igButtonEx([In] const char* label,[In] const ImVec2 size_arg,[In] int flags)</unmanaged>
        /// <unmanaged-short>igButtonEx</unmanaged-short>
        public static unsafe System.Boolean ButtonEx(System.String label, DearImguiSharp.ImVec2 sizeArg, System.Int32 flags)
        {
            System.IntPtr label_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            __result__native = igButtonEx_((void *)label_, sizeArg, flags);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igButtonEx", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igButtonEx_(void *param0, DearImguiSharp.ImVec2 param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "id">No documentation.</param>
        /// <param name = "pos">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igCloseButton([In] unsigned int id,[In] const ImVec2 pos)</unmanaged>
        /// <unmanaged-short>igCloseButton</unmanaged-short>
        public static unsafe System.Boolean CloseButton(System.UInt32 id, DearImguiSharp.ImVec2 pos)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igCloseButton_(id, pos);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igCloseButton", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igCloseButton_(System.UInt32 param0, DearImguiSharp.ImVec2 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "id">No documentation.</param>
        /// <param name = "pos">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igCollapseButton([In] unsigned int id,[In] const ImVec2 pos)</unmanaged>
        /// <unmanaged-short>igCollapseButton</unmanaged-short>
        public static unsafe System.Boolean CollapseButton(System.UInt32 id, DearImguiSharp.ImVec2 pos)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igCollapseButton_(id, pos);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igCollapseButton", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igCollapseButton_(System.UInt32 param0, DearImguiSharp.ImVec2 param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "strId">No documentation.</param>
        /// <param name = "dir">No documentation.</param>
        /// <param name = "sizeArg">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igArrowButtonEx([In] const char* str_id,[In] int dir,[In] ImVec2 size_arg,[In] int flags)</unmanaged>
        /// <unmanaged-short>igArrowButtonEx</unmanaged-short>
        public static unsafe System.Boolean ArrowButtonEx(System.String strId, System.Int32 dir, DearImguiSharp.ImVec2 sizeArg, System.Int32 flags)
        {
            System.IntPtr strId_;
            System.Boolean __result__;
            System.Byte __result__native;
            strId_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(strId);
            __result__native = igArrowButtonEx_((void *)strId_, dir, sizeArg, flags);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(strId_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igArrowButtonEx", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igArrowButtonEx_(void *param0, int param1, DearImguiSharp.ImVec2 param2, int param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "axis">No documentation.</param>
        /// <unmanaged>void igScrollbar([In] ImGuiAxis axis)</unmanaged>
        /// <unmanaged-short>igScrollbar</unmanaged-short>
        public static unsafe void Scrollbar(DearImguiSharp.ImGuiAxis axis)
        {
            igScrollbar_(unchecked ((System.Int32)axis));
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igScrollbar", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igScrollbar_(int param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "bb">No documentation.</param>
        /// <param name = "id">No documentation.</param>
        /// <param name = "axis">No documentation.</param>
        /// <param name = "scrollVRef">No documentation.</param>
        /// <param name = "availV">No documentation.</param>
        /// <param name = "contentsV">No documentation.</param>
        /// <param name = "roundingCorners">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igScrollbarEx([In] const ImRect bb,[In] unsigned int id,[In] ImGuiAxis axis,[In] float* p_scroll_v,[In] float avail_v,[In] float contents_v,[In] int rounding_corners)</unmanaged>
        /// <unmanaged-short>igScrollbarEx</unmanaged-short>
        public static unsafe System.Boolean ScrollbarEx(DearImguiSharp.ImRect bb, System.UInt32 id, DearImguiSharp.ImGuiAxis axis, System.Single scrollVRef, System.Single availV, System.Single contentsV, System.Int32 roundingCorners)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igScrollbarEx_(bb, id, unchecked ((System.Int32)axis), &scrollVRef, availV, contentsV, roundingCorners);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igScrollbarEx", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igScrollbarEx_(DearImguiSharp.ImRect param0, System.UInt32 param1, int param2, void *param3, float param4, float param5, int param6);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "window">No documentation.</param>
        /// <param name = "axis">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>unsigned int igGetWindowScrollbarID([In] ImGuiWindow* window,[In] ImGuiAxis axis)</unmanaged>
        /// <unmanaged-short>igGetWindowScrollbarID</unmanaged-short>
        public static unsafe System.UInt32 GetWindowScrollbarID(ref DearImguiSharp.ImGuiWindow window, DearImguiSharp.ImGuiAxis axis)
        {
            DearImguiSharp.ImGuiWindow.__Native window_ = default (DearImguiSharp.ImGuiWindow.__Native);
            System.UInt32 __result__;
            window.__MarshalTo(ref window_);
            __result__ = igGetWindowScrollbarID_(&window_, unchecked ((System.Int32)axis));
            window.__MarshalFree(ref window_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetWindowScrollbarID", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt32 igGetWindowScrollbarID_(void *param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "window">No documentation.</param>
        /// <param name = "n">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>unsigned int igGetWindowResizeID([In] ImGuiWindow* window,[In] int n)</unmanaged>
        /// <unmanaged-short>igGetWindowResizeID</unmanaged-short>
        public static unsafe System.UInt32 GetWindowResizeID(ref DearImguiSharp.ImGuiWindow window, System.Int32 n)
        {
            DearImguiSharp.ImGuiWindow.__Native window_ = default (DearImguiSharp.ImGuiWindow.__Native);
            System.UInt32 __result__;
            window.__MarshalTo(ref window_);
            __result__ = igGetWindowResizeID_(&window_, n);
            window.__MarshalFree(ref window_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGetWindowResizeID", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.UInt32 igGetWindowResizeID_(void *param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "flags">No documentation.</param>
        /// <unmanaged>void igSeparatorEx([In] int flags)</unmanaged>
        /// <unmanaged-short>igSeparatorEx</unmanaged-short>
        public static unsafe void SeparatorEx(System.Int32 flags)
        {
            igSeparatorEx_(flags);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSeparatorEx", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igSeparatorEx_(int param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "bb">No documentation.</param>
        /// <param name = "id">No documentation.</param>
        /// <param name = "outHovered">No documentation.</param>
        /// <param name = "outHeld">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igButtonBehavior([In] const ImRect bb,[In] unsigned int id,[In] bool* out_hovered,[In] bool* out_held,[In] int flags)</unmanaged>
        /// <unmanaged-short>igButtonBehavior</unmanaged-short>
        public static unsafe System.Boolean ButtonBehavior(DearImguiSharp.ImRect bb, System.UInt32 id, System.Boolean outHovered, System.Boolean outHeld, System.Int32 flags)
        {
            System.Byte outHovered_;
            System.Byte outHeld_;
            System.Boolean __result__;
            System.Byte __result__native;
            outHovered_ = (System.Byte)(outHovered ? 1 : 0);
            outHeld_ = (System.Byte)(outHeld ? 1 : 0);
            __result__native = igButtonBehavior_(bb, id, &outHovered_, &outHeld_, flags);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igButtonBehavior", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igButtonBehavior_(DearImguiSharp.ImRect param0, System.UInt32 param1, void *param2, void *param3, int param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "id">No documentation.</param>
        /// <param name = "dataType">No documentation.</param>
        /// <param name = "vRef">No documentation.</param>
        /// <param name = "vSpeed">No documentation.</param>
        /// <param name = "minRef">No documentation.</param>
        /// <param name = "maxRef">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <param name = "power">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igDragBehavior([In] unsigned int id,[In] int data_type,[In] void* p_v,[In] float v_speed,[In] const void* p_min,[In] const void* p_max,[In] const char* format,[In] float power,[In] int flags)</unmanaged>
        /// <unmanaged-short>igDragBehavior</unmanaged-short>
        public static unsafe System.Boolean DragBehavior(System.UInt32 id, System.Int32 dataType, System.IntPtr vRef, System.Single vSpeed, System.IntPtr minRef, System.IntPtr maxRef, System.String format, System.Single power, System.Int32 flags)
        {
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igDragBehavior_(id, dataType, (void *)vRef, vSpeed, (void *)minRef, (void *)maxRef, (void *)format_, power, flags);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igDragBehavior", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igDragBehavior_(System.UInt32 param0, int param1, void *param2, float param3, void *param4, void *param5, void *param6, float param7, int param8);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "bb">No documentation.</param>
        /// <param name = "id">No documentation.</param>
        /// <param name = "dataType">No documentation.</param>
        /// <param name = "vRef">No documentation.</param>
        /// <param name = "minRef">No documentation.</param>
        /// <param name = "maxRef">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <param name = "power">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <param name = "outGrabBb">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igSliderBehavior([In] const ImRect bb,[In] unsigned int id,[In] int data_type,[In] void* p_v,[In] const void* p_min,[In] const void* p_max,[In] const char* format,[In] float power,[In] int flags,[In] ImRect* out_grab_bb)</unmanaged>
        /// <unmanaged-short>igSliderBehavior</unmanaged-short>
        public static unsafe System.Boolean SliderBehavior(DearImguiSharp.ImRect bb, System.UInt32 id, System.Int32 dataType, System.IntPtr vRef, System.IntPtr minRef, System.IntPtr maxRef, System.String format, System.Single power, System.Int32 flags, DearImguiSharp.ImRect outGrabBb)
        {
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igSliderBehavior_(bb, id, dataType, (void *)vRef, (void *)minRef, (void *)maxRef, (void *)format_, power, flags, &outGrabBb);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSliderBehavior", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igSliderBehavior_(DearImguiSharp.ImRect param0, System.UInt32 param1, int param2, void *param3, void *param4, void *param5, void *param6, float param7, int param8, void *param9);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "bb">No documentation.</param>
        /// <param name = "id">No documentation.</param>
        /// <param name = "axis">No documentation.</param>
        /// <param name = "size1">No documentation.</param>
        /// <param name = "size2">No documentation.</param>
        /// <param name = "minSize1">No documentation.</param>
        /// <param name = "minSize2">No documentation.</param>
        /// <param name = "hoverExtend">No documentation.</param>
        /// <param name = "hoverVisibilityDelay">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igSplitterBehavior([In] const ImRect bb,[In] unsigned int id,[In] ImGuiAxis axis,[In] float* size1,[In] float* size2,[In] float min_size1,[In] float min_size2,[In] float hover_extend,[In] float hover_visibility_delay)</unmanaged>
        /// <unmanaged-short>igSplitterBehavior</unmanaged-short>
        public static unsafe System.Boolean SplitterBehavior(DearImguiSharp.ImRect bb, System.UInt32 id, DearImguiSharp.ImGuiAxis axis, System.Single size1, System.Single size2, System.Single minSize1, System.Single minSize2, System.Single hoverExtend, System.Single hoverVisibilityDelay)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igSplitterBehavior_(bb, id, unchecked ((System.Int32)axis), &size1, &size2, minSize1, minSize2, hoverExtend, hoverVisibilityDelay);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igSplitterBehavior", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igSplitterBehavior_(DearImguiSharp.ImRect param0, System.UInt32 param1, int param2, void *param3, void *param4, float param5, float param6, float param7, float param8);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "id">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <param name = "label">No documentation.</param>
        /// <param name = "labelEnd">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igTreeNodeBehavior([In] unsigned int id,[In] int flags,[In] const char* label,[In] const char* label_end)</unmanaged>
        /// <unmanaged-short>igTreeNodeBehavior</unmanaged-short>
        public static unsafe System.Boolean TreeNodeBehavior(System.UInt32 id, System.Int32 flags, System.String label, System.String labelEnd)
        {
            System.IntPtr label_;
            System.IntPtr labelEnd_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            labelEnd_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(labelEnd);
            __result__native = igTreeNodeBehavior_(id, flags, (void *)label_, (void *)labelEnd_);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(labelEnd_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTreeNodeBehavior", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igTreeNodeBehavior_(System.UInt32 param0, int param1, void *param2, void *param3);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "id">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igTreeNodeBehaviorIsOpen([In] unsigned int id,[In] int flags)</unmanaged>
        /// <unmanaged-short>igTreeNodeBehaviorIsOpen</unmanaged-short>
        public static unsafe System.Boolean TreeNodeBehaviorIsOpen(System.UInt32 id, System.Int32 flags)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igTreeNodeBehaviorIsOpen_(id, flags);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTreeNodeBehaviorIsOpen", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igTreeNodeBehaviorIsOpen_(System.UInt32 param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "id">No documentation.</param>
        /// <unmanaged>void igTreePushOverrideID([In] unsigned int id)</unmanaged>
        /// <unmanaged-short>igTreePushOverrideID</unmanaged-short>
        public static unsafe void TreePushOverrideID(System.UInt32 id)
        {
            igTreePushOverrideID_(id);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTreePushOverrideID", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igTreePushOverrideID_(System.UInt32 param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "dataType">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>const ImGuiDataTypeInfo* igDataTypeGetInfo([In] int data_type)</unmanaged>
        /// <unmanaged-short>igDataTypeGetInfo</unmanaged-short>
        public static unsafe DearImguiSharp.ImGuiDataTypeInfo DataTypeGetInfo(System.Int32 dataType)
        {
            DearImguiSharp.ImGuiDataTypeInfo __result__;
            DearImguiSharp.ImGuiDataTypeInfo.__Native __result__native = default (DearImguiSharp.ImGuiDataTypeInfo.__Native);
            __result__ = default (DearImguiSharp.ImGuiDataTypeInfo);
            igDataTypeGetInfo_(&__result__native, dataType);
            __result__.__MarshalFrom(ref __result__native);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igDataTypeGetInfo", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *igDataTypeGetInfo_(void *param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "buf">No documentation.</param>
        /// <param name = "bufSize">No documentation.</param>
        /// <param name = "dataType">No documentation.</param>
        /// <param name = "dataRef">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>int igDataTypeFormatString([In] char* buf,[In] int buf_size,[In] int data_type,[In] const void* p_data,[In] const char* format)</unmanaged>
        /// <unmanaged-short>igDataTypeFormatString</unmanaged-short>
        public static unsafe System.Int32 DataTypeFormatString(System.String buf, System.Int32 bufSize, System.Int32 dataType, System.IntPtr dataRef, System.String format)
        {
            System.IntPtr buf_;
            System.IntPtr format_;
            System.Int32 __result__;
            buf_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(buf);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__ = igDataTypeFormatString_((void *)buf_, bufSize, dataType, (void *)dataRef, (void *)format_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(buf_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igDataTypeFormatString", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern int igDataTypeFormatString_(void *param0, int param1, int param2, void *param3, void *param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "dataType">No documentation.</param>
        /// <param name = "op">No documentation.</param>
        /// <param name = "output">No documentation.</param>
        /// <param name = "arg1">No documentation.</param>
        /// <param name = "arg2">No documentation.</param>
        /// <unmanaged>void igDataTypeApplyOp([In] int data_type,[In] int op,[In] void* output,[In] void* arg_1,[In] const void* arg_2)</unmanaged>
        /// <unmanaged-short>igDataTypeApplyOp</unmanaged-short>
        public static unsafe void DataTypeApplyOp(System.Int32 dataType, System.Int32 op, System.IntPtr output, System.IntPtr arg1, System.IntPtr arg2)
        {
            igDataTypeApplyOp_(dataType, op, (void *)output, (void *)arg1, (void *)arg2);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igDataTypeApplyOp", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igDataTypeApplyOp_(int param0, int param1, void *param2, void *param3, void *param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "buf">No documentation.</param>
        /// <param name = "initialValueBuf">No documentation.</param>
        /// <param name = "dataType">No documentation.</param>
        /// <param name = "dataRef">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igDataTypeApplyOpFromText([In] const char* buf,[In] const char* initial_value_buf,[In] int data_type,[In] void* p_data,[In] const char* format)</unmanaged>
        /// <unmanaged-short>igDataTypeApplyOpFromText</unmanaged-short>
        public static unsafe System.Boolean DataTypeApplyOpFromText(System.String buf, System.String initialValueBuf, System.Int32 dataType, System.IntPtr dataRef, System.String format)
        {
            System.IntPtr buf_;
            System.IntPtr initialValueBuf_;
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            buf_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(buf);
            initialValueBuf_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(initialValueBuf);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igDataTypeApplyOpFromText_((void *)buf_, (void *)initialValueBuf_, dataType, (void *)dataRef, (void *)format_);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(buf_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(initialValueBuf_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igDataTypeApplyOpFromText", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igDataTypeApplyOpFromText_(void *param0, void *param1, int param2, void *param3, void *param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "label">No documentation.</param>
        /// <param name = "hint">No documentation.</param>
        /// <param name = "buf">No documentation.</param>
        /// <param name = "bufSize">No documentation.</param>
        /// <param name = "sizeArg">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <param name = "callback">No documentation.</param>
        /// <param name = "userData">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igInputTextEx([In] const char* label,[In] const char* hint,[In] char* buf,[In] int buf_size,[In] const ImVec2 size_arg,[In] int flags,[In] __function__stdcall* callback,[In] void* user_data)</unmanaged>
        /// <unmanaged-short>igInputTextEx</unmanaged-short>
        public static unsafe System.Boolean InputTextEx(System.String label, System.String hint, System.String buf, System.Int32 bufSize, DearImguiSharp.ImVec2 sizeArg, System.Int32 flags, SharpGen.Runtime.FunctionCallback callback, System.IntPtr userData)
        {
            System.IntPtr label_;
            System.IntPtr hint_;
            System.IntPtr buf_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            hint_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(hint);
            buf_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(buf);
            __result__native = igInputTextEx_((void *)label_, (void *)hint_, (void *)buf_, bufSize, sizeArg, flags, callback, (void *)userData);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(hint_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(buf_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igInputTextEx", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igInputTextEx_(void *param0, void *param1, void *param2, int param3, DearImguiSharp.ImVec2 param4, int param5, void *param6, void *param7);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "bb">No documentation.</param>
        /// <param name = "id">No documentation.</param>
        /// <param name = "label">No documentation.</param>
        /// <param name = "dataType">No documentation.</param>
        /// <param name = "dataRef">No documentation.</param>
        /// <param name = "format">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igTempInputTextScalar([In] const ImRect bb,[In] unsigned int id,[In] const char* label,[In] int data_type,[In] void* p_data,[In] const char* format)</unmanaged>
        /// <unmanaged-short>igTempInputTextScalar</unmanaged-short>
        public static unsafe System.Boolean TempInputTextScalar(DearImguiSharp.ImRect bb, System.UInt32 id, System.String label, System.Int32 dataType, System.IntPtr dataRef, System.String format)
        {
            System.IntPtr label_;
            System.IntPtr format_;
            System.Boolean __result__;
            System.Byte __result__native;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            format_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(format);
            __result__native = igTempInputTextScalar_(bb, id, (void *)label_, dataType, (void *)dataRef, (void *)format_);
            __result__ = __result__native != 0;
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(format_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTempInputTextScalar", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igTempInputTextScalar_(DearImguiSharp.ImRect param0, System.UInt32 param1, void *param2, int param3, void *param4, void *param5);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "id">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igTempInputTextIsActive([In] unsigned int id)</unmanaged>
        /// <unmanaged-short>igTempInputTextIsActive</unmanaged-short>
        public static unsafe System.Boolean TempInputTextIsActive(System.UInt32 id)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = igTempInputTextIsActive_(id);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igTempInputTextIsActive", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igTempInputTextIsActive_(System.UInt32 param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "text">No documentation.</param>
        /// <param name = "col">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <unmanaged>void igColorTooltip([In] const char* text,[In] const float* col,[In] int flags)</unmanaged>
        /// <unmanaged-short>igColorTooltip</unmanaged-short>
        public static unsafe void ColorTooltip(System.String text, System.Single col, System.Int32 flags)
        {
            System.IntPtr text_;
            text_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(text);
            igColorTooltip_((void *)text_, &col, flags);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(text_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igColorTooltip", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igColorTooltip_(void *param0, void *param1, int param2);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "col">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <unmanaged>void igColorEditOptionsPopup([In] const float* col,[In] int flags)</unmanaged>
        /// <unmanaged-short>igColorEditOptionsPopup</unmanaged-short>
        public static unsafe void ColorEditOptionsPopup(System.Single col, System.Int32 flags)
        {
            igColorEditOptionsPopup_(&col, flags);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igColorEditOptionsPopup", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igColorEditOptionsPopup_(void *param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "refCol">No documentation.</param>
        /// <param name = "flags">No documentation.</param>
        /// <unmanaged>void igColorPickerOptionsPopup([In] const float* ref_col,[In] int flags)</unmanaged>
        /// <unmanaged-short>igColorPickerOptionsPopup</unmanaged-short>
        public static unsafe void ColorPickerOptionsPopup(System.Single refCol, System.Int32 flags)
        {
            igColorPickerOptionsPopup_(&refCol, flags);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igColorPickerOptionsPopup", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igColorPickerOptionsPopup_(void *param0, int param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "plotType">No documentation.</param>
        /// <param name = "label">No documentation.</param>
        /// <param name = "valuesGetter">No documentation.</param>
        /// <param name = "data">No documentation.</param>
        /// <param name = "valuesCount">No documentation.</param>
        /// <param name = "valuesOffset">No documentation.</param>
        /// <param name = "overlayText">No documentation.</param>
        /// <param name = "scaleMin">No documentation.</param>
        /// <param name = "scaleMax">No documentation.</param>
        /// <param name = "frameSize">No documentation.</param>
        /// <unmanaged>void igPlotEx([In] ImGuiPlotType plot_type,[In] const char* label,[In] __function__stdcall* values_getter,[In] void* data,[In] int values_count,[In] int values_offset,[In] const char* overlay_text,[In] float scale_min,[In] float scale_max,[In] ImVec2 frame_size)</unmanaged>
        /// <unmanaged-short>igPlotEx</unmanaged-short>
        public static unsafe void PlotEx(DearImguiSharp.ImGuiPlotType plotType, System.String label, SharpGen.Runtime.FunctionCallback valuesGetter, System.IntPtr data, System.Int32 valuesCount, System.Int32 valuesOffset, System.String overlayText, System.Single scaleMin, System.Single scaleMax, DearImguiSharp.ImVec2 frameSize)
        {
            System.IntPtr label_;
            System.IntPtr overlayText_;
            label_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(label);
            overlayText_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(overlayText);
            igPlotEx_(unchecked ((System.Int32)plotType), (void *)label_, valuesGetter, (void *)data, valuesCount, valuesOffset, (void *)overlayText_, scaleMin, scaleMax, frameSize);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(label_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(overlayText_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igPlotEx", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igPlotEx_(int param0, void *param1, void *param2, void *param3, int param4, int param5, void *param6, float param7, float param8, DearImguiSharp.ImVec2 param9);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "drawList">No documentation.</param>
        /// <param name = "vertStartIdx">No documentation.</param>
        /// <param name = "vertEndIdx">No documentation.</param>
        /// <param name = "gradientP0">No documentation.</param>
        /// <param name = "gradientP1">No documentation.</param>
        /// <param name = "col0">No documentation.</param>
        /// <param name = "col1">No documentation.</param>
        /// <unmanaged>void igShadeVertsLinearColorGradientKeepAlpha([In] ImDrawList* draw_list,[In] int vert_start_idx,[In] int vert_end_idx,[In] ImVec2 gradient_p0,[In] ImVec2 gradient_p1,[In] unsigned int col0,[In] unsigned int col1)</unmanaged>
        /// <unmanaged-short>igShadeVertsLinearColorGradientKeepAlpha</unmanaged-short>
        public static unsafe void ShadeVertsLinearColorGradientKeepAlpha(ref DearImguiSharp.ImDrawList drawList, System.Int32 vertStartIdx, System.Int32 vertEndIdx, DearImguiSharp.ImVec2 gradientP0, DearImguiSharp.ImVec2 gradientP1, System.UInt32 col0, System.UInt32 col1)
        {
            DearImguiSharp.ImDrawList.__Native drawList_ = default (DearImguiSharp.ImDrawList.__Native);
            drawList.__MarshalTo(ref drawList_);
            igShadeVertsLinearColorGradientKeepAlpha_(&drawList_, vertStartIdx, vertEndIdx, gradientP0, gradientP1, col0, col1);
            drawList.__MarshalFree(ref drawList_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igShadeVertsLinearColorGradientKeepAlpha", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igShadeVertsLinearColorGradientKeepAlpha_(void *param0, int param1, int param2, DearImguiSharp.ImVec2 param3, DearImguiSharp.ImVec2 param4, System.UInt32 param5, System.UInt32 param6);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "drawList">No documentation.</param>
        /// <param name = "vertStartIdx">No documentation.</param>
        /// <param name = "vertEndIdx">No documentation.</param>
        /// <param name = "a">No documentation.</param>
        /// <param name = "b">No documentation.</param>
        /// <param name = "uvA">No documentation.</param>
        /// <param name = "uvB">No documentation.</param>
        /// <param name = "clamp">No documentation.</param>
        /// <unmanaged>void igShadeVertsLinearUV([In] ImDrawList* draw_list,[In] int vert_start_idx,[In] int vert_end_idx,[In] const ImVec2 a,[In] const ImVec2 b,[In] const ImVec2 uv_a,[In] const ImVec2 uv_b,[In] bool clamp)</unmanaged>
        /// <unmanaged-short>igShadeVertsLinearUV</unmanaged-short>
        public static unsafe void ShadeVertsLinearUV(ref DearImguiSharp.ImDrawList drawList, System.Int32 vertStartIdx, System.Int32 vertEndIdx, DearImguiSharp.ImVec2 a, DearImguiSharp.ImVec2 b, DearImguiSharp.ImVec2 uvA, DearImguiSharp.ImVec2 uvB, System.Boolean clamp)
        {
            DearImguiSharp.ImDrawList.__Native drawList_ = default (DearImguiSharp.ImDrawList.__Native);
            System.Byte clamp_;
            drawList.__MarshalTo(ref drawList_);
            clamp_ = (System.Byte)(clamp ? 1 : 0);
            igShadeVertsLinearUV_(&drawList_, vertStartIdx, vertEndIdx, a, b, uvA, uvB, clamp_);
            drawList.__MarshalFree(ref drawList_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igShadeVertsLinearUV", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igShadeVertsLinearUV_(void *param0, int param1, int param2, DearImguiSharp.ImVec2 param3, DearImguiSharp.ImVec2 param4, DearImguiSharp.ImVec2 param5, DearImguiSharp.ImVec2 param6, System.Byte param7);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "window">No documentation.</param>
        /// <unmanaged>void igGcCompactTransientWindowBuffers([In] ImGuiWindow* window)</unmanaged>
        /// <unmanaged-short>igGcCompactTransientWindowBuffers</unmanaged-short>
        public static unsafe void GcCompactTransientWindowBuffers(ref DearImguiSharp.ImGuiWindow window)
        {
            DearImguiSharp.ImGuiWindow.__Native window_ = default (DearImguiSharp.ImGuiWindow.__Native);
            window.__MarshalTo(ref window_);
            igGcCompactTransientWindowBuffers_(&window_);
            window.__MarshalFree(ref window_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGcCompactTransientWindowBuffers", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igGcCompactTransientWindowBuffers_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "window">No documentation.</param>
        /// <unmanaged>void igGcAwakeTransientWindowBuffers([In] ImGuiWindow* window)</unmanaged>
        /// <unmanaged-short>igGcAwakeTransientWindowBuffers</unmanaged-short>
        public static unsafe void GcAwakeTransientWindowBuffers(ref DearImguiSharp.ImGuiWindow window)
        {
            DearImguiSharp.ImGuiWindow.__Native window_ = default (DearImguiSharp.ImGuiWindow.__Native);
            window.__MarshalTo(ref window_);
            igGcAwakeTransientWindowBuffers_(&window_);
            window.__MarshalFree(ref window_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGcAwakeTransientWindowBuffers", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igGcAwakeTransientWindowBuffers_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "col">No documentation.</param>
        /// <unmanaged>void igDebugDrawItemRect([In] unsigned int col)</unmanaged>
        /// <unmanaged-short>igDebugDrawItemRect</unmanaged-short>
        public static unsafe void DebugDrawItemRect(System.UInt32 col)
        {
            igDebugDrawItemRect_(col);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igDebugDrawItemRect", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igDebugDrawItemRect_(System.UInt32 param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void igDebugStartItemPicker()</unmanaged>
        /// <unmanaged-short>igDebugStartItemPicker</unmanaged-short>
        public static unsafe void DebugStartItemPicker()
        {
            igDebugStartItemPicker_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igDebugStartItemPicker", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igDebugStartItemPicker_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "atlas">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool igImFontAtlasBuildWithStbTruetype([In] ImFontAtlas* atlas)</unmanaged>
        /// <unmanaged-short>igImFontAtlasBuildWithStbTruetype</unmanaged-short>
        public static unsafe System.Boolean ImFontAtlasBuildWithStbTruetype(ref DearImguiSharp.ImFontAtlas atlas)
        {
            DearImguiSharp.ImFontAtlas.__Native atlas_ = default (DearImguiSharp.ImFontAtlas.__Native);
            System.Boolean __result__;
            System.Byte __result__native;
            atlas.__MarshalTo(ref atlas_);
            __result__native = igImFontAtlasBuildWithStbTruetype_(&atlas_);
            __result__ = __result__native != 0;
            atlas.__MarshalFree(ref atlas_);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImFontAtlasBuildWithStbTruetype", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte igImFontAtlasBuildWithStbTruetype_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "atlas">No documentation.</param>
        /// <unmanaged>void igImFontAtlasBuildRegisterDefaultCustomRects([In] ImFontAtlas* atlas)</unmanaged>
        /// <unmanaged-short>igImFontAtlasBuildRegisterDefaultCustomRects</unmanaged-short>
        public static unsafe void ImFontAtlasBuildRegisterDefaultCustomRects(ref DearImguiSharp.ImFontAtlas atlas)
        {
            DearImguiSharp.ImFontAtlas.__Native atlas_ = default (DearImguiSharp.ImFontAtlas.__Native);
            atlas.__MarshalTo(ref atlas_);
            igImFontAtlasBuildRegisterDefaultCustomRects_(&atlas_);
            atlas.__MarshalFree(ref atlas_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImFontAtlasBuildRegisterDefaultCustomRects", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igImFontAtlasBuildRegisterDefaultCustomRects_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "atlas">No documentation.</param>
        /// <param name = "font">No documentation.</param>
        /// <param name = "fontConfig">No documentation.</param>
        /// <param name = "ascent">No documentation.</param>
        /// <param name = "descent">No documentation.</param>
        /// <unmanaged>void igImFontAtlasBuildSetupFont([In] ImFontAtlas* atlas,[In] ImFont* font,[In] ImFontConfig* font_config,[In] float ascent,[In] float descent)</unmanaged>
        /// <unmanaged-short>igImFontAtlasBuildSetupFont</unmanaged-short>
        public static unsafe void ImFontAtlasBuildSetupFont(ref DearImguiSharp.ImFontAtlas atlas, ref DearImguiSharp.ImFont font, ref DearImguiSharp.ImFontConfig fontConfig, System.Single ascent, System.Single descent)
        {
            DearImguiSharp.ImFontAtlas.__Native atlas_ = default (DearImguiSharp.ImFontAtlas.__Native);
            DearImguiSharp.ImFontConfig.__Native fontConfig_ = default (DearImguiSharp.ImFontConfig.__Native);
            atlas.__MarshalTo(ref atlas_);
            fontConfig.__MarshalTo(ref fontConfig_);
            fixed (void *font_ = &font)
                igImFontAtlasBuildSetupFont_(&atlas_, font_, &fontConfig_, ascent, descent);
            atlas.__MarshalFree(ref atlas_);
            fontConfig.__MarshalFree(ref fontConfig_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImFontAtlasBuildSetupFont", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igImFontAtlasBuildSetupFont_(void *param0, void *param1, void *param2, float param3, float param4);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "atlas">No documentation.</param>
        /// <param name = "stbrpContextOpaque">No documentation.</param>
        /// <unmanaged>void igImFontAtlasBuildPackCustomRects([In] ImFontAtlas* atlas,[In] void* stbrp_context_opaque)</unmanaged>
        /// <unmanaged-short>igImFontAtlasBuildPackCustomRects</unmanaged-short>
        public static unsafe void ImFontAtlasBuildPackCustomRects(ref DearImguiSharp.ImFontAtlas atlas, System.IntPtr stbrpContextOpaque)
        {
            DearImguiSharp.ImFontAtlas.__Native atlas_ = default (DearImguiSharp.ImFontAtlas.__Native);
            atlas.__MarshalTo(ref atlas_);
            igImFontAtlasBuildPackCustomRects_(&atlas_, (void *)stbrpContextOpaque);
            atlas.__MarshalFree(ref atlas_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImFontAtlasBuildPackCustomRects", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igImFontAtlasBuildPackCustomRects_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "atlas">No documentation.</param>
        /// <unmanaged>void igImFontAtlasBuildFinish([In] ImFontAtlas* atlas)</unmanaged>
        /// <unmanaged-short>igImFontAtlasBuildFinish</unmanaged-short>
        public static unsafe void ImFontAtlasBuildFinish(ref DearImguiSharp.ImFontAtlas atlas)
        {
            DearImguiSharp.ImFontAtlas.__Native atlas_ = default (DearImguiSharp.ImFontAtlas.__Native);
            atlas.__MarshalTo(ref atlas_);
            igImFontAtlasBuildFinish_(&atlas_);
            atlas.__MarshalFree(ref atlas_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImFontAtlasBuildFinish", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igImFontAtlasBuildFinish_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "outTable">No documentation.</param>
        /// <param name = "inMultiplyFactor">No documentation.</param>
        /// <unmanaged>void igImFontAtlasBuildMultiplyCalcLookupTable([In] unsigned char* out_table,[In] float in_multiply_factor)</unmanaged>
        /// <unmanaged-short>igImFontAtlasBuildMultiplyCalcLookupTable</unmanaged-short>
        public static unsafe void ImFontAtlasBuildMultiplyCalcLookupTable(System.Byte outTable, System.Single inMultiplyFactor)
        {
            igImFontAtlasBuildMultiplyCalcLookupTable_(&outTable, inMultiplyFactor);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImFontAtlasBuildMultiplyCalcLookupTable", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igImFontAtlasBuildMultiplyCalcLookupTable_(void *param0, float param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "table">No documentation.</param>
        /// <param name = "ixelsRef">No documentation.</param>
        /// <param name = "x">No documentation.</param>
        /// <param name = "y">No documentation.</param>
        /// <param name = "w">No documentation.</param>
        /// <param name = "h">No documentation.</param>
        /// <param name = "stride">No documentation.</param>
        /// <unmanaged>void igImFontAtlasBuildMultiplyRectAlpha8([In] const unsigned char* table,[In] unsigned char* pixels,[In] int x,[In] int y,[In] int w,[In] int h,[In] int stride)</unmanaged>
        /// <unmanaged-short>igImFontAtlasBuildMultiplyRectAlpha8</unmanaged-short>
        public static unsafe void ImFontAtlasBuildMultiplyRectAlpha8(System.Byte table, System.Byte ixelsRef, System.Int32 x, System.Int32 y, System.Int32 w, System.Int32 h, System.Int32 stride)
        {
            igImFontAtlasBuildMultiplyRectAlpha8_(&table, &ixelsRef, x, y, w, h, stride);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igImFontAtlasBuildMultiplyRectAlpha8", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igImFontAtlasBuildMultiplyRectAlpha8_(void *param0, void *param1, int param2, int param3, int param4, int param5, int param6);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "fmt">No documentation.</param>
        /// <unmanaged>void igLogText([In] const char* fmt)</unmanaged>
        /// <unmanaged-short>igLogText</unmanaged-short>
        public static unsafe void LogText(System.String fmt)
        {
            System.IntPtr fmt_;
            fmt_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(fmt);
            igLogText_((void *)fmt_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(fmt_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igLogText", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igLogText_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "buffer">No documentation.</param>
        /// <param name = "fmt">No documentation.</param>
        /// <unmanaged>void ImGuiTextBuffer_appendf([In] ImGuiTextBuffer* buffer,[In] const char* fmt)</unmanaged>
        /// <unmanaged-short>ImGuiTextBuffer_appendf</unmanaged-short>
        public static unsafe void ImGuiTextBufferAppendf(ref DearImguiSharp.ImGuiTextBuffer buffer, System.String fmt)
        {
            DearImguiSharp.ImGuiTextBuffer.__Native buffer_ = default (DearImguiSharp.ImGuiTextBuffer.__Native);
            System.IntPtr fmt_;
            buffer.__MarshalTo(ref buffer_);
            fmt_ = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(fmt);
            ImGuiTextBuffer_appendf_(&buffer_, (void *)fmt_);
            buffer.__MarshalFree(ref buffer_);
            System.Runtime.InteropServices.Marshal.FreeHGlobal(fmt_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGuiTextBuffer_appendf", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGuiTextBuffer_appendf_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>float igGET_FLT_MAX()</unmanaged>
        /// <unmanaged-short>igGET_FLT_MAX</unmanaged-short>
        public static unsafe System.Single GetFltMax()
        {
            System.Single __result__;
            __result__ = igGET_FLT_MAX_();
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igGET_FLT_MAX", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern float igGET_FLT_MAX_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "r">No documentation.</param>
        /// <param name = "g">No documentation.</param>
        /// <param name = "b">No documentation.</param>
        /// <param name = "outH">No documentation.</param>
        /// <param name = "outS">No documentation.</param>
        /// <param name = "outV">No documentation.</param>
        /// <unmanaged>void igColorConvertRGBtoHSV([In] float r,[In] float g,[In] float b,[In] float* out_h,[In] float* out_s,[In] float* out_v)</unmanaged>
        /// <unmanaged-short>igColorConvertRGBtoHSV</unmanaged-short>
        public static unsafe void ColorConvertRGBtoHSV(System.Single r, System.Single g, System.Single b, System.Single outH, System.Single outS, System.Single outV)
        {
            igColorConvertRGBtoHSV_(r, g, b, &outH, &outS, &outV);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igColorConvertRGBtoHSV", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igColorConvertRGBtoHSV_(float param0, float param1, float param2, void *param3, void *param4, void *param5);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "h">No documentation.</param>
        /// <param name = "s">No documentation.</param>
        /// <param name = "v">No documentation.</param>
        /// <param name = "outR">No documentation.</param>
        /// <param name = "outG">No documentation.</param>
        /// <param name = "outB">No documentation.</param>
        /// <unmanaged>void igColorConvertHSVtoRGB([In] float h,[In] float s,[In] float v,[In] float* out_r,[In] float* out_g,[In] float* out_b)</unmanaged>
        /// <unmanaged-short>igColorConvertHSVtoRGB</unmanaged-short>
        public static unsafe void ColorConvertHSVtoRGB(System.Single h, System.Single s, System.Single v, System.Single outR, System.Single outG, System.Single outB)
        {
            igColorConvertHSVtoRGB_(h, s, v, &outR, &outG, &outB);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "igColorConvertHSVtoRGB", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void igColorConvertHSVtoRGB_(float param0, float param1, float param2, void *param3, void *param4, void *param5);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>ImVector_ImWchar* ImVector_ImWchar_create()</unmanaged>
        /// <unmanaged-short>ImVector_ImWchar_create</unmanaged-short>
        public static unsafe DearImguiSharp.ImVectorImWchar ImVectorImWcharCreate()
        {
            DearImguiSharp.ImVectorImWchar __result__;
            ImVector_ImWchar_create_(&__result__);
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImVector_ImWchar_create", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void *ImVector_ImWchar_create_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "self">No documentation.</param>
        /// <unmanaged>void ImVector_ImWchar_destroy([In] ImVector_ImWchar* self)</unmanaged>
        /// <unmanaged-short>ImVector_ImWchar_destroy</unmanaged-short>
        public static unsafe void ImVectorImWcharDestroy(DearImguiSharp.ImVectorImWchar self)
        {
            ImVector_ImWchar_destroy_(&self);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImVector_ImWchar_destroy", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImVector_ImWchar_destroy_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "@ref">No documentation.</param>
        /// <unmanaged>void ImVector_ImWchar_Init([In] ImVector_ImWchar* p)</unmanaged>
        /// <unmanaged-short>ImVector_ImWchar_Init</unmanaged-short>
        public static unsafe void ImVectorImWcharInit(DearImguiSharp.ImVectorImWchar @ref)
        {
            ImVector_ImWchar_Init_(&@ref);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImVector_ImWchar_Init", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImVector_ImWchar_Init_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "@ref">No documentation.</param>
        /// <unmanaged>void ImVector_ImWchar_UnInit([In] ImVector_ImWchar* p)</unmanaged>
        /// <unmanaged-short>ImVector_ImWchar_UnInit</unmanaged-short>
        public static unsafe void ImVectorImWcharUnInit(DearImguiSharp.ImVectorImWchar @ref)
        {
            ImVector_ImWchar_UnInit_(&@ref);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImVector_ImWchar_UnInit", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImVector_ImWchar_UnInit_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "hwnd">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool ImGui_ImplWin32_Init([In] void* hwnd)</unmanaged>
        /// <unmanaged-short>ImGui_ImplWin32_Init</unmanaged-short>
        public static unsafe System.Boolean ImGuiImplWin32Init(System.IntPtr hwnd)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = ImGui_ImplWin32_Init_((void *)hwnd);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGui_ImplWin32_Init", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte ImGui_ImplWin32_Init_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void ImGui_ImplWin32_Shutdown()</unmanaged>
        /// <unmanaged-short>ImGui_ImplWin32_Shutdown</unmanaged-short>
        public static unsafe void ImGuiImplWin32Shutdown()
        {
            ImGui_ImplWin32_Shutdown_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGui_ImplWin32_Shutdown", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGui_ImplWin32_Shutdown_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void ImGui_ImplWin32_NewFrame()</unmanaged>
        /// <unmanaged-short>ImGui_ImplWin32_NewFrame</unmanaged-short>
        public static unsafe void ImGuiImplWin32NewFrame()
        {
            ImGui_ImplWin32_NewFrame_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGui_ImplWin32_NewFrame", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGui_ImplWin32_NewFrame_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "device">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool ImGui_ImplDX9_Init([In] IDirect3DDevice9* device)</unmanaged>
        /// <unmanaged-short>ImGui_ImplDX9_Init</unmanaged-short>
        public static unsafe System.Boolean ImGuiImplDX9Init(System.IntPtr device)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = ImGui_ImplDX9_Init_((void *)device);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGui_ImplDX9_Init", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte ImGui_ImplDX9_Init_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void ImGui_ImplDX9_Shutdown()</unmanaged>
        /// <unmanaged-short>ImGui_ImplDX9_Shutdown</unmanaged-short>
        public static unsafe void ImGuiImplDX9Shutdown()
        {
            ImGui_ImplDX9_Shutdown_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGui_ImplDX9_Shutdown", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGui_ImplDX9_Shutdown_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void ImGui_ImplDX9_NewFrame()</unmanaged>
        /// <unmanaged-short>ImGui_ImplDX9_NewFrame</unmanaged-short>
        public static unsafe void ImGuiImplDX9NewFrame()
        {
            ImGui_ImplDX9_NewFrame_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGui_ImplDX9_NewFrame", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGui_ImplDX9_NewFrame_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "drawData">No documentation.</param>
        /// <unmanaged>void ImGui_ImplDX9_RenderDrawData([In] ImDrawData* draw_data)</unmanaged>
        /// <unmanaged-short>ImGui_ImplDX9_RenderDrawData</unmanaged-short>
        public static unsafe void ImGuiImplDX9RenderDrawData(ref DearImguiSharp.ImDrawData drawData)
        {
            fixed (void *drawData_ = &drawData)
                ImGui_ImplDX9_RenderDrawData_(drawData_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGui_ImplDX9_RenderDrawData", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGui_ImplDX9_RenderDrawData_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool ImGui_ImplDX9_CreateDeviceObjects()</unmanaged>
        /// <unmanaged-short>ImGui_ImplDX9_CreateDeviceObjects</unmanaged-short>
        public static unsafe System.Boolean ImGuiImplDX9CreateDeviceObjects()
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = ImGui_ImplDX9_CreateDeviceObjects_();
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGui_ImplDX9_CreateDeviceObjects", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte ImGui_ImplDX9_CreateDeviceObjects_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void ImGui_ImplDX9_InvalidateDeviceObjects()</unmanaged>
        /// <unmanaged-short>ImGui_ImplDX9_InvalidateDeviceObjects</unmanaged-short>
        public static unsafe void ImGuiImplDX9InvalidateDeviceObjects()
        {
            ImGui_ImplDX9_InvalidateDeviceObjects_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGui_ImplDX9_InvalidateDeviceObjects", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGui_ImplDX9_InvalidateDeviceObjects_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "device">No documentation.</param>
        /// <param name = "deviceContext">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool ImGui_ImplDX11_Init([In] ID3D11Device* device,[In] ID3D11DeviceContext* device_context)</unmanaged>
        /// <unmanaged-short>ImGui_ImplDX11_Init</unmanaged-short>
        public static unsafe System.Boolean ImGuiImplDX11Init(System.IntPtr device, System.IntPtr deviceContext)
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = ImGui_ImplDX11_Init_((void *)device, (void *)deviceContext);
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGui_ImplDX11_Init", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte ImGui_ImplDX11_Init_(void *param0, void *param1);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void ImGui_ImplDX11_Shutdown()</unmanaged>
        /// <unmanaged-short>ImGui_ImplDX11_Shutdown</unmanaged-short>
        public static unsafe void ImGuiImplDX11Shutdown()
        {
            ImGui_ImplDX11_Shutdown_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGui_ImplDX11_Shutdown", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGui_ImplDX11_Shutdown_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void ImGui_ImplDX11_NewFrame()</unmanaged>
        /// <unmanaged-short>ImGui_ImplDX11_NewFrame</unmanaged-short>
        public static unsafe void ImGuiImplDX11NewFrame()
        {
            ImGui_ImplDX11_NewFrame_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGui_ImplDX11_NewFrame", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGui_ImplDX11_NewFrame_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "drawData">No documentation.</param>
        /// <unmanaged>void ImGui_ImplDX11_RenderDrawData([In] ImDrawData* draw_data)</unmanaged>
        /// <unmanaged-short>ImGui_ImplDX11_RenderDrawData</unmanaged-short>
        public static unsafe void ImGuiImplDX11RenderDrawData(ref DearImguiSharp.ImDrawData drawData)
        {
            fixed (void *drawData_ = &drawData)
                ImGui_ImplDX11_RenderDrawData_(drawData_);
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGui_ImplDX11_RenderDrawData", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGui_ImplDX11_RenderDrawData_(void *param0);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void ImGui_ImplDX11_InvalidateDeviceObjects()</unmanaged>
        /// <unmanaged-short>ImGui_ImplDX11_InvalidateDeviceObjects</unmanaged-short>
        public static unsafe void ImGuiImplDX11InvalidateDeviceObjects()
        {
            ImGui_ImplDX11_InvalidateDeviceObjects_();
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGui_ImplDX11_InvalidateDeviceObjects", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern void ImGui_ImplDX11_InvalidateDeviceObjects_();
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>bool ImGui_ImplDX11_CreateDeviceObjects()</unmanaged>
        /// <unmanaged-short>ImGui_ImplDX11_CreateDeviceObjects</unmanaged-short>
        public static unsafe System.Boolean ImGuiImplDX11CreateDeviceObjects()
        {
            System.Boolean __result__;
            System.Byte __result__native;
            __result__native = ImGui_ImplDX11_CreateDeviceObjects_();
            __result__ = __result__native != 0;
            return __result__;
        }

        [System.Runtime.InteropServices.DllImportAttribute("cimgui.dll", EntryPoint = "ImGui_ImplDX11_CreateDeviceObjects", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        private unsafe static extern System.Byte ImGui_ImplDX11_CreateDeviceObjects_();
    }
}